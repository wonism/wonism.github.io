{"version":3,"sources":["webpack:///./src/store/ideas/selectors.js","webpack:///./src/pages/ideas/index.jsx","webpack:///./src/store/ideas/actions.js","webpack:///./src/constants/index.js","webpack:///./src/utils/formattedDate.js","webpack:///./src/store/ideas/actionTypes.js","webpack:///./src/components/Common/constants.js","webpack:///./src/components/Common/PostWrapper/index.js"],"names":["selectors_getIdeasSubState","fp_default","a","get","selectors_getMenu","Object","lib","createSelector","selectors_getData","selectors_isFailed","I","t","y","A","o","R","ideas_IdeasWrapper","PostWrapper","extend","ideas_templateObject","ideas_Button","styled_components_browser_es","button","ideas_templateObject2","Common_constants","ideas_Ideas","componentDidMount","this","props","fetchIdeas","render","_props","setIdeasMenu","menu","data","isFailed","react_default","createElement","className","constants","TODOS","onClick","capitalize","TIL","BOOKMARKS","isObject","flow","toLower","map","element","keys","includes","key","content","formattedDate","createdAt","link","href","target","rel","name","dist_default","markdown","e","react","PureComponent","propTypes","prop_types_default","func","isRequired","shape","todos","array","til","bookmarks","bool","oneOf","defaultProps","__webpack_exports__","default","es","b","state","dispatch","type","actionTypes","d","exports","CONTENT_PER_PAGE","PAGE_PER_SCREEN","POST","PORTFOLIO","RESUME","SITE_URL","513","n","r","str","_fp$split","lodash_fp__WEBPACK_IMPORTED_MODULE_1___default","split","date","time","slice","join","FETCH_IDEAS","FETCH_IDEAS_SUCCESS","FETCH_IDEAS_FAILED","SET_IDEAS_MENU","554","PRIMARY_COLOR","SECONDARY_COLOR","635","i","styled_components__WEBPACK_IMPORTED_MODULE_1__","section","_templateObject","c"],"mappings":"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","file":"component---src-pages-ideas-index-jsx-61288810724b31b4f8d1.js","sourcesContent":["import { createSelector } from 'reselect';\nimport fp from 'lodash/fp';\n\nconst getIdeasSubState = fp.get('ideas');\n\nexport const getMenu = createSelector(\n  getIdeasSubState,\n  fp.get('menu')\n);\n\nexport const getData = createSelector(\n  getIdeasSubState,\n  fp.get('data')\n);\n\nexport const isFailed = createSelector(\n  getIdeasSubState,\n  fp.get('failed')\n);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport MarkdownRenderer from 'react-markdown-renderer';\nimport styled from 'styled-components';\nimport fp from 'lodash/fp';\nimport { TODOS, TIL, BOOKMARKS } from '~/constants';\nimport { PRIMARY_COLOR } from '~/components/Common/constants';\nimport { fetchIdeas, setIdeasMenu } from '~/store/ideas/actions';\nimport * as ideasSelectors from '~/store/ideas/selectors';\nimport PostWrapper from '~/components/Common/PostWrapper';\nimport formattedDate from '~/utils/formattedDate';\n\nconst IdeasWrapper = PostWrapper.extend`\n  margin: auto;\n  padding: 120px 0 20px;\n  max-width: 720px;\n  text-align: center;\n  @media (max-width: 414px) {\n    padding: 70px 16px 20px;\n  }\n\n  ul {\n    text-align: left;\n  }\n\n  li {\n    margin: 16px 0 0;\n    list-style: decimal;\n    font-size: 14px;\n    font-weight: 400;\n  }\n\n  pre {\n    margin: 16px 0 0;\n  }\n\n  code {\n    color: #555;\n    font-weight: 300;\n  }\n\n  small {\n    display: block;\n    margin: 8px 0;\n    font-size: 10px;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 2px 8px;\n  color: ${PRIMARY_COLOR};\n  background-color: #fff;\n  border-width: 1px;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: ${PRIMARY_COLOR};\n  outline: 0;\n  font-size: 14px;\n\n  &:first-child {\n    border-left-width: 1px;\n  }\n\n  &.active,\n  &:hover {\n    color: #fff;\n    background-color: ${PRIMARY_COLOR};\n  }\n`;\n\nclass Ideas extends PureComponent {\n  static propTypes = {\n    fetchIdeas: PropTypes.func.isRequired,\n    setIdeasMenu: PropTypes.func.isRequired,\n    data: PropTypes.shape({\n      todos: PropTypes.array,\n      til: PropTypes.array,\n      bookmarks: PropTypes.array,\n    }),\n    isFailed: PropTypes.bool.isRequired,\n    menu: PropTypes.oneOf([TODOS, TIL, BOOKMARKS]).isRequired,\n  };\n\n  static defaultProps = {\n    data: null,\n  };\n\n  componentDidMount() {\n    this.props.fetchIdeas();\n  }\n\n  render() {\n    const { setIdeasMenu, menu, data, isFailed } = this.props;\n\n    if (isFailed) {\n      return (\n        <IdeasWrapper>\n          Failed to fetch datas\n        </IdeasWrapper>\n      );\n    }\n\n    return (\n      <IdeasWrapper>\n        <Button\n          className={menu === TODOS ? 'active' : ''}\n          onClick={() => { setIdeasMenu(TODOS); }}\n        >\n          {fp.capitalize(TODOS)}\n        </Button>\n        <Button\n          className={menu === TIL ? 'active' : ''}\n          onClick={() => { setIdeasMenu(TIL); }}\n        >\n          {fp.capitalize(TIL)}\n        </Button>\n        <Button\n          className={menu === BOOKMARKS ? 'active' : ''}\n          onClick={() => { setIdeasMenu(BOOKMARKS); }}\n        >\n          {fp.capitalize(BOOKMARKS)}\n        </Button>\n        <ul>\n          {fp.isObject(data) ? (\n            fp.flow(\n              fp.get(fp.toLower(menu)),\n              fp.map((element) => {\n                // todos\n                if (fp.flow(fp.keys, fp.includes('doneAt'))(element)) {\n                  return (\n                    <li key={element.content}>\n                      {element.content}\n                      <br />\n                      <small>{formattedDate(element.createdAt)}</small>\n                    </li>\n                  );\n                }\n\n                // bookmarks\n                if (fp.flow(fp.keys, fp.includes('link'))(element)) {\n                  return (\n                    <li key={element.link}>\n                      <a href={element.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {element.name}\n                      </a>\n                    </li>\n                  );\n                }\n\n                // til\n                if (fp.flow(fp.keys, fp.includes('createdAt'))(element)) {\n                  return (\n                    <li key={element.content}>\n                      <MarkdownRenderer markdown={element.content} />\n                      <small>{formattedDate(element.createdAt)}</small>\n                    </li>\n                  );\n                }\n\n                return null;\n              })\n            )(data)\n          ) : null}\n        </ul>\n      </IdeasWrapper>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    menu: ideasSelectors.getMenu(state),\n    data: ideasSelectors.getData(state),\n    isFailed: ideasSelectors.isFailed(state),\n  }),\n  {\n    fetchIdeas,\n    setIdeasMenu,\n  }\n)(Ideas);\n","import {\n  FETCH_IDEAS,\n  SET_IDEAS_MENU,\n} from './actionTypes';\n\nexport const fetchIdeas = () =>\n  dispatch =>\n    dispatch({\n      type: FETCH_IDEAS,\n    });\n\nexport const setIdeasMenu = menu =>\n  dispatch =>\n    dispatch({\n      type: SET_IDEAS_MENU,\n      menu,\n    });\n","exports.CONTENT_PER_PAGE = 8;\nexports.PAGE_PER_SCREEN = 4;\n\nexports.POST = 'post';\nexports.PORTFOLIO = 'portfolio';\nexports.RESUME = 'resume';\n\nexports.SITE_URL = 'https://wonism.github.io';\n\nexports.TODOS = 'TODOS';\nexports.TIL = 'TIL';\nexports.BOOKMARKS = 'BOOKMARKS';\n","import fp from 'lodash/fp';\n\nexport default (str) => {\n  const [date, time] = fp.split('T')(str);\n\n  return `${date} ${fp.flow(fp.slice(0, 5), fp.join(''))(time)}`;\n};\n","export const FETCH_IDEAS = 'FETCH_IDEAS';\nexport const FETCH_IDEAS_SUCCESS = 'FETCH_IDEAS_SUCCESS';\nexport const FETCH_IDEAS_FAILED = 'FETCH_IDEAS_FAILED';\n\nexport const SET_IDEAS_MENU = 'SET_IDEAS_MENU';\n","export const PRIMARY_COLOR = '#3B9CFF';\nexport const SECONDARY_COLOR = '#3B9CFF';\n","import styled from 'styled-components';\n\nconst PostWrapper = styled.section`\n  margin: auto;\n  padding: 120px 0 0;\n  max-width: 720px;\n  font-size: 14px;\n  @media (max-width: 414px) {\n    padding: 70px 16px 0;\n  }\n\n  &:before,\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n\n  h1 {\n    margin: .67em 0;\n    font-size: 36px;\n  }\n\n  time {\n    margin: 1em 0;\n    font-size: 14px;\n  }\n`;\n\nexport default PostWrapper;\n"],"sourceRoot":""}