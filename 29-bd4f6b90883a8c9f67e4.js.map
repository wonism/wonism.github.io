{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/obj.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt.js","webpack:///./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx.js","webpack:///./node_modules/pdfjs-dist/lib/core/crypto.js","webpack:///./node_modules/pdfjs-dist/lib/core/cff_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/standard_fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/unicode.js","webpack:///./node_modules/pdfjs-dist/lib/core/function.js","webpack:///./node_modules/pdfjs-dist/lib/pdf.worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./node_modules/pdfjs-dist/lib/core/document.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpg.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/annotation.js","webpack:///./node_modules/pdfjs-dist/lib/core/evaluator.js","webpack:///./node_modules/pdfjs-dist/lib/core/cmap.js","webpack:///./node_modules/pdfjs-dist/lib/core/fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/charsets.js","webpack:///./node_modules/pdfjs-dist/lib/core/font_renderer.js","webpack:///./node_modules/pdfjs-dist/lib/core/type1_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/pattern.js","webpack:///./node_modules/pdfjs-dist/lib/core/bidi.js","webpack:///./node_modules/pdfjs-dist/lib/core/metrics.js","webpack:///./node_modules/pdfjs-dist/lib/core/ps_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./node_modules/pdfjs-dist/lib/core/image.js","webpack:///./node_modules/pdfjs-dist/lib/core/primitives.js","webpack:///./node_modules/pdfjs-dist/lib/core/stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/colorspace.js","webpack:///./node_modules/pdfjs-dist/lib/core/encodings.js","webpack:///./node_modules/pdfjs-dist/lib/core/parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/operator_list.js","webpack:///./node_modules/pdfjs-dist/lib/core/glyphlist.js"],"names":["Object","defineProperty","exports","value","ChunkedStreamManager","ChunkedStream","undefined","_util","__webpack_require__","length","chunkSize","manager","this","bytes","Uint8Array","start","pos","end","loadedChunks","numChunksLoaded","numChunks","Math","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","prototype","getMissingChunks","chunks","chunk","n","push","getBaseStreams","allChunksLoaded","onReceiveData","begin","byteLength","Error","set","curChunk","beginChunk","floor","endChunk","onReceiveProgressiveData","data","position","ensureByte","MissingDataException","ensureRange","nextEmptyChunk","i","hasChunk","isEmpty","getByte","getUint16","b0","b1","getInt32","getBytes","strEnd","subarray","peekByte","peekedByte","peekBytes","getByteRange","skip","reset","moveStart","makeSubStream","dict","ChunkedStreamSubstream","create","missingChunks","subStream","pdfNetworkStream","args","rangeChunkSize","stream","url","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","createPromiseCapability","onLoadedStream","promise","sendRequest","_this","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","Promise","resolve","reject","read","then","readChunk","done","arrayByteLength","chunkData","arraysToBytes","e","requestAllChunks","_requestChunks","ii","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","min","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","indexOf","sort","a","b","groupedChunks","prevChunk","bytesLoaded","send","total","isProgressive","loadedRequests","requestIds","lastChunk","Number","isInteger","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_typeof","Symbol","iterator","obj","constructor","_slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","sliceIterator","TypeError","_primitives","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","xref","pageFactory","catDict","getCatalogObj","isDict","FormatError","fontCache","RefSetCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","getRaw","isRef","shadow","encryptMetadata","encrypt","fetch","type","get","subtype","isName","stringToUTF8String","bytesToString","info","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","ex","warn","root","items","queue","parent","processed","RefSet","put","blackColor","shift","outlineDict","fetchIfRef","has","dest","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","color","getArray","rgbColor","ColorSpace","singletons","rgb","getRgb","outlineItem","unsafeUrl","newWindow","stringToPDFString","count","bold","italic","numPages","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","forEach","key","names","NameTree","getAll","name","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","s","p","isString","st","Util","toRoman","baseCharCode","letterIndex","character","String","fromCharCode","charBuf","j","jj","join","pageMode","attachments","fs","serializable","javaScript","appendIfJavaScriptDict","jsDict","js","isStream","openactionDict","actionType","action","cleanup","clear","promises","all","translatedFonts","translated","getPage","pageIndex","_this2","getPageDict","_ref","_ref2","ref","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","objId","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","isRefsEqual","getAsync","kidPromises","found","kid","num","pagesBeforeRef","params","actionName","addDefaultProtocolToUrl","urlDict","remoteDest","baseUrl","split","JSON","stringify","isBool","namedAction","jsAction","jsUrl","RegExp","exec","tryConvertUrlEncoding","absoluteUrl","createValidAbsoluteUrl","href","entries","xrefstms","cache","stats","streamTypes","fontTypes","setStartXRef","startXRef","startXRefQueue","parse","recoveryMode","trailerDict","indexObjects","readXRef","assignXref","trailer","ids","fileId","suppressEncryption","CipherTransformFactory","password","processXRefTable","parser","tableState","entryNum","streamPos","lexer","parserBuf1","buf1","parserBuf2","buf2","readXRefTable","isCmd","getObj","firstEntryNum","entryCount","first","entry","offset","gen","free","uncompressed","processXRefStream","streamParameters","byteWidths","range","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","splice","LF","CR","LT","readToken","token","ch","skipUntil","what","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","buffer","trailers","xrefStms","m","test","contentLength","startPos","endPos","checkPos","max","tokenStr","objToken","content","xrefTagOffset","Parser","Lexer","InvalidPDFException","startXRefParsedCache","topDict","XRefParseException","getEntry","xrefEntry","cacheEntry","Dict","toString","fetchUncompressed","fetchCompressed","obj1","obj2","obj3","parseInt","cmd","substring","isNaN","createCipherTransform","tableOffset","Ref","allowStreams","fetchIfRefAsync","streamManager","tryFetch","NameOrNumberTree","unreachable","_type","l","r","kidsOrEntries","loopCount","limits","currentKey","inherit","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","getKeys","rawValue","_ii","keys","refSet","load","_walk","_this3","nodesToRevisit","pendingRequests","baseStreams","foundMissingData","_i2","_ii2","remove","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","source","options","arguments","eof","encoding","eoline","byteAlign","columns","rows","eoblock","black","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","code1","_lookBits","_eatBits","readNextChar","refPos","blackPixels","bits","code2","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","c","a1","_findTableCode","table","limit","limitValue","code","result","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","d","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","msg","message","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","width","height","calculateTileGrids","context","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","q","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","index","layersCount","codingStyleDefaultParameters","componentsCount","maxDecompositionLevelsCount","decompositionLevelsCount","k","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","Int32Array","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","py","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","scale","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","bufferSize","skipNextBit","readBits","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","charAt","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","totalLength","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","sign","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","transform","ReversibleTransform","IrreversibleTransform","subbandCoefficients","Float32Array","mu","epsilon","gainLog2","pow","calculate","left","top","initializeTile","qcdOrQcc","QCC","QCD","COC","readUint16","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","bitsPerComponent","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","slice","resultImages","transformedTiles","y2","tile0","out","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","g","transformComponents","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","Uint16Array","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","size","j1","j2","hl_lh_hh","u","v","llWidth","llHeight","llItems","rowBuffer","filter","numBuffers","colBuffers","currentBuffer","call","x","current","len","alpha","beta","gamma","K","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_stream","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h1","h2","h3","paddedLength","padded","w","f","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","y","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","h","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","rcon","inv_s","mixCol","mix","decrypt128","input","t","state","s0","s1","s2","s3","encrypt128","cipherKey","t3","t4","expandKey128","bufferPosition","decryptBlock2","finalize","sourceLength","bufferLength","iv","plain","outputLength","lastBlock","psLen","cipher","decrypt256","encrypt256","expandKey256","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","array","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","createStream","DecryptStream","decryptString","stringToBytes","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","Name","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","PasswordException","PasswordResponses","NEED_PASSWORD","decodeUserPassword","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","id","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","bytesLength","major","minor","hdrSize","offSize","parseOperand","str","lookup","b2","parseFloat","parseFloatOperand","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","hints","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","ExpertEncoding","StandardEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","rawBytes","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","values","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","dataOffset","offset0","offset1","offset2","offset3","offset4","compile","concat","compileHeader","compileNameIndex","base","subDict","matrix","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","round","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","kk","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getLookupTableFactory","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","charCodeAt","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","isEvalSupported","_ref$isEvalSupported","instance","_classCallCheck","fn","PDFFunction","fnObj","parseArray","IR","fromIR","getIR","getSampleArray","outputSize","bps","codeSize","codeBuf","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","fnArray","src","srcOffset","destOffset","_ref6","toMultiArray","inputLength","domain","inputSize","encode","decode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","tmpBuf","clip","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","Function","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","counter","abs","atan","cos","log","LN10","sin","sqrt","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","arg","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","item","instructions","lastRegister","apply","instruction","statementBuilder","expr","unshift","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node","_is_node2","__esModule","default","maybePort","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","sendWithPromise","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","assert","reader","reason","cancel","headersReady","setup","handler","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","MessageHandler","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","catch","pdfFile","flushChunks","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","intent","pageNum","Date","now","getOperatorList","renderInteractiveForms","operatorList","featureId","UNSUPPORTED_FEATURES","unknown","wrappedException","minimumStackMessage","error","sink","onPull","desiredSize","onCancel","extractTextContent","normalizeWhitespace","combineTextItems","close","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","MissingPDFException","UnexpectedResponseException","UnknownErrorException","forceDataSchema","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","setupDoc","initializeFromPort","window","self","postMessage","_document","BasePdfManager","_docId","_password","_docBaseUrl","NotImplementedException","prop","ensureXRef","Stream","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","pdfFunctionFactory","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","getPageProp","getInheritedPageProp","valueArray","merge","resources","empty","mediaBox","cropBox","isNum","intersection","intersect","getContentStream","streams","StreamsSequenceStream","NullStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","opList","OperatorList","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","flush","opListPromises","opLists","addOp","OPS","beginAnnotations","addOpList","endAnnotations","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","isArrayBuffer","find","needle","backwards","strBuf","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","version","pdfFormatVersion","acroForm","xfa","fields","linearization","Linearization","isSpace","mainXRefEntriesOffset","checkHeader","parseStartXRef","_this4","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","CCITTFaxStream","_ccitt","maybeLength","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","DecodeStream","readBlock","ensureBuffer","Jbig2Stream","_jbig","requested","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","codeLength","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","bitmap","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","rowSize","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","codes","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","parseJbig2Chunks","JpegImage","JpegError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","decodeTransform","colorTransform","buildHuffmanTable","codeLengths","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v1","v2","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Y","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","getData","forceRGBoutput","rgbData","grayColor","JpxStream","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","imgRowSize","tileRowSize","rowBytes","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","parameters","LinkAnnotation","TextAnnotation","fieldType","getInheritableProperty","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rect","rectangle","flag","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","normalizeRect","gray","getRgbItem","cmyk","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","as","hasPopup","contents","renderForms","appearanceDict","bbox","getAxialAlignedBoundingBox","maxY","xRatio","yRatio","getTransformMatrix","beginAnnotation","endAnnotation","_isViewable","_isPrintable","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","element","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","maxLen","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FILEATTACHMENT","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_jpeg_stream","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoding","DECODE","NativeImageDecoder","_ref$forceDataSchema","_ref2$options","fetchBuiltInCMap","cachedCMap","compressionType","CMapCompressionType","NONE","canDecode","image","JpegStream","isDecodable","colorSpace","numComps","isSupported","res","cs","isDefaultDecode","TimeSlotManager","normalizeBlendMode","check","checked","endTime","deferred","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","smask","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","inline","cacheKey","imageCache","imgData","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","cached","paintImageMaskXObject","softMask","isInline","createImageData","paintInlineImageXObject","addDependency","paintJpegXObject","nativeImageDecoder","buildImage","nativeDecoder","imageObj","paintImageXObject","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","pattern","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","argsArray","tilingPatternIR","addDependencies","dependencies","handleSetFont","fontArgs","fontRef","fontName","loadFont","font","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","setGState","gState","gStateObj","gStateKeys","_loop","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","aliasRef","putAlias","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","constructPath","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref3$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","restore","promiseBody","stop","paintXObject","resolveXObject","rejectXObject","save","setFont","fontSize","endInlineImage","showText","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","_ref4$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","initialized","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","FONT_IDENTITY_MATRIX","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","replaceWhitespace","buildTextContentItem","textChunk","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","bidiResult","bidi","dir","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","setTextMatrix","calcTextLineMatrixAdvance","setTextLineMatrix","beginText","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","AbortException","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","getEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","WinAnsiEncoding","MacRomanEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","getGlyphsUnicode","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","map","charCode","w1","w2","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","search","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","numArgs","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","eoClip","endText","setCharWidth","setCharWidthAndBounds","beginInlineImage","beginImageData","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","isEOF","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","_map","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","callback","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","process","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","BINARY","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","string32","searchParams","checksum","addTable","tag","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","TYPE3","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","hasOwnProperty","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","getDingbatsGlyphsUnicode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","pc","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","newLength","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","head","locaLength","b3","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","builtInEncoding","adjustToUnicode","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","scanLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","x2","xb","yb","subrCode","stackClean","achar","bchar","parseGlyfTable","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","decrypt","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","nextChar","readNumberArray","getToken","readInt","readBoolean","currentChar","comment","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","shadingPattern","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","step","colorStops","ratio","cssColor","makeCssRgb","background","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","colors","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","EOF","getNumber","toLowerCase","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","bpc","oldIndex","newIndex","xScaled","w1Scanline","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","imageMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","drawWidth","drawHeight","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","actualHeight","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","originalWidth","originalHeight","kind","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","imageLength","maybeUndoPreblend","comps","RGBA_32BPP","fillRgb","forceRGB","nameCache","nameValue","Cmd","cmdCache","cmdValue","nonSerializable","__nonSerializable__","newXref","key1","key2","key3","dictArray","mergedDict","keyName","thisArg","LZWStream","StringStream","RunLengthStream","PredictorStream","FlateStream","AsciiHexStream","Ascii85Stream","arrayBuffer","emptyBuffer","maybeMinBufferLength","minBufferLength","buffer2","bufEnd","appendToArray","codeLenCodeMap","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","cmf","flg","getBits","getCode","codeLen","codeVal","generateHuffmanTable","lengths","val","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","repeatLength","dist","blockLen","predictor","readBlockTiff","readBlockPng","pixBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","prevRow","up","upLeft","pa","pb","nextChunk","hasMoreData","firstDigit","maxDecodeLength","digit","repeatHeader","earlyChange","cachedData","bitsCached","lzwState","nextCode","dictionaryValues","dictionaryLengths","dictionaryPrevCodes","currentSequence","currentSequenceLength","lastCode","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","getRgbBuffer","getOutputLength","isPassthrough","rgbBuf","numComponentColors","needsResizing","allColors","destPos","rgbPos","colorMap","resizeRgbImage","usesZeroToOneRange","parseToIR","whitePoint","blackPoint","CalGrayCS","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","LabCS","colorSpaces","resCS","mode","altIR","createIR","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","G","A","AG","L","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","adjustToRange","decodeL","B","C","AGR","BGG","CGB","X","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","bs","M","N","MacExpertEncoding","encodingName","_ccitt_stream","_jbig2_stream","_jpx_stream","refill","tryShift","cipherTransform","makeInlineImage","makeStream","findDefaultInlineStreamEnd","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","filterName","filterZero","adler32","imageStream","imageBytes","skipToNextLine","ENDSTREAM_SIGNATURE","scanBytes","makeFilter","filterArray","paramsArray","xrefStreamStats","StreamType","FLATE","LZW","DCT","JPX","A85","AHX","CCF","RL","JBIG","knownCommands","specialChars","toHexDigit","peekChar","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","getHexString","secondDigit","isFirstHex","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","hintsLength","getHints","objectNumberFirst","endFirst","pageFirst","_jpg","jpegImage","decodeArr","decodeArrLength","transformNeeded","maxValue","createObjectURL","QueueOptimizer","addState","parentState","checkFn","iterateFn","processFn","InitialState","iCurr","match","lastProcessed","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxLineHeight","currentX","currentY","img","imgWidth","imgHeight","paintInlineImageXObjectGroup","iFirstPIMXO","paintSolidColorImageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","firstPIXOArg0","paintImageXObjectRepeat","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","NullOptimizer","messageHandler","optimizer","_totalLength","weight","CHUNK_SIZE","dependency","extendObj","transfers","getTransfers"],"mappings":"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AA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,GACG,CACHH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEA,SAAAL,EAAAjf,EAAA5B,EAAAE,GACAL,KAAA+B,OACA/B,KAAAshB,GAAAnhB,EACAH,KAAAuhB,QAAAlhB,EACAL,KAAAwhB,MAAAzf,EAAA5B,GACAH,KAAAyhB,KAAA,EACAzhB,KAAA0hB,SACA1hB,KAAAwhB,MAAAxhB,KAAAwhB,OAAA,QAAAxhB,KAAAyhB,MAAA,MACAzhB,KAAAyhB,KAAAzhB,KAAAyhB,MAAA,QACAzhB,KAAA2hB,IAAA,EACA3hB,KAAAoH,EAAA,MA+EA,OA7EA4Z,EAAAngB,UAAA,CACA6gB,OAAA,WACA,IAAA3f,EAAA/B,KAAA+B,KACAuf,EAAAthB,KAAAshB,GACA,MAAAvf,EAAAuf,GACAvf,EAAAuf,EAAA,GACA,KACAthB,KAAAyhB,MAAA,MACAzhB,KAAA2hB,GAAA,IAEAL,IACAthB,KAAAyhB,MAAA1f,EAAAuf,IAAA,EACAthB,KAAA2hB,GAAA,EACA3hB,KAAAshB,OAGAA,IACAthB,KAAAyhB,MAAAH,EAAAthB,KAAAuhB,QAAAxf,EAAAuf,IAAA,QACAthB,KAAA2hB,GAAA,EACA3hB,KAAAshB,MAEAthB,KAAAyhB,KAAA,QACAzhB,KAAAwhB,OAAAxhB,KAAAyhB,MAAA,GACAzhB,KAAAyhB,MAAA,QAGAG,QAAA,SAAAC,EAAAzhB,GACA,IAIA0hB,EAJAC,EAAAF,EAAAzhB,IAAA,EACA4hB,EAAA,EAAAH,EAAAzhB,GACA6hB,EAAAhB,EAAAc,GACAG,EAAAD,EAAAf,GAEA9Z,EAAApH,KAAAoH,EAAA8a,EACA,GAAAliB,KAAAwhB,MAAAU,EACA9a,EAAA8a,GACA9a,EAAA8a,EACAJ,EAAAE,EACAD,EAAAE,EAAAd,OAEA/Z,EAAA8a,EACAJ,EAAA,EAAAE,EACA,IAAAC,EAAAZ,aACAW,EAAAF,GAEAC,EAAAE,EAAAb,UAEO,CAEP,GADAphB,KAAAwhB,OAAAU,EACA,UAAA9a,GAEA,OADApH,KAAAoH,IACA4a,EAEA5a,EAAA8a,GACAJ,EAAA,EAAAE,EACA,IAAAC,EAAAZ,aACAW,EAAAF,GAEAC,EAAAE,EAAAb,OAEAU,EAAAE,EACAD,EAAAE,EAAAd,MAGA,GACA,IAAAnhB,KAAA2hB,IACA3hB,KAAA0hB,SAEAta,IAAA,EACApH,KAAAwhB,MAAAxhB,KAAAwhB,OAAA,QAAAxhB,KAAAyhB,MAAA,KACAzhB,KAAAyhB,KAAAzhB,KAAAyhB,MAAA,QACAzhB,KAAA2hB,WACO,UAAAva,IAGP,OAFApH,KAAAoH,IACAya,EAAAzhB,GAAA2hB,GAAA,EAAAC,EACAF,IAGAd,EAtUA,GAwUA1hB,EAAA0hB,uDC3UA5hB,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAA6iB,cAAAziB,EAEA,IAAAC,EAAYC,EAAQ,KAEpBwiB,EAA0BxiB,EAAQ,MAElCyiB,EAAA,WACA,SAAAA,EAAAC,GACAtiB,KAAAuiB,QAAA,cAAAD,EAKA,OAHAD,EAAAxhB,UAAA,IAAAW,MACA6gB,EAAAxhB,UAAAgO,KAAA,WACAwT,EAAAxZ,YAAAwZ,EACAA,EAPA,GASAF,EAAA,WACA,IAAAK,EAAA,CACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAEA,SAAAT,IACAniB,KAAA6iB,sBAAA,EAuWA,SAAAC,EAAAC,EAAAC,GACAD,EAAAE,GAAAxiB,KAAAC,KAAAsiB,EAAAE,MAAAH,EAAAI,OACAJ,EAAAK,GAAA3iB,KAAAC,KAAAsiB,EAAAK,KAAAN,EAAAI,OACAJ,EAAAO,GAAA7iB,KAAAC,KAAAsiB,EAAAO,MAAAR,EAAAS,OACAT,EAAAU,GAAAhjB,KAAAC,KAAAsiB,EAAAU,KAAAX,EAAAS,OACAT,EAAAY,MAAAZ,EAAAK,GAAAL,EAAAE,GACAF,EAAAa,OAAAb,EAAAU,GAAAV,EAAAO,GAEA,SAAAO,EAAAC,EAAAC,GAMA,IALA,IACAC,EADAhB,EAAAc,EAAAG,IAEAC,EAAA,GACAC,EAAA1jB,KAAAC,MAAAsiB,EAAAK,KAAAL,EAAAoB,QAAApB,EAAAqB,OACAC,EAAA7jB,KAAAC,MAAAsiB,EAAAU,KAAAV,EAAAuB,QAAAvB,EAAAwB,OACAC,EAAA,EAAmBA,EAAAH,EAAeG,IAClC,QAAA/U,EAAA,EAAqBA,EAAAyU,EAAezU,KACpCsU,EAAA,IACAU,IAAAjkB,KAAAgZ,IAAAuJ,EAAAoB,OAAA1U,EAAAsT,EAAAqB,MAAArB,EAAAE,OACAc,EAAAW,IAAAlkB,KAAAgZ,IAAAuJ,EAAAuB,OAAAE,EAAAzB,EAAAwB,MAAAxB,EAAAO,OACAS,EAAAY,IAAAnkB,KAAAkG,IAAAqc,EAAAoB,QAAA1U,EAAA,GAAAsT,EAAAqB,MAAArB,EAAAK,MACAW,EAAAa,IAAApkB,KAAAkG,IAAAqc,EAAAuB,QAAAE,EAAA,GAAAzB,EAAAwB,MAAAxB,EAAAU,MACAM,EAAAL,MAAAK,EAAAY,IAAAZ,EAAAU,IACAV,EAAAJ,OAAAI,EAAAa,IAAAb,EAAAW,IACAX,EAAAD,WAAA,GACAG,EAAAhjB,KAAA8iB,GAGAF,EAAAI,QAEA,IADA,IACA7hB,EAAA,EAAA6D,EADA8c,EAAA8B,KACyCziB,EAAA6D,EAAQ7D,IAEjD,IADA,IAAA0gB,EAAAgB,EAAA1hB,GACAgO,EAAA,EAAAC,EAAA4T,EAAArkB,OAAwCwQ,EAAAC,EAAQD,IAAA,CAChD,IAAA0U,EAAA,GACAf,EAAAE,EAAA7T,GACA0U,EAAAC,KAAAvkB,KAAAC,KAAAsjB,EAAAU,IAAA3B,EAAAI,OACA4B,EAAAE,KAAAxkB,KAAAC,KAAAsjB,EAAAW,IAAA5B,EAAAS,OACAuB,EAAAG,KAAAzkB,KAAAC,KAAAsjB,EAAAY,IAAA7B,EAAAI,OACA4B,EAAAI,KAAA1kB,KAAAC,KAAAsjB,EAAAa,IAAA9B,EAAAS,OACAuB,EAAApB,MAAAoB,EAAAG,KAAAH,EAAAC,KACAD,EAAAnB,OAAAmB,EAAAI,KAAAJ,EAAAE,KACAjB,EAAAD,WAAA1hB,GAAA0iB,GAIA,SAAAK,EAAAtB,EAAAf,EAAAlH,GACA,IAAAwJ,EAAAtC,EAAAuC,sBACAvE,EAAA,GAUA,OATAsE,EAAAE,iCAIAxE,EAAAyE,IAAAH,EAAAI,eAAA5J,GAAA2J,IACAzE,EAAA2E,IAAAL,EAAAI,eAAA5J,GAAA6J,MAJA3E,EAAAyE,IAAA,GACAzE,EAAA2E,IAAA,IAKA3E,EAAA4E,KAAA9J,EAAA,EAAApb,KAAAkG,IAAA0e,EAAAO,IAAA7E,EAAAyE,IAAA,GAAA/kB,KAAAkG,IAAA0e,EAAAO,IAAA7E,EAAAyE,KACAzE,EAAA8E,KAAAhK,EAAA,EAAApb,KAAAkG,IAAA0e,EAAAS,IAAA/E,EAAA2E,IAAA,GAAAjlB,KAAAkG,IAAA0e,EAAAS,IAAA/E,EAAA2E,KACA3E,EAEA,SAAAgF,EAAAjC,EAAAkC,EAAAC,GACA,IAAAC,EAAA,GAAAD,EAAAT,IACAW,EAAA,GAAAF,EAAAP,IACAU,EAAA,IAAAJ,EAAAK,SACAC,EAAA,GAAAL,EAAAT,KAAAY,EAAA,MACAG,EAAA,GAAAN,EAAAP,KAAAU,EAAA,MACAI,EAAAR,EAAAS,KAAAT,EAAAU,KAAAjmB,KAAAC,KAAAslB,EAAAS,KAAAP,GAAAzlB,KAAAmB,MAAAokB,EAAAU,KAAAR,GAAA,EACAS,EAAAX,EAAAY,KAAAZ,EAAAa,KAAApmB,KAAAC,KAAAslB,EAAAY,KAAAT,GAAA1lB,KAAAmB,MAAAokB,EAAAa,KAAAV,GAAA,EACAW,EAAAN,EAAAG,EACAX,EAAAe,mBAAA,CACAb,gBACAC,iBACAK,mBACAG,mBACAG,eACAR,yBACAC,2BAGA,SAAAS,EAAAlD,EAAAmD,EAAAhB,GACA,IAWA5jB,EAAAgO,EAAA6W,EAAAC,EAXAxB,EAAAM,EAAAN,KACAE,EAAAI,EAAAJ,KACAuB,EAAA,GAAAzB,EACA0B,EAAA,GAAAxB,EACAyB,EAAAL,EAAAM,MAAA5B,EACA6B,EAAAP,EAAAQ,MAAA5B,EACA6B,EAAAT,EAAAU,KAAAP,EAAA,GAAAzB,EACAiC,EAAAX,EAAAY,KAAAR,EAAA,GAAAxB,EACAkB,EAAAE,EAAAjB,WAAAe,mBACAe,EAAA,GACAC,EAAA,GAEA,IAAA1X,EAAAmX,EAAkBnX,EAAAuX,EAAUvX,IAC5B,IAAAhO,EAAAilB,EAAoBjlB,EAAAqlB,EAAUrlB,IAAA,CAmB9B,IAlBA6kB,EAAA,CACAc,IAAA3lB,EACA4lB,IAAA5X,EACAkX,KAAAH,EAAA/kB,EACAolB,KAAAJ,EAAAhX,EACAsX,KAAAP,GAAA/kB,EAAA,GACAwlB,KAAAR,GAAAhX,EAAA,KAEA6X,MAAAznB,KAAAgZ,IAAAwN,EAAAM,KAAAL,EAAAK,MACAL,EAAAiB,MAAA1nB,KAAAgZ,IAAAwN,EAAAQ,KAAAP,EAAAO,MACAP,EAAAkB,MAAA3nB,KAAAkG,IAAAsgB,EAAAU,KAAAT,EAAAS,MACAT,EAAAmB,MAAA5nB,KAAAkG,IAAAsgB,EAAAY,KAAAX,EAAAW,MAGAV,EAFA1mB,KAAAmB,OAAAslB,EAAAgB,MAAAjB,EAAAM,MAAAR,EAAAT,wBACA7lB,KAAAmB,OAAAslB,EAAAiB,MAAAlB,EAAAQ,MAAAV,EAAAR,yBACAQ,EAAAP,iBACAU,EAAAC,iBACAD,EAAAoB,YAAArB,EAAA7b,KACA8b,EAAAqB,OAAA,IACArB,EAAAkB,OAAAlB,EAAAgB,OAAAhB,EAAAmB,OAAAnB,EAAAiB,OAAA,CAGAL,EAAA5mB,KAAAgmB,GACA,IAAAsB,EAAAT,EAAAZ,QACAznB,IAAA8oB,GACAnmB,EAAAmmB,EAAAC,OACAD,EAAAC,OAAApmB,EACWA,EAAAmmB,EAAAE,SACXF,EAAAE,OAAArmB,GAEAgO,EAAAmY,EAAAG,OACAH,EAAAC,OAAApY,EACWA,EAAAmY,EAAAI,SACXJ,EAAAI,OAAAvY,IAGA0X,EAAAZ,GAAAqB,EAAA,CACAC,OAAApmB,EACAsmB,OAAAtY,EACAqY,OAAArmB,EACAumB,OAAAvY,GAGA6W,EAAAsB,YAGAvB,EAAA4B,oBAAA,CACAzB,eAAAzB,EACA0B,gBAAAxB,EACAiD,iBAAApB,EAAAJ,EAAA,EACAyB,iBAAAnB,EAAAJ,EAAA,GAEAP,EAAAa,aACAb,EAAAc,YAEA,SAAAiB,EAAAhD,EAAAmB,EAAA8B,GAGA,IAFA,IAAAC,EAAA,GACAC,EAAAnD,EAAAmD,SACA9mB,EAAA,EAAA6D,EAAAijB,EAAAtpB,OAAyCwC,EAAA6D,EAAQ7D,IAGjD,IAFA,IACAylB,EADAqB,EAAA9mB,GACAylB,WACAzX,EAAA,EAAAC,EAAAwX,EAAAjoB,OAA6CwQ,EAAAC,EAAQD,IAAA,CACrD,IAAA6W,EAAAY,EAAAzX,GACA6W,EAAAC,oBAGA+B,EAAAhoB,KAAAgmB,GAGA,OACA+B,cACAnB,WAAAoB,GAGA,SAAAE,EAAAtF,GAOA,IANA,IAAAd,EAAAc,EAAAG,IACAoF,EAAAvF,EAAAwF,YAAAC,MACAvF,EAAAF,EAAAI,MAAAmF,GACAG,EAAAxF,EAAAyF,6BAAAD,YACAE,EAAA1G,EAAA8B,KACA6E,EAAA,EACAlF,EAAA,EAAmBA,EAAAiF,EAAqBjF,IACxCkF,EAAAlpB,KAAAgZ,IAAAkQ,EAAA3F,EAAAD,WAAAU,GAAAa,sBAAAsE,0BAEA,IAAAhO,EAAA,EACAC,EAAA,EACAxZ,EAAA,EACAwnB,EAAA,EACA7pB,KAAA8pB,WAAA,WACA,KAAYlO,EAAA4N,EAAiB5N,IAAA,CAC7B,KAAcC,GAAA8N,EAAkC9N,IAAA,CAChD,KAAgBxZ,EAAAqnB,EAAqBrnB,IAAA,CACrC,IAAA0gB,EAAAiB,EAAAD,WAAA1hB,GACA,KAAAwZ,EAAAkH,EAAAuC,sBAAAsE,0BAAA,CAKA,IAFA,IAAA5D,EAAAjD,EAAAgH,YAAAlO,GACAiL,EAAAd,EAAAe,mBAAAD,aACkB+C,EAAA/C,GAAkB,CACpC,IAAAkD,EAAAhB,EAAAhD,EAAA6D,EAAAjO,GAEA,OADAiO,IACAG,EAEAH,EAAA,GAEAxnB,EAAA,EAEAwZ,EAAA,EAEA,UAAAwG,EAAA,mBAGA,SAAA4H,EAAAnG,GAOA,IANA,IAAAd,EAAAc,EAAAG,IACAoF,EAAAvF,EAAAwF,YAAAC,MACAvF,EAAAF,EAAAI,MAAAmF,GACAG,EAAAxF,EAAAyF,6BAAAD,YACAE,EAAA1G,EAAA8B,KACA6E,EAAA,EACAlF,EAAA,EAAmBA,EAAAiF,EAAqBjF,IACxCkF,EAAAlpB,KAAAgZ,IAAAkQ,EAAA3F,EAAAD,WAAAU,GAAAa,sBAAAsE,0BAEA,IAAA/N,EAAA,EACAD,EAAA,EACAvZ,EAAA,EACAwnB,EAAA,EACA7pB,KAAA8pB,WAAA,WACA,KAAYjO,GAAA8N,EAAkC9N,IAAA,CAC9C,KAAcD,EAAA4N,EAAiB5N,IAAA,CAC/B,KAAgBvZ,EAAAqnB,EAAqBrnB,IAAA,CACrC,IAAA0gB,EAAAiB,EAAAD,WAAA1hB,GACA,KAAAwZ,EAAAkH,EAAAuC,sBAAAsE,0BAAA,CAKA,IAFA,IAAA5D,EAAAjD,EAAAgH,YAAAlO,GACAiL,EAAAd,EAAAe,mBAAAD,aACkB+C,EAAA/C,GAAkB,CACpC,IAAAkD,EAAAhB,EAAAhD,EAAA6D,EAAAjO,GAEA,OADAiO,IACAG,EAEAH,EAAA,GAEAxnB,EAAA,EAEAuZ,EAAA,EAEA,UAAAyG,EAAA,mBAGA,SAAA6H,EAAApG,GACA,IAKAlI,EAAAC,EAAA2E,EAAA9Q,EALAsT,EAAAc,EAAAG,IACAoF,EAAAvF,EAAAwF,YAAAC,MACAvF,EAAAF,EAAAI,MAAAmF,GACAG,EAAAxF,EAAAyF,6BAAAD,YACAE,EAAA1G,EAAA8B,KAEA6E,EAAA,EACA,IAAAnJ,EAAA,EAAeA,EAAAkJ,EAAqBlJ,IAAA,CACpC,IAAAuC,EAAAiB,EAAAD,WAAAvD,GACAmJ,EAAAlpB,KAAAgZ,IAAAkQ,EAAA5G,EAAAuC,sBAAAsE,0BAEA,IAAAO,EAAA,IAAAC,WAAAT,EAAA,GACA,IAAA9N,EAAA,EAAeA,GAAA8N,IAAkC9N,EAAA,CACjD,IAAAwO,EAAA,EACA,IAAA7J,EAAA,EAAiBA,EAAAkJ,IAAqBlJ,EAAA,CACtC,IAAAuJ,EAAA/F,EAAAD,WAAAvD,GAAAuJ,YACAlO,EAAAkO,EAAAlqB,SACAwqB,EAAA5pB,KAAAgZ,IAAA4Q,EAAAN,EAAAlO,GAAAkL,mBAAAD,eAGAqD,EAAAtO,GAAAwO,EAEAzO,EAAA,EACAC,EAAA,EACA2E,EAAA,EACA9Q,EAAA,EACA1P,KAAA8pB,WAAA,WACA,KAAYjO,GAAA8N,EAAkC9N,IAAA,CAC9C,KAAcnM,EAAAya,EAAAtO,GAA+BnM,IAAA,CAC7C,KAAgB8Q,EAAAkJ,EAAqBlJ,IAAA,CACrC,IAAAuC,EAAAiB,EAAAD,WAAAvD,GACA,KAAA3E,EAAAkH,EAAAuC,sBAAAsE,0BAAA,CAGA,IAAA5D,EAAAjD,EAAAgH,YAAAlO,GACAiL,EAAAd,EAAAe,mBAAAD,aACA,KAAApX,GAAAoX,GAAA,CAGA,KAAkBlL,EAAA4N,GAAiB,CACnC,IAAAQ,EAAAhB,EAAAhD,EAAAtW,EAAAkM,GAEA,OADAA,IACAoO,EAEApO,EAAA,IAEA4E,EAAA,EAEA9Q,EAAA,EAEA,UAAA2S,EAAA,mBAGA,SAAAiI,EAAAxG,GACA,IAAAd,EAAAc,EAAAG,IACAoF,EAAAvF,EAAAwF,YAAAC,MACAvF,EAAAF,EAAAI,MAAAmF,GACAG,EAAAxF,EAAAyF,6BAAAD,YACAE,EAAA1G,EAAA8B,KACAW,EAAA8E,EAAAvG,GACAwG,EAAA/E,EACA7J,EAAA,EACAC,EAAA,EACA2E,EAAA,EACAiK,EAAA,EACAC,EAAA,EACA1qB,KAAA8pB,WAAA,WACA,KAAYY,EAAAF,EAAAG,WAAyCD,IAAA,CACrD,KAAcD,EAAAD,EAAAI,WAAyCH,IAAA,CACvD,KAAgBjK,EAAAkJ,EAAqBlJ,IAAA,CAGrC,IAFA,IAAAuC,EAAAiB,EAAAD,WAAAvD,GACAoJ,EAAA7G,EAAAuC,sBAAAsE,yBACkB/N,GAAA+N,EAA+B/N,IAAA,CACjD,IAAAmK,EAAAjD,EAAAgH,YAAAlO,GACAgP,EAAApF,EAAA1B,WAAAvD,GAAAuJ,YAAAlO,GACAgO,EAAAiB,EAAAL,EAAAC,EAAAG,EAAAL,EAAAxE,GACA,UAAA6D,EAAA,CAGA,KAAoBjO,EAAA4N,GAAiB,CACrC,IAAAQ,EAAAhB,EAAAhD,EAAA6D,EAAAjO,GAEA,OADAA,IACAoO,EAEApO,EAAA,GAEAC,EAAA,EAEA2E,EAAA,EAEAiK,EAAA,EAEA,UAAApI,EAAA,mBAGA,SAAA0I,EAAAjH,GACA,IAAAd,EAAAc,EAAAG,IACAoF,EAAAvF,EAAAwF,YAAAC,MACAvF,EAAAF,EAAAI,MAAAmF,GACAG,EAAAxF,EAAAyF,6BAAAD,YACAE,EAAA1G,EAAA8B,KACAW,EAAA8E,EAAAvG,GACApI,EAAA,EACAC,EAAA,EACA2E,EAAA,EACAiK,EAAA,EACAC,EAAA,EACA1qB,KAAA8pB,WAAA,WACA,KAAYtJ,EAAAkJ,IAAqBlJ,EAAA,CAIjC,IAHA,IAAAuC,EAAAiB,EAAAD,WAAAvD,GACAgK,EAAA/E,EAAA1B,WAAAvD,GACAoJ,EAAA7G,EAAAuC,sBAAAsE,yBACcc,EAAAF,EAAAG,WAAyCD,IAAA,CACvD,KAAgBD,EAAAD,EAAAI,WAAyCH,IAAA,CACzD,KAAkB5O,GAAA+N,EAA+B/N,IAAA,CACjD,IAAAmK,EAAAjD,EAAAgH,YAAAlO,GACAgP,EAAAL,EAAAT,YAAAlO,GACAgO,EAAAiB,EAAAL,EAAAC,EAAAG,EAAAL,EAAAxE,GACA,UAAA6D,EAAA,CAGA,KAAoBjO,EAAA4N,GAAiB,CACrC,IAAAQ,EAAAhB,EAAAhD,EAAA6D,EAAAjO,GAEA,OADAA,IACAoO,EAEApO,EAAA,GAEAC,EAAA,EAEA4O,EAAA,EAEAC,EAAA,EAEA,UAAArI,EAAA,mBAGA,SAAAyI,EAAAE,EAAAC,EAAAJ,EAAAK,EAAAlF,GACA,IAAAmF,EAAAH,EAAAE,EAAAE,SACAC,EAAAJ,EAAAC,EAAAI,UACA,GAAAH,EAAAN,EAAAlH,OAAA,GAAA0H,EAAAR,EAAAjH,QAAA,EACA,YAEA,IAAA2H,EAAAF,EAAAR,EAAAlH,MAAAqC,EAAAe,mBAAAP,iBACA,OAAA2E,EAAAN,EAAAjH,OAAA2H,EAEA,SAAAhB,EAAAvG,GAOA,IANA,IAAA0F,EAAA1F,EAAAD,WAAAlkB,OACAurB,EAAArjB,OAAAyjB,UACAF,EAAAvjB,OAAAyjB,UACAZ,EAAA,EACAD,EAAA,EACAc,EAAA,IAAAziB,MAAA0gB,GACAlJ,EAAA,EAAmBA,EAAAkJ,EAAqBlJ,IAAA,CASxC,IARA,IAAAuC,EAAAiB,EAAAD,WAAAvD,GACAoJ,EAAA7G,EAAAuC,sBAAAsE,yBACA8B,EAAA,IAAA1iB,MAAA4gB,EAAA,GACA+B,EAAA5jB,OAAAyjB,UACAI,EAAA7jB,OAAAyjB,UACAK,EAAA,EACAC,EAAA,EACAC,EAAA,EACAlQ,EAAA+N,EAA4C/N,GAAA,IAAQA,EAAA,CACpD,IAAAmK,EAAAjD,EAAAgH,YAAAlO,GACAmQ,EAAAD,EAAA/F,EAAAe,mBAAAb,cACA+F,EAAAF,EAAA/F,EAAAe,mBAAAZ,eACAwF,EAAAlrB,KAAAkG,IAAAglB,EAAAK,GACAJ,EAAAnrB,KAAAkG,IAAAilB,EAAAK,GACAJ,EAAAprB,KAAAgZ,IAAAoS,EAAA7F,EAAAe,mBAAAP,kBACAsF,EAAArrB,KAAAgZ,IAAAqS,EAAA9F,EAAAe,mBAAAJ,kBACA+E,EAAA7P,GAAA,CACA8H,MAAAqI,EACApI,OAAAqI,GAEAF,IAAA,EAEAX,EAAA3qB,KAAAkG,IAAAykB,EAAAO,GACAL,EAAA7qB,KAAAkG,IAAA2kB,EAAAM,GACAhB,EAAAnqB,KAAAgZ,IAAAmR,EAAAiB,GACAlB,EAAAlqB,KAAAgZ,IAAAkR,EAAAmB,GACAL,EAAAjL,GAAA,CACAuJ,YAAA2B,EACAN,SAAAO,EACAL,UAAAM,EACAhB,WAAAiB,EACAlB,WAAAmB,GAGA,OACA/H,WAAA0H,EACAL,WACAE,YACAV,aACAD,cAGA,SAAAuB,EAAApI,GAKA,IAJA,IAAAd,EAAAc,EAAAG,IACAoF,EAAAvF,EAAAwF,YAAAC,MACAvF,EAAAF,EAAAI,MAAAmF,GACAK,EAAA1G,EAAA8B,KACAtE,EAAA,EAAmBA,EAAAkJ,EAAqBlJ,IAAA,CAKxC,IAJA,IAAAuC,EAAAiB,EAAAD,WAAAvD,GACAoJ,EAAA7G,EAAAuC,sBAAAsE,yBACAG,EAAA,GACAZ,EAAA,GACAtN,EAAA,EAAqBA,GAAA+N,EAA+B/N,IAAA,CACpD,IAUAoL,EAVAkF,EAAA/G,EAAAtB,EAAAf,EAAAlH,GACAmK,EAAA,GACA+F,EAAA,GAAAnC,EAAA/N,EASA,GARAmK,EAAAU,KAAAjmB,KAAAC,KAAAqiB,EAAAiC,KAAA+G,GACA/F,EAAAa,KAAApmB,KAAAC,KAAAqiB,EAAAkC,KAAA8G,GACA/F,EAAAS,KAAAhmB,KAAAC,KAAAqiB,EAAAmC,KAAA6G,GACA/F,EAAAY,KAAAnmB,KAAAC,KAAAqiB,EAAAoC,KAAA4G,GACA/F,EAAAK,SAAAxK,EACAkK,EAAAjC,EAAAkC,EAAAmG,GACApC,EAAA7oB,KAAA8kB,GAEA,IAAAnK,GACAoL,EAAA,IACA7b,KAAA,KACA6b,EAAAM,KAAA9mB,KAAAC,KAAAqiB,EAAAiC,KAAA+G,GACA9E,EAAAQ,KAAAhnB,KAAAC,KAAAqiB,EAAAkC,KAAA8G,GACA9E,EAAAU,KAAAlnB,KAAAC,KAAAqiB,EAAAmC,KAAA6G,GACA9E,EAAAY,KAAApnB,KAAAC,KAAAqiB,EAAAoC,KAAA4G,GACA9E,EAAAjB,aACAgB,EAAAlD,EAAAmD,EAAAkF,GACAhD,EAAAjoB,KAAA+lB,GACAjB,EAAAmD,SAAA,CAAAlC,OACS,CACT,IAAAmF,EAAA,GAAAxC,EAAA/N,EAAA,EACAwQ,EAAA,IACApF,EAAA,IACA7b,KAAA,KACA6b,EAAAM,KAAA9mB,KAAAC,KAAAqiB,EAAAiC,KAAAoH,EAAA,IACAnF,EAAAQ,KAAAhnB,KAAAC,KAAAqiB,EAAAkC,KAAAmH,GACAnF,EAAAU,KAAAlnB,KAAAC,KAAAqiB,EAAAmC,KAAAkH,EAAA,IACAnF,EAAAY,KAAApnB,KAAAC,KAAAqiB,EAAAoC,KAAAiH,GACAnF,EAAAjB,aACAgB,EAAAlD,EAAAmD,EAAAkF,GACAhD,EAAAjoB,KAAA+lB,GACAoF,EAAAnrB,KAAA+lB,IACAA,EAAA,IACA7b,KAAA,KACA6b,EAAAM,KAAA9mB,KAAAC,KAAAqiB,EAAAiC,KAAAoH,GACAnF,EAAAQ,KAAAhnB,KAAAC,KAAAqiB,EAAAkC,KAAAmH,EAAA,IACAnF,EAAAU,KAAAlnB,KAAAC,KAAAqiB,EAAAmC,KAAAkH,GACAnF,EAAAY,KAAApnB,KAAAC,KAAAqiB,EAAAoC,KAAAiH,EAAA,IACAnF,EAAAjB,aACAgB,EAAAlD,EAAAmD,EAAAkF,GACAhD,EAAAjoB,KAAA+lB,GACAoF,EAAAnrB,KAAA+lB,IACAA,EAAA,IACA7b,KAAA,KACA6b,EAAAM,KAAA9mB,KAAAC,KAAAqiB,EAAAiC,KAAAoH,EAAA,IACAnF,EAAAQ,KAAAhnB,KAAAC,KAAAqiB,EAAAkC,KAAAmH,EAAA,IACAnF,EAAAU,KAAAlnB,KAAAC,KAAAqiB,EAAAmC,KAAAkH,EAAA,IACAnF,EAAAY,KAAApnB,KAAAC,KAAAqiB,EAAAoC,KAAAiH,EAAA,IACAnF,EAAAjB,aACAgB,EAAAlD,EAAAmD,EAAAkF,GACAhD,EAAAjoB,KAAA+lB,GACAoF,EAAAnrB,KAAA+lB,GACAjB,EAAAmD,SAAAkD,GAGAtJ,EAAAgH,cACAhH,EAAAoG,WAEA,IAAAmD,EAAAtI,EAAAyF,6BAAA6C,iBACA,OAAAA,GACA,OACAtI,EAAAuI,gBAAA,IAAAnD,EAAAtF,GACA,MACA,OACAE,EAAAuI,gBAAA,IAAAtC,EAAAnG,GACA,MACA,OACAE,EAAAuI,gBAAA,IAAArC,EAAApG,GACA,MACA,OACAE,EAAAuI,gBAAA,IAAAjC,EAAAxG,GACA,MACA,OACAE,EAAAuI,gBAAA,IAAAxB,EAAAjH,GACA,MACA,QACA,UAAAzB,EAAA,iCAAAiK,IAGA,SAAAE,EAAA1I,EAAA/hB,EAAAgV,EAAAwB,GACA,IACAS,EADAhX,EAAA,EAEAyqB,EAAA,EACAC,GAAA,EACA,SAAAC,EAAA5e,GACA,KAAA0e,EAAA1e,GAAA,CACA,IAAA1G,EAAAtF,EAAAgV,EAAA/U,GACAA,IACA0qB,GACA1T,KAAA,EAAA3R,EACAolB,GAAA,EACAC,GAAA,IAEA1T,KAAA,EAAA3R,EACAolB,GAAA,GAEA,MAAAplB,IACAqlB,GAAA,GAIA,OAAA1T,KADAyT,GAAA1e,IACA,GAAAA,GAAA,EAEA,SAAA6e,EAAArtB,GACA,aAAAwC,EAAAgV,EAAA/U,EAAA,IAAAD,EAAAgV,EAAA/U,KAAAzC,GACAstB,EAAA,IACA,GACO,MAAA9qB,EAAAgV,EAAA/U,IAAAD,EAAAgV,EAAA/U,EAAA,KAAAzC,IACPstB,EAAA,IACA,GAIA,SAAAA,EAAA9e,GACA/L,GAAA+L,EAEA,SAAA+e,IACAL,EAAA,EACAC,IACA1qB,IACA0qB,GAAA,GAGA,SAAAK,IACA,OAAAJ,EAAA,GACA,SAEA,OAAAA,EAAA,GACA,SAEA,IAAAptB,EAAAotB,EAAA,GACA,OAAAptB,EAAA,EACAA,EAAA,GAEAA,EAAAotB,EAAA,IACA,GACAptB,EAAA,GAEAA,EAAAotB,EAAA,IACA,GAOA,IALA,IAAAtD,EAAAvF,EAAAwF,YAAAC,MACAvF,EAAAF,EAAAI,MAAAmF,GACA2D,EAAAlJ,EAAAmJ,IAAAD,cACAE,EAAApJ,EAAAmJ,IAAAC,cACAX,EAAAvI,EAAAuI,gBACAvqB,EAAAuW,GAAA,CACAuU,IACAE,GAAAJ,EAAA,MACAC,EAAA,GAEA,IAAA7C,EAAAuC,EAAAzC,aACA,GAAA6C,EAAA,IAMA,IAHA,IAEAzF,EAFA+B,EAAAe,EAAAf,YACA9c,EAAA,GAEA9J,EAAA,EAAA6D,EAAA8jB,EAAAlC,WAAAjoB,OAAoDwC,EAAA6D,EAAQ7D,IAAA,CAE5D,IAAAmmB,GADAtB,EAAA8C,EAAAlC,WAAAzlB,IACAmmB,SACA2E,EAAAjG,EAAAc,IAAAQ,EAAAC,OACA2E,EAAAlG,EAAAe,IAAAO,EAAAG,OACA0E,GAAA,EACAC,GAAA,EAEA,QAAA5tB,IAAAwnB,EAAA,SACAmG,IAAAV,EAAA,OACS,CAET,IAAAY,EAAAC,EACA,QAAA9tB,KAFA8oB,EAAAtB,EAAAsB,UAEA,cACA+E,EAAA/E,EAAA+E,kBACW,CACX,IAAA5J,EAAA6E,EAAAE,OAAAF,EAAAC,OAAA,EACA7E,EAAA4E,EAAAI,OAAAJ,EAAAG,OAAA,EACA4E,EAAA,IAAAE,EAAA9J,EAAAC,EAAAqF,GACAuE,EAAA,IAAAE,EAAA/J,EAAAC,GACA4E,EAAA+E,gBACA/E,EAAAgF,oBAEA,GAAAD,EAAAlqB,MAAA8pB,EAAAC,EAAAnE,GACA,QACA,IAAA0D,EAAA,GAOe,CACfY,EAAAI,eAAA1E,GACA,MAPA,IADAsE,EAAAK,YACA,CACA1G,EAAA2G,UAAA,EACAR,EAAAC,GAAA,EACA,QASA,GAAAD,EAAA,CAGA,GAAAC,EAAA,CAGA,KAFAE,EAAAhF,EAAAgF,mBACAnqB,MAAA8pB,EAAAC,KAEA,GAAAT,EAAA,IAEA,IADAa,EAAAI,YAEA,WAGAJ,EAAAG,iBAGAzG,EAAA4G,cAAAN,EAAAjuB,MAGA,IADA,IAAAwuB,EAAAhB,IACAJ,EAAA,IACAzF,EAAAqB,SAEA,IAAAyF,GAAA,EAAAruB,EAAAsuB,MAAAF,GAEAG,EAAAvB,GADAoB,EAAA,GAAAC,IAAA,EAAAA,GAAA9G,EAAAqB,QAEApc,EAAAjL,KAAA,CACAgmB,YACA6G,eACAxV,WAAA2V,KAOA,IAJApB,IACAI,GACAN,EAAA,KAEAzgB,EAAAtM,OAAA,IACA,IAAAsuB,EAAAhiB,EAAAM,aAEA/M,KADAwnB,EAAAiH,EAAAjH,WACA,OACAA,EAAAnlB,KAAA,IAEAmlB,EAAAnlB,KAAAb,KAAA,CACAa,OACA5B,MAAA4W,EAAA/U,EACA3B,IAAA0W,EAAA/U,EAAAmsB,EAAA5V,WACAwV,aAAAI,EAAAJ,eAEA/rB,GAAAmsB,EAAA5V,aAGA,OAAAvW,EAEA,SAAAosB,EAAAC,EAAAC,EAAAC,EAAAtH,EAAAuH,EAAAC,EAAAC,EAAAC,GAOA,IANA,IAAA1L,EAAAgE,EAAAM,KACAjE,EAAA2D,EAAAQ,KACA9D,EAAAsD,EAAAU,KAAAV,EAAAM,KACAO,EAAAb,EAAAa,WACA8G,EAAA,MAAA3H,EAAA7b,KAAAyjB,OAAA,OACAC,EAAA,MAAA7H,EAAA7b,KAAAyjB,OAAA,GAAAP,EAAA,EACAjsB,EAAA,EAAA6D,EAAA4hB,EAAAjoB,OAA2CwC,EAAA6D,IAAQ7D,EAAA,CACnD,IAAA6kB,EAAAY,EAAAzlB,GACA0sB,EAAA7H,EAAAkB,MAAAlB,EAAAgB,MACA8G,EAAA9H,EAAAmB,MAAAnB,EAAAiB,MACA,OAAA4G,GAAA,IAAAC,QAGAtvB,IAAAwnB,EAAA,MAGA,IAAA+H,EAAAC,EACAD,EAAA,IAAAE,EAAAJ,EAAAC,EAAA9H,EAAAoB,YAAApB,EAAA4G,cAAAW,GACAS,EAAA,EACA,IAGA7e,EAAAC,EAAA8e,EAHArtB,EAAAmlB,EAAAnlB,KACAstB,EAAA,EACAtB,EAAA,EAEA,IAAA1d,EAAA,EAAAC,EAAAvO,EAAAlC,OAAmCwQ,EAAAC,EAAQD,IAE3Cgf,IADAD,EAAArtB,EAAAsO,IACAhQ,IAAA+uB,EAAAjvB,MACA4tB,GAAAqB,EAAArB,aAEA,IAAAuB,EAAA,IAAApvB,WAAAmvB,GACArtB,EAAA,EACA,IAAAqO,EAAA,EAAAC,EAAAvO,EAAAlC,OAAmCwQ,EAAAC,EAAQD,IAAA,CAE3C,IAAArP,GADAouB,EAAArtB,EAAAsO,IACAtO,KAAAgB,SAAAqsB,EAAAjvB,MAAAivB,EAAA/uB,KACAivB,EAAA7tB,IAAAT,EAAAgB,GACAA,GAAAhB,EAAAnB,OAEA,IAAA0vB,EAAA,IAAAnN,EAAApB,kBAAAsO,EAAA,EAAAD,GAEA,IADAJ,EAAAO,WAAAD,GACAlf,EAAA,EAAiBA,EAAA0d,EAAkB1d,IAAA,CACnC,OAAA6e,GACA,OACAD,EAAAQ,iCACA,MACA,OACAR,EAAAS,6BACA,MACA,OACAT,EAAAU,iBACAhB,GACAM,EAAAW,0BAIAV,KAAA,KAEA,IAKArF,EAAA5oB,EAAA4uB,EALA9Y,EAAAmQ,EAAAgB,MAAAjF,GAAAiE,EAAAiB,MAAA7E,GAAAK,EACAmM,EAAAb,EAAAc,gBACAC,EAAAf,EAAAgB,qBACAC,EAAAjB,EAAAiB,YACAC,EAAAzB,EAAA,KAEA1sB,EAAA,EACA,IAAAouB,EAAA,OAAAnJ,EAAA7b,KACA,IAAAiF,EAAA,EAAiBA,EAAA2e,EAAiB3e,IAAA,CAClC,IACAggB,EAAA,GADAtZ,EAAA4M,EAAA,IACA2K,EAAA3K,GAAAiL,EAAAE,EACA,IAAAjF,EAAA,EAAmBA,EAAAkF,EAAgBlF,IAAA,CAEnC,QADA5oB,EAAA+uB,EAAAhuB,IACA,CACAf,KAAAkvB,GAAA3B,EACA,IAAAsB,EAAA9tB,KACAf,MAEA4uB,EAAAK,EAAAluB,GACA,IAAA5B,EAAAgwB,EAAAC,GAAAtZ,GAAA,GAAAA,EAEAsX,EAAAjuB,GADAsuB,GAAAmB,GAAApB,EACAxtB,EAEAA,GAAA,GAAAwtB,EAAAoB,GAGA9Y,IACA/U,IAEA+U,GAAA4M,EAAAoL,KAIA,SAAAuB,EAAAxM,EAAAE,EAAAxD,GAcA,IAbA,IAAAuC,EAAAiB,EAAAD,WAAAvD,GACA8E,EAAAvC,EAAAuC,sBACAiL,EAAAxN,EAAAwN,uBACA3G,EAAAtE,EAAAsE,yBACA4G,EAAAD,EAAAE,OACAC,EAAAH,EAAAG,gBACAC,EAAAJ,EAAAI,UACAhC,EAAArJ,EAAAqJ,uBACAiC,EAAA9M,EAAAC,WAAAvD,GAAAoQ,UACAlC,EAAApJ,EAAAuL,yBACAC,EAAApC,EAAA,IAAAqC,EAAA,IAAAC,EACAC,EAAA,GACA5pB,EAAA,EACAhF,EAAA,EAAmBA,GAAAunB,EAA+BvnB,IAAA,CAKlD,IAJA,IAAA2jB,EAAAjD,EAAAgH,YAAA1nB,GACAshB,EAAAqC,EAAAS,KAAAT,EAAAU,KACA9C,EAAAoC,EAAAY,KAAAZ,EAAAa,KACAwH,EAAA,IAAA6C,aAAAvN,EAAAC,GACAvT,EAAA,EAAAC,EAAA0V,EAAAmD,SAAAtpB,OAAsDwQ,EAAAC,EAAQD,IAAA,CAC9D,IAAA8gB,EAAAC,EACAV,GAIAS,EAAAX,EAAAnpB,GAAA8pB,GACAC,EAAAZ,EAAAnpB,GAAA+pB,QACA/pB,MALA8pB,EAAAX,EAAA,GAAAW,GACAC,EAAAZ,EAAA,GAAAY,SAAA/uB,EAAA,IAAAA,EAAA,IAMA,IAAA4kB,EAAAjB,EAAAmD,SAAA9Y,GACAghB,EAAA7O,EAAAyE,EAAA7b,MAGAgjB,EAAAC,EAAA1K,EAAAC,EAAAqD,EAFAyH,EAAA,EAAAjuB,KAAA6wB,IAAA,EAAAV,EAAAS,EAAAD,IAAA,EAAAD,EAAA,MACAR,EAAAS,EAAA,EACA1C,EAAAC,GAEAsC,EAAA/vB,KAAA,CACAyiB,QACAC,SACA1X,MAAAmiB,IAGA,IAAAtN,EAAA+P,EAAAS,UAAAN,EAAAlO,EAAAiC,KAAAjC,EAAAkC,MACA,OACAuM,KAAAzO,EAAAiC,KACAyM,IAAA1O,EAAAkC,KACAtB,MAAA5C,EAAA4C,MACAC,OAAA7C,EAAA6C,OACA1X,MAAA6U,EAAA7U,OAkFA,SAAAwlB,EAAA5N,EAAAuF,GAIA,IAHA,IACAK,EADA5F,EAAAG,IACAa,KACAd,EAAAF,EAAAI,MAAAmF,GACA7I,EAAA,EAAmBA,EAAAkJ,EAAqBlJ,IAAA,CACxC,IAAAuC,EAAAiB,EAAAD,WAAAvD,GACAmR,OAAAjyB,IAAAokB,EAAAwF,YAAAsI,IAAApR,GAAAsD,EAAAwF,YAAAsI,IAAApR,GAAAsD,EAAAwF,YAAAuI,IACA9O,EAAAwN,uBAAAoB,EACA,IAAAtM,OAAA3lB,IAAAokB,EAAAwF,YAAAwI,IAAAtR,GAAAsD,EAAAwF,YAAAwI,IAAAtR,GAAAsD,EAAAwF,YAAA2D,IACAlK,EAAAuC,sBAAAD,EAEArB,EAAAyF,6BAAA3F,EAAAwF,YAAA2D,IAvwCA9K,EAAAthB,UAAA,CACAqU,MAAA,SAAAnT,GAEA,YADA,EAAApC,EAAAoyB,YAAAhwB,EAAA,GAOA,IAFA,IAAAC,EAAA,EACAnC,EAAAkC,EAAAlC,OACAmC,EAAAnC,GAAA,CACA,IAAAmyB,EAAA,EACAC,GAAA,EAAAtyB,EAAAuyB,YAAAnwB,EAAAC,GACAmwB,GAAA,EAAAxyB,EAAAuyB,YAAAnwB,EAAAC,EAAA,GAUA,GATAA,GAAAgwB,EACA,IAAAC,IACAA,EAAA,cAAAtyB,EAAAuyB,YAAAnwB,EAAAC,IAAA,EAAArC,EAAAuyB,YAAAnwB,EAAAC,EAAA,GACAA,GAAA,EACAgwB,GAAA,GAEA,IAAAC,IACAA,EAAApyB,EAAAmC,EAAAgwB,GAEAC,EAAAD,EACA,UAAA3P,EAAA,0BAEA,IAAA9J,EAAA0Z,EAAAD,EACAI,GAAA,EACA,OAAAD,GACA,gBACAC,GAAA,EACA,MACA,gBACA,IAAAC,EAAAtwB,EAAAC,GACA,OAAAqwB,EAAA,CACA,IAAAC,GAAA,EAAA3yB,EAAAuyB,YAAAnwB,EAAAC,EAAA,GACA,OAAAswB,GACA,QACA,QACA,QACA,MACA,SACA,EAAA3yB,EAAAqM,MAAA,sBAAAsmB,SAGa,IAAAD,IACb,EAAA1yB,EAAA+L,MAAA,6BAEA,MACA,gBACA1L,KAAAuyB,gBAAAxwB,EAAAC,IAAAuW,GACA,MACA,eACA,eAAA5Y,EAAAuyB,YAAAnwB,EAAAC,KACA,EAAArC,EAAAqM,MAAA,yBAEA,MACA,gBACA,gBACA,gBACA,gBACA,gBACA,MACA,QACA,IAAAwmB,EAAAtiB,OAAAC,aAAAgiB,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IACA,EAAAxyB,EAAAqM,MAAA,2BAAAmmB,EAAA,KAAAK,EAAA,KAGAJ,IACApwB,GAAAuW,QAhEAvY,KAAAuyB,gBAAAxwB,EAAA,EAAAA,EAAAlC,SAoEA4yB,qBAAA,SAAAzuB,GAEA,IADA,IAAA0uB,EAAA1uB,EAAAxB,UACAkwB,GAAA,IAIA,YAHAA,GAEA,GADAA,EAAA1uB,EAAAxB,YAEA,CACAwB,EAAAZ,KAAA,GACA,IAAAigB,EAAArf,EAAApB,aAAA,EACA8gB,EAAA1f,EAAApB,aAAA,EACAsgB,EAAAlf,EAAApB,aAAA,EACA2gB,EAAAvf,EAAApB,aAAA,EACAoB,EAAAZ,KAAA,IACA,IAAA0hB,EAAA9gB,EAAAvB,YAKA,OAJAzC,KAAA2jB,MAAAN,EAAAH,EACAljB,KAAA4jB,OAAAF,EAAAH,EACAvjB,KAAA0pB,gBAAA5E,OACA9kB,KAAA2yB,iBAAA,IAIA,UAAAtQ,EAAA,uCAEAkQ,gBAAA,SAAAxwB,EAAA5B,EAAAE,GACA,IAAAyjB,EAAA,GACA8O,GAAA,EACA,IAEA,IADA,IAAA5wB,EAAA7B,EACA6B,EAAA,EAAA3B,GAAA,CACA,IAAAygB,GAAA,EAAAnhB,EAAAoyB,YAAAhwB,EAAAC,GACAA,GAAA,EACA,IACAqO,EACAwiB,EACArC,EACAsC,EACApC,EACA1M,EANAnkB,EAAA,EAOA,OAAAihB,GACA,WACAgD,EAAAiP,YAAA,EACA,MACA,WACA,MACA,WACAlzB,GAAA,EAAAF,EAAAoyB,YAAAhwB,EAAAC,GACA,IAAAghB,EAAA,GACAA,EAAAK,MAAA,EAAA1jB,EAAAuyB,YAAAnwB,EAAAC,EAAA,GACAghB,EAAAU,MAAA,EAAA/jB,EAAAuyB,YAAAnwB,EAAAC,EAAA,GACAghB,EAAAE,OAAA,EAAAvjB,EAAAuyB,YAAAnwB,EAAAC,EAAA,IACAghB,EAAAO,OAAA,EAAA5jB,EAAAuyB,YAAAnwB,EAAAC,EAAA,IACAghB,EAAAqB,OAAA,EAAA1kB,EAAAuyB,YAAAnwB,EAAAC,EAAA,IACAghB,EAAAwB,OAAA,EAAA7kB,EAAAuyB,YAAAnwB,EAAAC,EAAA,IACAghB,EAAAoB,QAAA,EAAAzkB,EAAAuyB,YAAAnwB,EAAAC,EAAA,IACAghB,EAAAuB,QAAA,EAAA5kB,EAAAuyB,YAAAnwB,EAAAC,EAAA,IACA,IAAA0nB,GAAA,EAAA/pB,EAAAoyB,YAAAhwB,EAAAC,EAAA,IACAghB,EAAA8B,KAAA4E,EACA,IAAA3F,EAAA,GACA1T,EAAArO,EAAA,GACA,QAAAK,EAAA,EAA6BA,EAAAqnB,EAAqBrnB,IAAA,CAClD,IAAA0gB,EAAA,CACA6N,UAAA,OAAA7uB,EAAAsO,IACA2iB,YAAA,IAAAjxB,EAAAsO,IACA8S,MAAAphB,EAAAsO,EAAA,GACAmT,MAAAzhB,EAAAsO,EAAA,IAEAA,GAAA,EACAyS,EAAAC,EAAAC,GACAe,EAAA7iB,KAAA6hB,GAEAe,EAAAG,IAAAjB,EACAc,EAAAC,aACAF,EAAAC,EAAAC,GACAD,EAAA8N,IAAA,GACA9N,EAAAgO,IAAA,GACA,MACA,WACAjyB,GAAA,EAAAF,EAAAoyB,YAAAhwB,EAAAC,GACA,IAAAixB,EAAA,GAGA,OAFA5iB,EAAArO,EAAA,EAEA,IADA6wB,EAAA9wB,EAAAsO,OAEA,OACAyiB,EAAA,EACApC,GAAA,EACA,MACA,OACAoC,EAAA,GACApC,GAAA,EACA,MACA,OACAoC,EAAA,GACApC,GAAA,EACA,MACA,QACA,UAAAlvB,MAAA,sBAAAqxB,GAMA,IAJAI,EAAAC,eAAA,IAAAJ,EACAG,EAAAvC,kBACAuC,EAAAtC,UAAAkC,GAAA,EACArC,EAAA,GACAngB,EAAAxQ,EAAAmC,GAAA,CACA,IAAAmxB,EAAA,GACA,IAAAL,GACAK,EAAA/B,QAAArvB,EAAAsO,MAAA,EACA8iB,EAAAhC,GAAA,IAEAgC,EAAA/B,QAAArvB,EAAAsO,IAAA,EACA8iB,EAAAhC,IAAA,EAAApvB,EAAAsO,KAAA,EAAAtO,EAAAsO,EAAA,GACAA,GAAA,GAEAmgB,EAAAtvB,KAAAiyB,GAEAF,EAAAxC,OAAAD,EACA1M,EAAAiP,WACAjP,EAAA+N,IAAAoB,GAEAnP,EAAAwF,YAAAuI,IAAAoB,EACAnP,EAAAwF,YAAAsI,IAAA,IAEA,MACA,WACA/xB,GAAA,EAAAF,EAAAoyB,YAAAhwB,EAAAC,GACA,IAEAoxB,EAFAC,EAAA,GAUA,OATAhjB,EAAArO,EAAA,EAEA8hB,EAAAG,IAAAa,KAAA,IACAsO,EAAArxB,EAAAsO,MAEA+iB,GAAA,EAAAzzB,EAAAoyB,YAAAhwB,EAAAsO,GACAA,GAAA,GAGA,IADAwiB,EAAA9wB,EAAAsO,OAEA,OACAyiB,EAAA,EACApC,GAAA,EACA,MACA,OACAoC,EAAA,GACApC,GAAA,EACA,MACA,OACAoC,EAAA,GACApC,GAAA,EACA,MACA,QACA,UAAAlvB,MAAA,sBAAAqxB,GAMA,IAJAQ,EAAAH,eAAA,IAAAJ,EACAO,EAAA3C,kBACA2C,EAAA1C,UAAAkC,GAAA,EACArC,EAAA,GACAngB,EAAAxQ,EAAAmC,GACAmxB,EAAA,GACA,IAAAL,GACAK,EAAA/B,QAAArvB,EAAAsO,MAAA,EACA8iB,EAAAhC,GAAA,IAEAgC,EAAA/B,QAAArvB,EAAAsO,IAAA,EACA8iB,EAAAhC,IAAA,EAAApvB,EAAAsO,KAAA,EAAAtO,EAAAsO,EAAA,GACAA,GAAA,GAEAmgB,EAAAtvB,KAAAiyB,GAEAE,EAAA5C,OAAAD,EACA1M,EAAAiP,WACAjP,EAAA8N,IAAAwB,GAAAC,EAEAvP,EAAAwF,YAAAsI,IAAAwB,GAAAC,EAEA,MACA,WACAxzB,GAAA,EAAAF,EAAAoyB,YAAAhwB,EAAAC,GACA,IAAAsxB,EAAA,GACAjjB,EAAArO,EAAA,EACA,IAAAuxB,EAAAxxB,EAAAsO,KACAijB,EAAA/N,mCAAA,EAAAgO,GACAD,EAAAtG,iBAAA,EAAAuG,GACAD,EAAApG,iBAAA,EAAAqG,GACAD,EAAAhH,iBAAAvqB,EAAAsO,KACAijB,EAAA9J,aAAA,EAAA7pB,EAAAoyB,YAAAhwB,EAAAsO,GACAA,GAAA,EACAijB,EAAAE,2BAAAzxB,EAAAsO,KACAijB,EAAA1J,yBAAA7nB,EAAAsO,KACAijB,EAAA1N,IAAA,MAAA7jB,EAAAsO,MACAijB,EAAAxN,IAAA,MAAA/jB,EAAAsO,MACA,IAAAojB,EAAA1xB,EAAAsO,KAQA,GAPAijB,EAAAI,mCAAA,EAAAD,GACAH,EAAAK,6BAAA,EAAAF,GACAH,EAAAM,+BAAA,EAAAH,GACAH,EAAAO,mBAAA,EAAAJ,GACAH,EAAAQ,0BAAA,GAAAL,GACAH,EAAA3E,0BAAA,GAAA8E,GACAH,EAAAzC,yBAAA9uB,EAAAsO,KACAijB,EAAA/N,gCAAA,CAEA,IADA,IAAAE,EAAA,GACApV,EAAAxQ,EAAAmC,GAAA,CACA,IAAA+xB,EAAAhyB,EAAAsO,KACAoV,EAAAvkB,KAAA,CACAskB,IAAA,GAAAuO,EACArO,IAAAqO,GAAA,IAGAT,EAAA7N,iBAEA,IAAAuO,EAAA,GAgBA,GAfAV,EAAAI,iCACAM,EAAA9yB,KAAA,mCAEAoyB,EAAAK,2BACAK,EAAA9yB,KAAA,6BAEAoyB,EAAAM,6BACAI,EAAA9yB,KAAA,+BAEAoyB,EAAAO,iBACAG,EAAA9yB,KAAA,mBAEAoyB,EAAAQ,wBACAE,EAAA9yB,KAAA,0BAEA8yB,EAAAn0B,OAAA,EAEA,MADA+yB,GAAA,EACA,IAAApxB,MAAA,4BAAAwyB,EAAAzjB,KAAA,WAEAuT,EAAAiP,WACAjP,EAAAmJ,IAAAqG,GAEAxP,EAAAwF,YAAA2D,IAAAqG,EACAxP,EAAAwF,YAAAwI,IAAA,IAEA,MACA,WACAjyB,GAAA,EAAAF,EAAAoyB,YAAAhwB,EAAAC,IACAgiB,EAAA,IACAuF,OAAA,EAAA5pB,EAAAoyB,YAAAhwB,EAAAC,EAAA,GACAgiB,EAAAnkB,QAAA,EAAAF,EAAAuyB,YAAAnwB,EAAAC,EAAA,GACAgiB,EAAAzC,QAAAyC,EAAAnkB,OAAAmC,EAAA,EACAgiB,EAAAiQ,UAAAlyB,EAAAC,EAAA,GACAgiB,EAAAkQ,WAAAnyB,EAAAC,EAAA,GACA8hB,EAAAiP,YAAA,EACA,IAAA/O,EAAAiQ,YACAjQ,EAAAiJ,IAAAnJ,EAAAmJ,IACAjJ,EAAA8N,IAAAhO,EAAAgO,IAAAqC,MAAA,GACAnQ,EAAA6N,IAAA/N,EAAA+N,IACA7N,EAAA4N,IAAA9N,EAAA8N,IAAAuC,MAAA,IAEArQ,EAAAwF,YAAAtF,EACA,MACA,WAEA,KADAA,EAAAF,EAAAwF,aACA2K,YACAvC,EAAA5N,EAAAE,EAAAuF,OACA2C,EAAApI,IAGA0I,EAAA1I,EAAA/hB,EAAAC,EADAnC,EAAAmkB,EAAAzC,QAAAvf,GAEA,MACA,WACA,WACA,WACA,WACAnC,GAAA,EAAAF,EAAAoyB,YAAAhwB,EAAAC,GACA,MACA,WACA,UAAAR,MAAA,mDACA,QACA,UAAAA,MAAA,4BAAAsf,EAAAtG,SAAA,KAEAxY,GAAAnC,GAEO,MAAAkG,GACP,GAAA6sB,GAAA5yB,KAAA6iB,qBACA,UAAAR,EAAAtc,EAAAwc,UAEA,EAAA5iB,EAAAqM,MAAA,gCAAAjG,EAAAwc,SAGAviB,KAAAkkB,MA80BA,SAAAJ,GAKA,IAJA,IAAAd,EAAAc,EAAAG,IACAF,EAAAD,EAAAC,WACA2F,EAAA1G,EAAA8B,KACAsP,EAAA,GACA/xB,EAAA,EAAA6D,EAAA4d,EAAAI,MAAArkB,OAA8CwC,EAAA6D,EAAQ7D,IAAA,CACtD,IAEAme,EAFAwD,EAAAF,EAAAI,MAAA7hB,GACAgyB,EAAA,GAEA,IAAA7T,EAAA,EAAiBA,EAAAkJ,EAAqBlJ,IACtC6T,EAAA7T,GAAA8P,EAAAxM,EAAAE,EAAAxD,GAEA,IASA/T,EAAAsK,EAEA1G,EACAC,EACAgT,EACAG,EACA6Q,EAfAC,EAAAF,EAAA,GACAG,EAAA,IAAAC,kBAAAF,EAAAroB,MAAArM,OAAA6pB,GACA3I,EAAA,CACAyQ,KAAA+C,EAAA/C,KACAC,IAAA8C,EAAA9C,IACA9N,MAAA4Q,EAAA5Q,MACAC,OAAA2Q,EAAA3Q,OACA1X,MAAAsoB,GAGAp0B,EAAA,EAMA,GAAA4jB,EAAAyF,6BAAA+J,2BAAA,CACA,IAAAkB,EAAA,IAAAhL,EACAiL,EAAAN,EAAA,GAAAnoB,MACA0oB,EAAAP,EAAA,GAAAnoB,MACA2oB,EAAAR,EAAA,GAAAnoB,MACA4oB,EAAAJ,EAAAL,EAAA,GAAAnoB,MAAA,KACAO,EAAAsX,EAAA,GAAA6M,UAAA,EACA7Z,EAAA,SAAAtK,GACA,IAAAsoB,EAAA/Q,EAAAD,WAAA,GACAiR,EAAAtL,EAAA,EAEA,GADApZ,EAAAqkB,EAAA90B,OACAk1B,EAAAzP,sBAAAuL,yBAUA,IAAAxgB,EAAA,EAAqBA,EAAAC,EAAQD,IAAAjQ,GAAA40B,EAAA,CAC7B1R,EAAAqR,EAAAtkB,GAAA0G,EACA0M,EAAAmR,EAAAvkB,GACAikB,EAAAO,EAAAxkB,GACA,IAAA4kB,EAAA3R,GAAAgR,EAAA7Q,GAAA,GACA+Q,EAAAp0B,KAAA60B,EAAAX,GAAA7nB,EACA+nB,EAAAp0B,KAAA60B,GAAAxoB,EACA+nB,EAAAp0B,KAAA60B,EAAAxR,GAAAhX,OAhBA,IAAA4D,EAAA,EAAqBA,EAAAC,EAAQD,IAAAjQ,GAAA40B,EAC7B1R,EAAAqR,EAAAtkB,GAAA0G,EACA0M,EAAAmR,EAAAvkB,GACAikB,EAAAO,EAAAxkB,GACAmkB,EAAAp0B,KAAAkjB,EAAA,MAAAgR,GAAA7nB,EACA+nB,EAAAp0B,KAAAkjB,EAAA,OAAAG,EAAA,OAAA6Q,GAAA7nB,EACA+nB,EAAAp0B,KAAAkjB,EAAA,MAAAG,GAAAhX,EAaA,GAAAioB,EACA,IAAArkB,EAAA,EAAAjQ,EAAA,EAA8BiQ,EAAAC,EAAQD,IAAAjQ,GAAA,EACtCo0B,EAAAp0B,GAAA00B,EAAAzkB,GAAA0G,GAAAtK,OAIA,IAAA+T,EAAA,EAAmBA,EAAAkJ,EAAqBlJ,IAAA,CACxC,IAAAtU,EAAAmoB,EAAA7T,GAAAtU,MAGA,IAFAO,EAAAsX,EAAAvD,GAAAoQ,UAAA,EACA7Z,EAAA,SAAAtK,GACArM,EAAAogB,EAAAnQ,EAAA,EAAAC,EAAApE,EAAArM,OAAiDwQ,EAAAC,EAAQD,IACzDmkB,EAAAp0B,GAAA8L,EAAAmE,GAAA0G,GAAAtK,EACArM,GAAAspB,EAIA0K,EAAAlzB,KAAA6f,GAEA,OAAAqT,EA35BAc,CAAApR,GACA9jB,KAAA2jB,MAAAG,EAAAG,IAAAZ,KAAAS,EAAAG,IAAAf,MACAljB,KAAA4jB,OAAAE,EAAAG,IAAAP,KAAAI,EAAAG,IAAAV,MACAvjB,KAAA0pB,gBAAA5F,EAAAG,IAAAa,OAu6BA,IAAA4I,EAAA,WACA,SAAAA,EAAA/J,EAAAC,GACA,IAAAuR,GAAA,EAAAx1B,EAAAsuB,MAAAxtB,KAAAgZ,IAAAkK,EAAAC,IAAA,EACA5jB,KAAAo1B,OAAA,GACA,QAAA/yB,EAAA,EAAqBA,EAAA8yB,EAAkB9yB,IAAA,CACvC,IAAAgzB,EAAA,CACA1R,QACAC,SACA1X,MAAA,IAEAlM,KAAAo1B,OAAAl0B,KAAAm0B,GACA1R,EAAAljB,KAAAC,KAAAijB,EAAA,GACAC,EAAAnjB,KAAAC,KAAAkjB,EAAA,IA6CA,OA1CA8J,EAAA7sB,UAAA,CACAwC,MAAA,SAAAhB,EAAAgO,GAIA,IAHA,IAEAglB,EAFAC,EAAA,EACA/1B,EAAA,EAEA+1B,EAAAt1B,KAAAo1B,OAAAv1B,QAAA,CAEA,IAAA0pB,EAAAlnB,EAAAgO,GADAglB,EAAAr1B,KAAAo1B,OAAAE,IACA3R,MACA,QAAAjkB,IAAA21B,EAAAnpB,MAAAqd,GAAA,CACAhqB,EAAA81B,EAAAnpB,MAAAqd,GACA,MAEA8L,EAAA9L,QACAlnB,IAAA,EACAgO,IAAA,EACAilB,IAEAA,KACAD,EAAAr1B,KAAAo1B,OAAAE,IACAppB,MAAAmpB,EAAA9L,OAAAhqB,EACAS,KAAAs1B,sBACAt1B,KAAAT,OAEAouB,eAAA,WACA,IAAA0H,EAAAr1B,KAAAo1B,OAAAp1B,KAAAs1B,cACAD,EAAAnpB,MAAAmpB,EAAA9L,UAEAqE,UAAA,WACA,IAAA0H,EAAAt1B,KAAAs1B,aACAD,EAAAr1B,KAAAo1B,OAAAE,GACA/1B,EAAA81B,EAAAnpB,MAAAmpB,EAAA9L,OAEA,QADA+L,EACA,GACAt1B,KAAAT,SACA,IAEAS,KAAAs1B,gBACAD,EAAAr1B,KAAAo1B,OAAAE,IACAppB,MAAAmpB,EAAA9L,OAAAhqB,GACA,KAGAmuB,EAzDA,GA2DAD,EAAA,WACA,SAAAA,EAAA9J,EAAAC,EAAA2R,GACA,IAAAJ,GAAA,EAAAx1B,EAAAsuB,MAAAxtB,KAAAgZ,IAAAkK,EAAAC,IAAA,EACA5jB,KAAAo1B,OAAA,GACA,QAAA/yB,EAAA,EAAqBA,EAAA8yB,EAAkB9yB,IAAA,CAEvC,IADA,IAAA6J,EAAA,IAAAhM,WAAAyjB,EAAAC,GACAvT,EAAA,EAAAC,EAAApE,EAAArM,OAA0CwQ,EAAAC,EAAQD,IAClDnE,EAAAmE,GAAAklB,EAEA,IAAAF,EAAA,CACA1R,QACAC,SACA1X,SAEAlM,KAAAo1B,OAAAl0B,KAAAm0B,GACA1R,EAAAljB,KAAAC,KAAAijB,EAAA,GACAC,EAAAnjB,KAAAC,KAAAkjB,EAAA,IAuDA,OApDA6J,EAAA5sB,UAAA,CACAwC,MAAA,SAAAhB,EAAAgO,EAAAmlB,GAEA,IADA,IAAAF,EAAA,EACAA,EAAAt1B,KAAAo1B,OAAAv1B,QAAA,CACA,IAAAw1B,EAAAr1B,KAAAo1B,OAAAE,GACA/L,EAAAlnB,EAAAgO,EAAAglB,EAAA1R,MACA0R,EAAA9L,QACA,IAAAhqB,EAAA81B,EAAAnpB,MAAAqd,GACA,SAAAhqB,EACA,MAEA,GAAAA,EAAAi2B,EAGA,OAFAx1B,KAAAs1B,eACAt1B,KAAAy1B,mBACA,EAEApzB,IAAA,EACAgO,IAAA,EACAilB,IAGA,OADAt1B,KAAAs1B,eAAA,GACA,GAEA3H,eAAA,SAAA6H,GACA,IAAAH,EAAAr1B,KAAAo1B,OAAAp1B,KAAAs1B,cACAD,EAAAnpB,MAAAmpB,EAAA9L,OAAAiM,EAAA,EACAx1B,KAAAy1B,mBAEAA,gBAAA,WAIA,IAHA,IAAAC,EAAA11B,KAAAs1B,aACAD,EAAAr1B,KAAAo1B,OAAAM,GACAC,EAAAN,EAAAnpB,MAAAmpB,EAAA9L,SACAmM,GAAA,IACAL,EAAAr1B,KAAAo1B,OAAAM,IACAxpB,MAAAmpB,EAAA9L,OAAAoM,GAGA/H,UAAA,WACA,IAAA0H,EAAAt1B,KAAAs1B,aACAD,EAAAr1B,KAAAo1B,OAAAE,GACA/1B,EAAA81B,EAAAnpB,MAAAmpB,EAAA9L,OAGA,OAFA8L,EAAAnpB,MAAAmpB,EAAA9L,OAAA,QACA+L,EACA,KAGAt1B,KAAAs1B,gBACAD,EAAAr1B,KAAAo1B,OAAAE,IACAppB,MAAAmpB,EAAA9L,OAAAhqB,GACA,KAGAkuB,EAvEA,GAyEA0B,EAAA,WACA,IAEAyG,EAAA,IAAA11B,WAAA,yJACA21B,EAAA,IAAA31B,WAAA,yJACA41B,EAAA,IAAA51B,WAAA,yJACA,SAAAivB,EAAAxL,EAAAC,EAAAqD,EAAA6G,EAAAW,GACAzuB,KAAA2jB,QACA3jB,KAAA4jB,SACA5jB,KAAA+1B,kBAAA,OAAA9O,EAAA6O,EAAA,OAAA7O,EAAA4O,EAAAD,EACA,IAAAI,EAAArS,EAAAC,EACA5jB,KAAAi2B,sBAAA,IAAA/1B,WAAA81B,GACAh2B,KAAA+vB,gBAAA,IAAA7vB,WAAA81B,GACAh2B,KAAAiwB,qBAAAxB,EAAA,OAAAzP,YAAAgX,GAAAvH,EAAA,MAAAyH,YAAAF,GAAA,IAAA91B,WAAA81B,GACAh2B,KAAAm2B,gBAAA,IAAAj2B,WAAA81B,GACA,IAAA9F,EAAA,IAAAhwB,WAAA81B,GACA,OAAAlI,EACA,QAAAzrB,EAAA,EAAuBA,EAAA2zB,EAAsB3zB,IAC7C6tB,EAAA7tB,GAAAyrB,EAGA9tB,KAAAkwB,cACAlwB,KAAAqD,QAyPA,OAvPA8rB,EAAAtuB,UAAA,CACA2uB,WAAA,SAAAD,GACAvvB,KAAAuvB,WAEAlsB,MAAA,WACArD,KAAA6hB,SAAA,IAAAuU,UAAA,IACAp2B,KAAA6hB,SAAA,KACA7hB,KAAA6hB,SA9BA,IA8BA,GACA7hB,KAAA6hB,SA9BA,IA8BA,GAEAwU,yBAAA,SAAAlX,EAAAmX,EAAA/M,GACA,IAKAlnB,EALA4zB,EAAAj2B,KAAAi2B,sBACAtS,EAAA3jB,KAAA2jB,MACAC,EAAA5jB,KAAA4jB,OACA4N,EAAA8E,EAAA,EACA1H,EAAA0H,EAAA,EAAA3S,EAEAxE,EAAA,IACA9c,EAAAknB,EAAA5F,EACA6N,IACAyE,EAAA5zB,EAAA,QAEAusB,IACAqH,EAAA5zB,EAAA,QAEA4zB,EAAA5zB,IAAA,GAEA8c,EAAA,EAAAyE,IACAvhB,EAAAknB,EAAA5F,EACA6N,IACAyE,EAAA5zB,EAAA,QAEAusB,IACAqH,EAAA5zB,EAAA,QAEA4zB,EAAA5zB,IAAA,GAEAmvB,IACAyE,EAAA1M,EAAA,OAEAqF,IACAqH,EAAA1M,EAAA,OAEA0M,EAAA1M,IAAA,KAEAkG,+BAAA,WAcA,IAbA,IAAAF,EAAAvvB,KAAAuvB,QACA5L,EAAA3jB,KAAA2jB,MACAC,EAAA5jB,KAAA4jB,OACAqM,EAAAjwB,KAAAiwB,qBACAF,EAAA/vB,KAAA+vB,gBACAkG,EAAAj2B,KAAAi2B,sBACAE,EAAAn2B,KAAAm2B,gBACAtU,EAAA7hB,KAAA6hB,SACA0U,EAAAv2B,KAAA+1B,kBACA7F,EAAAlwB,KAAAkwB,YAIAsG,EAAA,EAAwBA,EAAA5S,EAAa4S,GAAA,EACrC,QAAAnmB,EAAA,EAAyBA,EAAAsT,EAAWtT,IAEpC,IADA,IAAAkZ,EAAAiN,EAAA7S,EAAAtT,EACAomB,EAAA,EAA4BA,EAAA,EAAQA,IAAAlN,GAAA5F,EAAA,CACpC,IAAAthB,EAAAm0B,EAAAC,EACA,GAAAp0B,GAAAuhB,EACA,MAGA,GADAuS,EAAA5M,KAXA,GAYA0G,EAAA1G,IAAA0M,EAAA1M,GAAA,CAGA,IAAAmN,EAAAH,EAAAN,EAAA1M,IAEA,GADAgG,EAAA3N,QAAAC,EAAA6U,GACA,CACA,IAAA5G,EAAA9vB,KAAA22B,cAAAt0B,EAAAgO,EAAAkZ,GACAwG,EAAAxG,GAAAuG,EACAG,EAAA1G,GAAA,EACAvpB,KAAAq2B,yBAAAh0B,EAAAgO,EAAAkZ,GACA4M,EAAA5M,IApBA,EAsBA2G,EAAA3G,KACA4M,EAAA5M,IAxBA,KA6BAoN,cAAA,SAAAxX,EAAAmX,EAAA/M,GACA,IAIAqN,EAAAC,EAAAC,EAAAC,EACAL,EAAAM,EALArT,EAAA3jB,KAAA2jB,MACAC,EAAA5jB,KAAA4jB,OACAqM,EAAAjwB,KAAAiwB,qBACAF,EAAA/vB,KAAA+vB,gBAGAgH,EAAAT,EAAA,OAAArG,EAAA1G,EAAA,GACA+M,EAAA,EAAA3S,GAAA,IAAAsM,EAAA1G,EAAA,IACAuN,EAAA/G,EAAAxG,EAAA,GAGAqN,EAFAG,EAEA,EAAAD,GADAD,EAAA9G,EAAAxG,EAAA,IAGA,EAAAuN,KAIAF,EAFSG,EAET,GADAF,EAAA9G,EAAAxG,EAAA,IACAsN,EAEA,EAEA,IAAAI,EAAA,EAAAL,EAuBA,OAtBAG,EAAA5X,EAAA,OAAA8Q,EAAA1G,EAAA5F,GACAxE,EAAA,EAAAyE,GAAA,IAAAqM,EAAA1G,EAAA5F,IACAmT,EAAA/G,EAAAxG,EAAA5F,GAGAiT,EAFAG,EAEA,EAAAD,GADAD,EAAA9G,EAAAxG,EAAA5F,IACAsT,EAEA,EAAAH,IAAAG,GAIAL,EAFSG,EAET,GADAF,EAAA9G,EAAAxG,EAAA5F,IACAkT,EAAAI,EAEAA,EAEAL,GAAA,GACAF,EAAA,EAAAE,EACAI,EAAAh3B,KAAAuvB,QAAA3N,QAAA5hB,KAAA6hB,SAAA6U,KAEAA,EAAA,EAAAE,EACAI,EAAA,EAAAh3B,KAAAuvB,QAAA3N,QAAA5hB,KAAA6hB,SAAA6U,IAEAM,GAEAtH,2BAAA,WAaA,IAZA,IAYAwH,EAZA3H,EAAAvvB,KAAAuvB,QACA5L,EAAA3jB,KAAA2jB,MACAC,EAAA5jB,KAAA4jB,OACAqM,EAAAjwB,KAAAiwB,qBACAgG,EAAAj2B,KAAAi2B,sBACApU,EAAA7hB,KAAA6hB,SACAqO,EAAAlwB,KAAAkwB,YACAiG,EAAAn2B,KAAAm2B,gBAGAt2B,EAAA8jB,EAAAC,EACAuT,EAAA,EAAAxT,EACAyT,EAAA,EAAuCA,EAAAv3B,EAAiBu3B,EAAAF,EAAA,CACxDA,EAAAz2B,KAAAkG,IAAA9G,EAAAu3B,EAAAD,GACA,QAAA9mB,EAAA,EAAyBA,EAAAsT,EAAWtT,IACpC,QAAAkZ,EAAA6N,EAAA/mB,EAAwCkZ,EAAA2N,EAAmB3N,GAAA5F,EAC3D,GAAAsM,EAAA1G,IAAA,IARA,EAQA4M,EAAA5M,IAAA,CAGA,IAAAmN,EAAA,GACA,OAXA,EAWAP,EAAA5M,IACA4M,EAAA5M,IAZA,EAcAmN,EAAA,KADA,IAAAT,EAAA1M,IACA,MAEA,IAAA8N,EAAA9H,EAAA3N,QAAAC,EAAA6U,GACAzG,EAAA1G,GAAA0G,EAAA1G,IAAA,EAAA8N,EACAnH,EAAA3G,KACA4M,EAAA5M,IApBA,KAyBAoG,eAAA,WAiBA,IAhBA,IAeA2H,EAfA/H,EAAAvvB,KAAAuvB,QACA5L,EAAA3jB,KAAA2jB,MACAC,EAAA5jB,KAAA4jB,OACAqS,EAAAj2B,KAAAi2B,sBACAhG,EAAAjwB,KAAAiwB,qBACAF,EAAA/vB,KAAA+vB,gBACAlO,EAAA7hB,KAAA6hB,SACA0U,EAAAv2B,KAAA+1B,kBACA7F,EAAAlwB,KAAAkwB,YACAiG,EAAAn2B,KAAAm2B,gBAGAoB,EAAA5T,EACA6T,EAAA,EAAA7T,EACA8T,EAAA,EAAA9T,EAEA6S,EAAA,EAAwBA,EAAA5S,EAAa4S,EAAAc,EAAA,CACrCA,EAAA72B,KAAAkG,IAAA6vB,EAAA,EAAA5S,GAGA,IAFA,IAAA8T,EAAAlB,EAAA7S,EACAgU,EAAAnB,EAAA,EAAA5S,EACAvT,EAAA,EAAyBA,EAAAsT,EAAWtT,IAAA,CACpC,IAKAyf,EALAsH,EAAAM,EAAArnB,EAEAomB,EAAA,EACAlN,EAAA6N,EACA/0B,EAAAm0B,EAEA,GALAmB,GAAA,IAAAxB,EAAAiB,IAAA,IAAAjB,EAAAiB,EAAAG,IAAA,IAAApB,EAAAiB,EAAAI,IAAA,IAAArB,EAAAiB,EAAAK,IAAA,IAAAxB,EAAAmB,IAAA,IAAAnB,EAAAmB,EAAAG,IAAA,IAAAtB,EAAAmB,EAAAI,IAAA,IAAAvB,EAAAmB,EAAAK,GAKA,CAEA,IADAlI,EAAA3N,QAAAC,EA1NA,IA2NA,CACAqO,EAAAkH,KACAlH,EAAAkH,EAAAG,KACArH,EAAAkH,EAAAI,KACAtH,EAAAkH,EAAAK,KACA,SAGA,KADAhB,EAAAlH,EAAA3N,QAAAC,EAnOA,KAmOA,EAAA0N,EAAA3N,QAAAC,EAnOA,OAqOAxf,EAAAm0B,EAAAC,EACAlN,GAAAkN,EAAA9S,GAEAmM,EAAA9vB,KAAA22B,cAAAt0B,EAAAgO,EAAAkZ,GACAwG,EAAAxG,GAAAuG,EACAG,EAAA1G,GAAA,EACAvpB,KAAAq2B,yBAAAh0B,EAAAgO,EAAAkZ,GACA4M,EAAA5M,IAlCA,EAmCAA,EAAA6N,EACA,QAAAQ,EAAApB,EAA+BoB,GAAAv1B,EAASu1B,IAAArO,GAAA5F,EACxCuM,EAAA3G,KAEAkN,IAEA,IAAAp0B,EAAAm0B,EAAAC,EAA6Bp0B,EAAAi1B,EAAWj1B,IAAAknB,GAAA5F,EACxC,IAAAsM,EAAA1G,IAAA,IA3CA,EA2CA4M,EAAA5M,IAAA,CAGA,IAAAmN,EAAAH,EAAAN,EAAA1M,IAEA,IADAgG,EAAA3N,QAAAC,EAAA6U,KAEA5G,EAAA9vB,KAAA22B,cAAAt0B,EAAAgO,EAAAkZ,GACAwG,EAAAxG,GAAAuG,EACAG,EAAA1G,GAAA,EACAvpB,KAAAq2B,yBAAAh0B,EAAAgO,EAAAkZ,GACA4M,EAAA5M,IApDA,GAsDA2G,EAAA3G,SAKAqG,wBAAA,WACA,IAAAL,EAAAvvB,KAAAuvB,QACA1N,EAAA7hB,KAAA6hB,SAEA,SADA0N,EAAA3N,QAAAC,EAxQA,KAwQA,EAAA0N,EAAA3N,QAAAC,EAxQA,KAwQA,EAAA0N,EAAA3N,QAAAC,EAxQA,KAwQA,EAAA0N,EAAA3N,QAAAC,EAxQA,KA0QA,UAAAQ,EAAA,iCAIA8M,EA/QA,GAiRA0I,EAAA,WACA,SAAAA,KAkGA,OAjGAA,EAAAh3B,UAAA0wB,UAAA,SAAApI,EAAA2O,EAAAC,GAEA,IADA,IAAAC,EAAA7O,EAAA,GACA9mB,EAAA,EAAA6D,EAAAijB,EAAAtpB,OAA2CwC,EAAA6D,EAAQ7D,IACnD21B,EAAAh4B,KAAAi4B,QAAAD,EAAA7O,EAAA9mB,GAAAy1B,EAAAC,GAEA,OAAAC,GAEAH,EAAAh3B,UAAAq3B,OAAA,SAAAlf,EAAAjC,EAAAohB,GACA,IAAA1B,EAAA1f,EAAA,EACAqhB,EAAArhB,EAAA,EACA6gB,EAAA7gB,EAAAohB,EAAA,EACAE,EAAAthB,EAAAohB,EACAnf,EAAAyd,KAAAzd,EAAAof,KACApf,EAAAqf,KAAArf,EAAA4e,KACA5e,EAAAyd,KAAAzd,EAAAof,KACApf,EAAAqf,KAAArf,EAAA4e,KACA5e,EAAAyd,KAAAzd,EAAAof,KACApf,EAAAqf,KAAArf,EAAA4e,KACA5e,EAAAyd,GAAAzd,EAAAof,GACApf,EAAAqf,GAAArf,EAAA4e,IAEAC,EAAAh3B,UAAAo3B,QAAA,SAAAD,EAAAM,EAAAR,EAAAC,GACA,IAMA11B,EAAAgO,EAAAwZ,EAAAjO,EAAA2c,EAAAC,EANAC,EAAAT,EAAArU,MACA+U,EAAAV,EAAApU,OACA+U,EAAAX,EAAA9rB,MACAyX,EAAA2U,EAAA3U,MACAC,EAAA0U,EAAA1U,OACA1X,EAAAosB,EAAApsB,MAEA,IAAA2d,EAAA,EAAAxnB,EAAA,EAAwBA,EAAAq2B,EAAcr2B,IAEtC,IADAuZ,EAAA,EAAAvZ,EAAAshB,EACAtT,EAAA,EAAmBA,EAAAooB,EAAapoB,IAAAwZ,IAAAjO,GAAA,EAChC1P,EAAA0P,GAAA+c,EAAA9O,GAGA8O,EAAAX,EAAA9rB,MAAA,KACA,IACA0sB,EAAA,IAAA1H,aAAAvN,EAAA,GACA,OAAAA,GACA,SAAAmU,GACA,IAAAU,EAAA,EAAA3O,EAAA,EAA4B2O,EAAA5U,EAAY4U,IAAA3O,GAAAlG,EACxCzX,EAAA2d,IAAA,QAIA,IAAA2O,EAAA,EAAA3O,EAAA,EAA0B2O,EAAA5U,EAAY4U,IAAA3O,GAAAlG,EACtCiV,EAAAn3B,IAAAyK,EAAAnJ,SAAA8mB,IAAAlG,GAVA,GAWA3jB,KAAAk4B,OAAAU,EAXA,EAWAjV,GACA3jB,KAAA64B,OAAAD,EAZA,EAYAjV,GACAzX,EAAAzK,IAAAm3B,EAAA71B,SAbA,IAaA4gB,GAAAkG,GAGA,IAAAiP,EAAA,GACAC,EAAA,GACA,IAAA12B,EAAA,EAAiBA,EAAAy2B,EAAgBz2B,IACjC02B,EAAA73B,KAAA,IAAAgwB,aAAAtN,EAAA,IAEA,IAAAvc,EACA2xB,EAAA,EAEA,GADAhB,EAvBA,EAuBApU,EACA,IAAAA,GACA,SAAAmU,GACA,IAAAQ,EAAA,EAAqBA,EAAA5U,EAAW4U,IAChCrsB,EAAAqsB,IAAA,QAIA,IAAAA,EAAA,EAAmBA,EAAA5U,EAAW4U,IAAA,CAC9B,OAAAS,EAAA,CAEA,IADAF,EAAAr4B,KAAAkG,IAAAgd,EAAA4U,EAAAO,GACAjP,EAAA0O,EAAA3c,EAlCA,EAkC0CA,EAAAoc,EAAQnO,GAAAlG,EAAA/H,IAClD,IAAAvU,EAAA,EAAyBA,EAAAyxB,EAAgBzxB,IACzC0xB,EAAA1xB,GAAAuU,GAAA1P,EAAA2d,EAAAxiB,GAGA2xB,EAAAF,EAGA,IAAA9f,EAAA+f,IADAC,GAIA,GAFAh5B,KAAAk4B,OAAAlf,EA3CA,EA2CA4K,GACA5jB,KAAA64B,OAAA7f,EA5CA,EA4CA4K,GACA,IAAAoV,EAEA,IADAnP,EAAA0O,EAAAO,EAAA,EACAld,EA/CA,EA+CmCA,EAAAoc,EAAQnO,GAAAlG,EAAA/H,IAC3C,IAAAvU,EAAA,EAAyBA,EAAAyxB,EAAgBzxB,IACzC6E,EAAA2d,EAAAxiB,GAAA0xB,EAAA1xB,GAAAuU,GAMA,OACA+H,QACAC,SACA1X,UAGA2rB,EAnGA,GAqGA7G,EAAA,WACA,SAAAA,IACA6G,EAAAoB,KAAAj5B,MAwEA,OAtEAgxB,EAAAnwB,UAAAzB,OAAAsE,OAAAm0B,EAAAh3B,WACAmwB,EAAAnwB,UAAAg4B,OAAA,SAAAK,EAAAniB,EAAAlX,GACA,IAEAwQ,EAAApP,EAAAk4B,EAAA3vB,EAFA4vB,EAAAv5B,GAAA,EAGAw5B,GAAA,kBACAC,GAAA,iBACAC,EAAA,iBACA/K,EAAA,iBACAgL,EAAA,kBAGA,IADAnpB,GARA0G,GAAA,GAQA,EACA9V,EAAAm4B,EAAA,EAAuBn4B,IAAKoP,GAAA,EAC5B6oB,EAAA7oB,IAHA,kBAOA,IADA8oB,EAAA3K,EAAA0K,GADA7oB,EAAA0G,EAAA,GACA,GACA9V,EAAAm4B,EAAA,EAAuBn4B,MACvBuI,EAAAglB,EAAA0K,EAAA7oB,EAAA,GACA6oB,EAAA7oB,GAAAmpB,EAAAN,EAAA7oB,GAAA8oB,EAAA3vB,EACAvI,KAH4BoP,GAAA,EAK5B8oB,EAAA3K,EAAA0K,GADA7oB,GAAA,GACA,GACA6oB,EAAA7oB,GAAAmpB,EAAAN,EAAA7oB,GAAA8oB,EAAA3vB,EAOA,IADA2vB,EAAAI,EAAAL,GADA7oB,EAAA0G,EAAA,GACA,GACA9V,EAAAm4B,EAAA,EAAuBn4B,MACvBuI,EAAA+vB,EAAAL,EAAA7oB,EAAA,GACA6oB,EAAA7oB,IAAA8oB,EAAA3vB,EACAvI,KAH4BoP,GAAA,EAK5B8oB,EAAAI,EAAAL,GADA7oB,GAAA,GACA,GACA6oB,EAAA7oB,IAAA8oB,EAAA3vB,EAOA,IADA2vB,EAAAG,EAAAJ,GADA7oB,EAAA0G,GACA,GACA9V,EAAAm4B,EAAA,EAAuBn4B,MACvBuI,EAAA8vB,EAAAJ,EAAA7oB,EAAA,GACA6oB,EAAA7oB,IAAA8oB,EAAA3vB,EACAvI,KAH4BoP,GAAA,EAK5B8oB,EAAAG,EAAAJ,GADA7oB,GAAA,GACA,GACA6oB,EAAA7oB,IAAA8oB,EAAA3vB,EAKA,OAAA4vB,EAGA,IADAD,EAAAE,EAAAH,GADA7oB,EAAA0G,EAAA,GACA,GACA9V,EAAAm4B,EAAqBn4B,MACrBuI,EAAA6vB,EAAAH,EAAA7oB,EAAA,GACA6oB,EAAA7oB,IAAA8oB,EAAA3vB,EACAvI,KAH0BoP,GAAA,EAK1B8oB,EAAAE,EAAAH,GADA7oB,GAAA,GACA,GACA6oB,EAAA7oB,IAAA8oB,EAAA3vB,GAOAwnB,EA1EA,GA4EAD,EAAA,WACA,SAAAA,IACA8G,EAAAoB,KAAAj5B,MAcA,OAZA+wB,EAAAlwB,UAAAzB,OAAAsE,OAAAm0B,EAAAh3B,WACAkwB,EAAAlwB,UAAAg4B,OAAA,SAAAK,EAAAniB,EAAAlX,GACA,IAEAwQ,EAAApP,EAFAm4B,EAAAv5B,GAAA,EAGA,IAAAwQ,EAFA0G,GAAA,EAEA9V,EAAAm4B,EAAA,EAAmCn4B,IAAKoP,GAAA,EACxC6oB,EAAA7oB,IAAA6oB,EAAA7oB,EAAA,GAAA6oB,EAAA7oB,EAAA,QAEA,IAAAA,EAAA0G,EAAA,EAAA9V,EAAAm4B,EAAmCn4B,IAAKoP,GAAA,EACxC6oB,EAAA7oB,IAAA6oB,EAAA7oB,EAAA,GAAA6oB,EAAA7oB,EAAA,OAGA0gB,EAhBA,GAkBA,OAAA5O,EA32DA,GA62DA7iB,EAAA6iB,8CC/3DA/iB,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAm6B,gBAAAn6B,EAAAo6B,gBAAAp6B,EAAAq6B,gBAAAr6B,EAAAs6B,aAAAt6B,EAAAu6B,MAAAv6B,EAAAw6B,MAAAx6B,EAAAsW,uBAAAtW,EAAAy6B,cAAAz6B,EAAA06B,aAAA16B,EAAA26B,kBAAAv6B,EAEA,IAAAC,EAAYC,EAAQ,KAEpB+J,EAAkB/J,EAAQ,KAE1Bs6B,EAAct6B,EAAQ,KAEtBm6B,EAAA,WACA,SAAAA,EAAAtrB,GACAzO,KAAAoH,EAAA,EACApH,KAAAqH,EAAA,EACA,IACAhF,EAEA83B,EAHA1qB,EAAA,IAAAvP,WAAA,KAEAmQ,EAAA,EAEA+pB,EAAA3rB,EAAA5O,OACA,IAAAwC,EAAA,EAAeA,EAAA,MAASA,EACxBoN,EAAApN,KAEA,IAAAA,EAAA,EAAeA,EAAA,MAASA,EAExBgO,KADA8pB,EAAA1qB,EAAApN,IACAoM,EAAApM,EAAA+3B,GAAA,IACA3qB,EAAApN,GAAAoN,EAAAY,GACAZ,EAAAY,GAAA8pB,EAEAn6B,KAAAyP,IA2BA,OAzBAsqB,EAAAl5B,UAAA,CACAw5B,aAAA,SAAAt4B,GACA,IAAAM,EAEA83B,EACAG,EAFAr5B,EAAAc,EAAAlC,OAGAuH,EAAApH,KAAAoH,EACAC,EAAArH,KAAAqH,EACAoI,EAAAzP,KAAAyP,EACA8qB,EAAA,IAAAr6B,WAAAe,GACA,IAAAoB,EAAA,EAAiBA,EAAApB,IAAOoB,EAIxBi4B,EAAA7qB,EADApI,KADA8yB,EAAA1qB,EADArI,IAAA,QAEA,KAEAqI,EAAArI,GAAAkzB,EACA7qB,EAAApI,GAAA8yB,EACAI,EAAAl4B,GAAAN,EAAAM,GAAAoN,EAAA0qB,EAAAG,EAAA,KAIA,OAFAt6B,KAAAoH,IACApH,KAAAqH,IACAkzB,IAGAR,EAAAl5B,UAAA25B,aAAAT,EAAAl5B,UAAAw5B,aACAN,EA7CA,GA+CAH,EAAA,WACA,IAAA/d,EAAA,IAAA3b,WAAA,+KACA2pB,EAAA,IAAAO,WAAA,2rBAiEA,OAhEA,SAAAroB,EAAAgV,EAAAlX,GACA,IAMAwC,EAAAgO,EAAApP,EANAw5B,EAAA,WACAC,GAAA,UACAC,GAAA,WACAC,EAAA,UACAC,EAAAh7B,EAAA,OACAi7B,EAAA,IAAA56B,WAAA26B,GAEA,IAAAx4B,EAAA,EAAeA,EAAAxC,IAAYwC,EAC3By4B,EAAAz4B,GAAAN,EAAAgV,KAIA,IAFA+jB,EAAAz4B,KAAA,IACApB,EAAA45B,EAAA,EACAx4B,EAAApB,GACA65B,EAAAz4B,KAAA,EAEAy4B,EAAAz4B,KAAAxC,GAAA,MACAi7B,EAAAz4B,KAAAxC,GAAA,MACAi7B,EAAAz4B,KAAAxC,GAAA,OACAi7B,EAAAz4B,KAAAxC,GAAA,OACAi7B,EAAAz4B,KAAAxC,IAAA,OACAi7B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACA,IAAA04B,EAAA,IAAA3Q,WAAA,IACA,IAAA/nB,EAAA,EAAeA,EAAAw4B,GAAkB,CACjC,IAAAxqB,EAAA,EAAiBA,EAAA,KAAQA,EAAAhO,GAAA,EACzB04B,EAAA1qB,GAAAyqB,EAAAz4B,GAAAy4B,EAAAz4B,EAAA,MAAAy4B,EAAAz4B,EAAA,OAAAy4B,EAAAz4B,EAAA,OAEA,IAIA24B,EACA/F,EALA7tB,EAAAqzB,EACApzB,EAAAqzB,EACAla,EAAAma,EACA7Y,EAAA8Y,EAGA,IAAAvqB,EAAA,EAAiBA,EAAA,KAAQA,EAAA,CACzBA,EAAA,IACA2qB,EAAA3zB,EAAAmZ,GAAAnZ,EAAAya,EACAmT,EAAA5kB,GACSA,EAAA,IACT2qB,EAAAlZ,EAAAza,GAAAya,EAAAtB,EACAyU,EAAA,EAAA5kB,EAAA,MACSA,EAAA,IACT2qB,EAAA3zB,EAAAmZ,EAAAsB,EACAmT,EAAA,EAAA5kB,EAAA,OAEA2qB,EAAAxa,GAAAnZ,GAAAya,GACAmT,EAAA,EAAA5kB,EAAA,IAEA,IAAA8pB,EAAArY,EACAmZ,EAAA7zB,EAAA4zB,EAAAnR,EAAAxZ,GAAA0qB,EAAA9F,GAAA,EACAiG,EAAArf,EAAAxL,GACAyR,EAAAtB,EACAA,EAAAnZ,EACAA,KAAA4zB,GAAAC,EAAAD,IAAA,GAAAC,GAAA,EACA9zB,EAAA+yB,EAEAM,IAAArzB,EAAA,EACAszB,IAAArzB,EAAA,EACAszB,IAAAna,EAAA,EACAoa,IAAA9Y,EAAA,EAEA,WAAA5hB,WAAA,KAAAu6B,KAAA,MAAAA,GAAA,OAAAA,IAAA,WAAAC,KAAA,MAAAA,GAAA,OAAAA,IAAA,WAAAC,KAAA,MAAAA,GAAA,OAAAA,IAAA,WAAAC,KAAA,MAAAA,GAAA,OAAAA,IAAA,UAjEA,GAqEAO,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACAr7B,KAAAs7B,KAAA,EAAAF,EACAp7B,KAAAu7B,IAAA,EAAAF,EA0EA,OAxEAF,EAAAt6B,UAAA,CACA26B,IAAA,SAAAC,GACAz7B,KAAAs7B,MAAAG,EAAAH,KACAt7B,KAAAu7B,KAAAE,EAAAF,KAEAG,IAAA,SAAAD,GACAz7B,KAAAs7B,MAAAG,EAAAH,KACAt7B,KAAAu7B,KAAAE,EAAAF,KAEAI,GAAA,SAAAF,GACAz7B,KAAAs7B,MAAAG,EAAAH,KACAt7B,KAAAu7B,KAAAE,EAAAF,KAEAK,WAAA,SAAAC,GACAA,GAAA,IACA77B,KAAAu7B,IAAAv7B,KAAAs7B,OAAAO,EAAA,KACA77B,KAAAs7B,KAAA,IAEAt7B,KAAAu7B,IAAAv7B,KAAAu7B,MAAAM,EAAA77B,KAAAs7B,MAAA,GAAAO,EACA77B,KAAAs7B,KAAAt7B,KAAAs7B,OAAAO,EAAA,IAGAC,UAAA,SAAAD,GACAA,GAAA,IACA77B,KAAAs7B,KAAAt7B,KAAAu7B,KAAAM,EAAA,GACA77B,KAAAu7B,IAAA,IAEAv7B,KAAAs7B,KAAAt7B,KAAAs7B,MAAAO,EAAA77B,KAAAu7B,MAAA,GAAAM,EACA77B,KAAAu7B,IAAAv7B,KAAAu7B,KAAAM,IAGAE,YAAA,SAAAF,GACA,IAAAN,EAAAD,EACA,GAAAO,GACAP,EAAAt7B,KAAAu7B,IACAA,EAAAv7B,KAAAs7B,OAEAC,EAAAv7B,KAAAu7B,IACAD,EAAAt7B,KAAAs7B,MAEAO,GAAA,GACA77B,KAAAu7B,QAAAM,EAAAP,GAAA,GAAAO,EACA77B,KAAAs7B,SAAAO,EAAAN,GAAA,GAAAM,GAEAG,IAAA,WACAh8B,KAAAs7B,MAAAt7B,KAAAs7B,KACAt7B,KAAAu7B,KAAAv7B,KAAAu7B,KAEAU,IAAA,SAAAR,GACA,IAAAS,GAAAl8B,KAAAu7B,MAAA,IAAAE,EAAAF,MAAA,GACAY,GAAAn8B,KAAAs7B,OAAA,IAAAG,EAAAH,OAAA,GACAY,EAAA,aACAC,GAAA,GAEAn8B,KAAAu7B,IAAA,EAAAW,EACAl8B,KAAAs7B,KAAA,EAAAa,GAEAC,OAAA,SAAAn8B,EAAA8W,GACA9W,EAAA8W,GAAA/W,KAAAs7B,OAAA,OACAr7B,EAAA8W,EAAA,GAAA/W,KAAAs7B,MAAA,OACAr7B,EAAA8W,EAAA,GAAA/W,KAAAs7B,MAAA,MACAr7B,EAAA8W,EAAA,OAAA/W,KAAAs7B,KACAr7B,EAAA8W,EAAA,GAAA/W,KAAAu7B,MAAA,OACAt7B,EAAA8W,EAAA,GAAA/W,KAAAu7B,KAAA,OACAt7B,EAAA8W,EAAA,GAAA/W,KAAAu7B,KAAA,MACAt7B,EAAA8W,EAAA,OAAA/W,KAAAu7B,KAEAc,OAAA,SAAAZ,GACAz7B,KAAAs7B,KAAAG,EAAAH,KACAt7B,KAAAu7B,IAAAE,EAAAF,MAGAJ,EA7EA,GA+EAxB,EAAA,WACA,SAAA2C,EAAApD,EAAAj4B,GACA,OAAAi4B,IAAAj4B,EAAAi4B,GAAA,GAAAj4B,EAEA,SAAAmX,EAAA8gB,EAAAqD,EAAAC,GACA,OAAAtD,EAAAqD,GAAArD,EAAAsD,EAEA,SAAAC,EAAAvD,EAAAqD,EAAAC,GACA,OAAAtD,EAAAqD,EAAArD,EAAAsD,EAAAD,EAAAC,EAEA,SAAAE,EAAAxD,GACA,OAAAoD,EAAApD,EAAA,GAAAoD,EAAApD,EAAA,IAAAoD,EAAApD,EAAA,IAEA,SAAAyD,EAAAzD,GACA,OAAAoD,EAAApD,EAAA,GAAAoD,EAAApD,EAAA,IAAAoD,EAAApD,EAAA,IAEA,SAAA0D,EAAA1D,GACA,OAAAoD,EAAApD,EAAA,GAAAoD,EAAApD,EAAA,IAAAA,IAAA,EAKA,IAAArP,EAAA,krBAuEA,OAtEA,SAAA9nB,EAAAgV,EAAAlX,GACA,IAUAwC,EAAAgO,EAAApP,EAVAw5B,EAAA,WACAC,EAAA,WACAC,EAAA,WACAC,EAAA,WACAiC,EAAA,WACAC,EAAA,WACAC,EAAA,UACAC,EAAA,WACAnC,EAAA,GAAAp6B,KAAAC,MAAAb,EAAA,OACAi7B,EAAA,IAAA56B,WAAA26B,GAEA,IAAAx4B,EAAA,EAAeA,EAAAxC,IAAYwC,EAC3By4B,EAAAz4B,GAAAN,EAAAgV,KAIA,IAFA+jB,EAAAz4B,KAAA,IACApB,EAAA45B,EAAA,EACAx4B,EAAApB,GACA65B,EAAAz4B,KAAA,EAEAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAAxC,IAAA,OACAi7B,EAAAz4B,KAAAxC,GAAA,OACAi7B,EAAAz4B,KAAAxC,GAAA,OACAi7B,EAAAz4B,KAAAxC,GAAA,MACAi7B,EAAAz4B,KAAAxC,GAAA,MACA,IAhCAq5B,EAgCA6B,EAAA,IAAA/b,YAAA,IACA,IAAA3c,EAAA,EAAeA,EAAAw4B,GAAkB,CACjC,IAAAxqB,EAAA,EAAiBA,EAAA,KAAQA,EACzB0qB,EAAA1qB,GAAAyqB,EAAAz4B,IAAA,GAAAy4B,EAAAz4B,EAAA,OAAAy4B,EAAAz4B,EAAA,MAAAy4B,EAAAz4B,EAAA,GACAA,GAAA,EAEA,IAAAgO,EAAA,GAAkBA,EAAA,KAAQA,EAC1B0qB,EAAA1qB,GAAA,GAtCAisB,EADApD,EAuCA6B,EAAA1qB,EAAA,GAtCA,IAAAisB,EAAApD,EAAA,IAAAA,IAAA,IAsCA6B,EAAA1qB,EAAA,GAAAusB,EAAA7B,EAAA1qB,EAAA,KAAA0qB,EAAA1qB,EAAA,IAEA,IAQA4sB,EACAC,EATA91B,EAAAqzB,EACApzB,EAAAqzB,EACAla,EAAAma,EACA7Y,EAAA8Y,EACA70B,EAAA82B,EACA7B,EAAA8B,EACA7H,EAAA8H,EACAI,EAAAH,EAGA,IAAA3sB,EAAA,EAAiBA,EAAA,KAAQA,EACzB4sB,EAAAE,EAAAR,EAAA52B,GAAAqS,EAAArS,EAAAi1B,EAAA/F,GAAApL,EAAAxZ,GAAA0qB,EAAA1qB,GACA6sB,EAAAR,EAAAt1B,GAAAq1B,EAAAr1B,EAAAC,EAAAmZ,GACA2c,EAAAlI,EACAA,EAAA+F,EACAA,EAAAj1B,EACAA,EAAA+b,EAAAmb,EAAA,EACAnb,EAAAtB,EACAA,EAAAnZ,EACAA,EAAAD,EACAA,EAAA61B,EAAAC,EAAA,EAEAzC,IAAArzB,EAAA,EACAszB,IAAArzB,EAAA,EACAszB,IAAAna,EAAA,EACAoa,IAAA9Y,EAAA,EACA+a,IAAA92B,EAAA,EACA+2B,IAAA9B,EAAA,EACA+B,IAAA9H,EAAA,EACA+H,IAAAG,EAAA,EAEA,WAAAj9B,WAAA,CAAAu6B,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAiC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,KA3FA,GA+FAvD,EAAA,WACA,SAAArhB,EAAA2I,EAAAmY,EAAAqD,EAAAC,EAAArC,GACApZ,EAAAsb,OAAAnD,GACAnY,EAAAya,IAAAe,GACApC,EAAAkC,OAAAnD,GACAiB,EAAA6B,MACA7B,EAAAqB,IAAAgB,GACAzb,EAAA2a,IAAAvB,GAEA,SAAAsC,EAAA1b,EAAAmY,EAAAqD,EAAAC,EAAArC,GACApZ,EAAAsb,OAAAnD,GACAnY,EAAAya,IAAAe,GACApC,EAAAkC,OAAAnD,GACAiB,EAAAqB,IAAAgB,GACAzb,EAAA2a,IAAAvB,GACAA,EAAAkC,OAAAE,GACApC,EAAAqB,IAAAgB,GACAzb,EAAA2a,IAAAvB,GAEA,SAAAuC,EAAA3b,EAAAmY,EAAAiB,GACApZ,EAAAsb,OAAAnD,GACAnY,EAAAgb,YAAA,IACA5B,EAAAkC,OAAAnD,GACAiB,EAAA4B,YAAA,IACAhb,EAAA2a,IAAAvB,GACAA,EAAAkC,OAAAnD,GACAiB,EAAA4B,YAAA,IACAhb,EAAA2a,IAAAvB,GAEA,SAAAwC,EAAA5b,EAAAmY,EAAAiB,GACApZ,EAAAsb,OAAAnD,GACAnY,EAAAgb,YAAA,IACA5B,EAAAkC,OAAAnD,GACAiB,EAAA4B,YAAA,IACAhb,EAAA2a,IAAAvB,GACAA,EAAAkC,OAAAnD,GACAiB,EAAA4B,YAAA,IACAhb,EAAA2a,IAAAvB,GAEA,SAAAyC,EAAA7b,EAAAmY,EAAAiB,GACApZ,EAAAsb,OAAAnD,GACAnY,EAAAgb,YAAA,GACA5B,EAAAkC,OAAAnD,GACAiB,EAAA4B,YAAA,GACAhb,EAAA2a,IAAAvB,GACAA,EAAAkC,OAAAnD,GACAiB,EAAAyB,WAAA,GACA7a,EAAA2a,IAAAvB,GAEA,SAAAiD,EAAArc,EAAAmY,EAAAiB,GACApZ,EAAAsb,OAAAnD,GACAnY,EAAAgb,YAAA,IACA5B,EAAAkC,OAAAnD,GACAiB,EAAA4B,YAAA,IACAhb,EAAA2a,IAAAvB,GACAA,EAAAkC,OAAAnD,GACAiB,EAAAyB,WAAA,GACA7a,EAAA2a,IAAAvB,GAEA,IAAAtQ,EAAA,KAAAsR,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,yBAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,wBAgJA,OA/IA,SAAAp5B,EAAAgV,EAAAlX,EAAAw9B,GAEA,IAAA5C,EAAAC,EAAAC,EAAAC,EAAAiC,EAAAC,EAAAC,EAAAC,GADAK,QAYA5C,EAAA,IAAAU,EAAA,uBACAT,EAAA,IAAAS,EAAA,sBACAR,EAAA,IAAAQ,EAAA,sBACAP,EAAA,IAAAO,EAAA,sBACA0B,EAAA,IAAA1B,EAAA,uBACA2B,EAAA,IAAA3B,EAAA,uBACA4B,EAAA,IAAA5B,EAAA,uBACA6B,EAAA,IAAA7B,EAAA,yBAhBAV,EAAA,IAAAU,EAAA,uBACAT,EAAA,IAAAS,EAAA,uBACAR,EAAA,IAAAQ,EAAA,uBACAP,EAAA,IAAAO,EAAA,uBACA0B,EAAA,IAAA1B,EAAA,uBACA2B,EAAA,IAAA3B,EAAA,sBACA4B,EAAA,IAAA5B,EAAA,sBACA6B,EAAA,IAAA7B,EAAA,uBAWA,IAEA94B,EAAAgO,EAAApP,EAFA45B,EAAA,IAAAp6B,KAAAC,MAAAb,EAAA,SACAi7B,EAAA,IAAA56B,WAAA26B,GAEA,IAAAx4B,EAAA,EAAeA,EAAAxC,IAAYwC,EAC3By4B,EAAAz4B,GAAAN,EAAAgV,KAIA,IAFA+jB,EAAAz4B,KAAA,IACApB,EAAA45B,EAAA,GACAx4B,EAAApB,GACA65B,EAAAz4B,KAAA,EAEAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAA,EACAy4B,EAAAz4B,KAAAxC,IAAA,OACAi7B,EAAAz4B,KAAAxC,GAAA,OACAi7B,EAAAz4B,KAAAxC,GAAA,OACAi7B,EAAAz4B,KAAAxC,GAAA,MACAi7B,EAAAz4B,KAAAxC,GAAA,MACA,IAAAk7B,EAAA,IAAA/xB,MAAA,IACA,IAAA3G,EAAA,EAAeA,EAAA,GAAQA,IACvB04B,EAAA14B,GAAA,IAAA84B,EAAA,KAEA,IAYAmC,EAwDAvc,EApEA3Z,EAAA,IAAA+zB,EAAA,KACA9zB,EAAA,IAAA8zB,EAAA,KACA3a,EAAA,IAAA2a,EAAA,KACArZ,EAAA,IAAAqZ,EAAA,KACAp1B,EAAA,IAAAo1B,EAAA,KACAH,EAAA,IAAAG,EAAA,KACAlG,EAAA,IAAAkG,EAAA,KACAgC,EAAA,IAAAhC,EAAA,KACA8B,EAAA,IAAA9B,EAAA,KACA+B,EAAA,IAAA/B,EAAA,KACAoC,EAAA,IAAApC,EAAA,KACAb,EAAA,IAAAa,EAAA,KAEA,IAAA94B,EAAA,EAAeA,EAAAw4B,GAAkB,CACjC,IAAAxqB,EAAA,EAAiBA,EAAA,KAAQA,EACzB0qB,EAAA1qB,GAAAirB,KAAAR,EAAAz4B,IAAA,GAAAy4B,EAAAz4B,EAAA,OAAAy4B,EAAAz4B,EAAA,MAAAy4B,EAAAz4B,EAAA,GACA04B,EAAA1qB,GAAAkrB,IAAAT,EAAAz4B,EAAA,OAAAy4B,EAAAz4B,EAAA,OAAAy4B,EAAAz4B,EAAA,MAAAy4B,EAAAz4B,EAAA,GACAA,GAAA,EAEA,IAAAgO,EAAA,GAAkBA,EAAA,KAAQA,EAE1B+sB,EADAE,EAAAvC,EAAA1qB,GACA0qB,EAAA1qB,EAAA,GAAAiqB,GACAgD,EAAArB,IAAAlB,EAAA1qB,EAAA,IACAusB,EAAAW,EAAAxC,EAAA1qB,EAAA,IAAAiqB,GACAgD,EAAArB,IAAAsB,GACAD,EAAArB,IAAAlB,EAAA1qB,EAAA,KAUA,IARAjJ,EAAAi1B,OAAA5B,GACApzB,EAAAg1B,OAAA3B,GACAla,EAAA6b,OAAA1B,GACA7Y,EAAAua,OAAAzB,GACA70B,EAAAs2B,OAAAQ,GACA7B,EAAAqB,OAAAS,GACA7H,EAAAoH,OAAAU,GACAI,EAAAd,OAAAW,GACA3sB,EAAA,EAAiBA,EAAA,KAAQA,EACzB4sB,EAAAZ,OAAAc,GACAR,EAAAY,EAAAx3B,EAAAu0B,GACA2C,EAAAhB,IAAAsB,GACAnlB,EAAAmlB,EAAAx3B,EAAAi1B,EAAA/F,EAAAqF,GACA2C,EAAAhB,IAAAsB,GACAN,EAAAhB,IAAApS,EAAAxZ,IACA4sB,EAAAhB,IAAAlB,EAAA1qB,IACAqsB,EAAAQ,EAAA91B,EAAAkzB,GACAmC,EAAAc,EAAAn2B,EAAAC,EAAAmZ,EAAA8Z,GACA4C,EAAAjB,IAAAsB,GACAD,EAAAH,EACAA,EAAAlI,EACAA,EAAA+F,EACAA,EAAAj1B,EACA+b,EAAAma,IAAAgB,GACAl3B,EAAA+b,EACAA,EAAAtB,EACAA,EAAAnZ,EACAA,EAAAD,EACAk2B,EAAAjB,OAAAY,GACAK,EAAArB,IAAAiB,GACA91B,EAAAk2B,EAEA7C,EAAAwB,IAAA70B,GACAszB,EAAAuB,IAAA50B,GACAszB,EAAAsB,IAAAzb,GACAoa,EAAAqB,IAAAna,GACA+a,EAAAZ,IAAAl2B,GACA+2B,EAAAb,IAAAjB,GACA+B,EAAAd,IAAAhH,GACA+H,EAAAf,IAAAkB,GAsBA,OAnBAE,GAWAtc,EAAA,IAAA7gB,WAAA,IACAu6B,EAAA2B,OAAArb,EAAA,GACA2Z,EAAA0B,OAAArb,EAAA,GACA4Z,EAAAyB,OAAArb,EAAA,IACA6Z,EAAAwB,OAAArb,EAAA,IACA8b,EAAAT,OAAArb,EAAA,IACA+b,EAAAV,OAAArb,EAAA,MAhBAA,EAAA,IAAA7gB,WAAA,IACAu6B,EAAA2B,OAAArb,EAAA,GACA2Z,EAAA0B,OAAArb,EAAA,GACA4Z,EAAAyB,OAAArb,EAAA,IACA6Z,EAAAwB,OAAArb,EAAA,IACA8b,EAAAT,OAAArb,EAAA,IACA+b,EAAAV,OAAArb,EAAA,IACAgc,EAAAX,OAAArb,EAAA,IACAic,EAAAZ,OAAArb,EAAA,KAUAA,GAzMA,GA6MA2Y,EAAA,WAIA,OAHA,SAAA33B,EAAAgV,EAAAlX,GACA,OAAA45B,EAAA13B,EAAAgV,EAAAlX,GAAA,IAFA,GAMA29B,EAAA,WACA,SAAAA,KAMA,OALAA,EAAA38B,UAAA,CACA25B,aAAA,SAAAz4B,GACA,OAAAA,IAGAy7B,EAPA,GASAvD,EAAA,WAKA,IAJA,IAAAwD,EAAA,IAAAv9B,WAAA,s4BACAuP,EAAA,IAAAvP,WAAA,q5BACAw9B,EAAA,IAAAx9B,WAAA,q5BACAy9B,EAAA,IAAAz9B,WAAA,KACAmC,EAAA,EAAiBA,EAAA,IAASA,IAE1Bs7B,EAAAt7B,GADAA,EAAA,IACAA,GAAA,EAEAA,GAAA,KAGA,IAAAu7B,EAAA,IAAA5e,YAAA,2rFA4BA,SAAA6e,EAAAC,EAAArvB,GACA,IAEApM,EAAAgO,EAAAwZ,EACAkU,EAAAxF,EAAAC,EAHAwF,EAAA,IAAA99B,WAAA,IAIA,IAHA89B,EAAAv8B,IAAAq8B,GAGAztB,EAAA,EAAAwZ,EAAA,IAAwBxZ,EAAA,KAAQA,IAAAwZ,EAChCmU,EAAA3tB,IAAA5B,EAAAob,GAEA,IAAAxnB,EAAA,EAAeA,GAAA,IAAQA,EAAA,CAmBvB,IAlBA07B,EAAAC,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAD,EACAA,EAAAC,EAAA,IACAzF,EAAAyF,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAD,EACAC,EAAA,GAAAzF,EACAwF,EAAAC,EAAA,IACAzF,EAAAyF,EAAA,IACAxF,EAAAwF,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAD,EACAC,EAAA,GAAAzF,EACAyF,EAAA,GAAAxF,EACAnoB,EAAA,EAAiBA,EAAA,KAAQA,EACzB2tB,EAAA3tB,GAAAqtB,EAAAM,EAAA3tB,IAEA,IAAAA,EAAA,EAAAwZ,EAAA,GAAAxnB,EAA6BgO,EAAA,KAAQA,IAAAwZ,EACrCmU,EAAA3tB,IAAA5B,EAAAob,GAEA,IAAAxZ,EAAA,EAAiBA,EAAA,GAAQA,GAAA,GACzB,IAAA4tB,EAAAL,EAAAI,EAAA3tB,IACA6tB,EAAAN,EAAAI,EAAA3tB,EAAA,IACA8tB,EAAAP,EAAAI,EAAA3tB,EAAA,IACA+tB,EAAAR,EAAAI,EAAA3tB,EAAA,IACA0tB,EAAAE,EAAAC,IAAA,EAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,EACAJ,EAAA3tB,GAAA0tB,IAAA,OACAC,EAAA3tB,EAAA,GAAA0tB,GAAA,OACAC,EAAA3tB,EAAA,GAAA0tB,GAAA,MACAC,EAAA3tB,EAAA,OAAA0tB,GAqBA,IAlBAA,EAAAC,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAD,EACAA,EAAAC,EAAA,IACAzF,EAAAyF,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAD,EACAC,EAAA,GAAAzF,EACAwF,EAAAC,EAAA,IACAzF,EAAAyF,EAAA,IACAxF,EAAAwF,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAD,EACAC,EAAA,GAAAzF,EACAyF,EAAA,GAAAxF,EACAnoB,EAAA,EAAeA,EAAA,KAAQA,EACvB2tB,EAAA3tB,GAAAqtB,EAAAM,EAAA3tB,IACA2tB,EAAA3tB,IAAA5B,EAAA4B,GAEA,OAAA2tB,EAEA,SAAAK,EAAAP,EAAArvB,GACA,IAAAsvB,EAAAxF,EAAAC,EAAAnoB,EAAAwZ,EACAmU,EAAA,IAAA99B,WAAA,IAEA,IADA89B,EAAAv8B,IAAAq8B,GACAztB,EAAA,EAAeA,EAAA,KAAQA,EACvB2tB,EAAA3tB,IAAA5B,EAAA4B,GAEA,IAAAhO,EAAA,EAAeA,EAAA,GAAQA,IAAA,CACvB,IAAAgO,EAAA,EAAiBA,EAAA,KAAQA,EACzB2tB,EAAA3tB,GAAAZ,EAAAuuB,EAAA3tB,IAoBA,IAlBAmoB,EAAAwF,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAxF,EACAA,EAAAwF,EAAA,GACAzF,EAAAyF,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAxF,EACAwF,EAAA,IAAAzF,EACAC,EAAAwF,EAAA,GACAzF,EAAAyF,EAAA,GACAD,EAAAC,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAxF,EACAwF,EAAA,IAAAzF,EACAyF,EAAA,IAAAD,EACA1tB,EAAA,EAAiBA,EAAA,GAAQA,GAAA,GACzB,IAAA4tB,EAAAD,EAAA3tB,EAAA,GACA6tB,EAAAF,EAAA3tB,EAAA,GACA8tB,EAAAH,EAAA3tB,EAAA,GACA+tB,EAAAJ,EAAA3tB,EAAA,GACA0tB,EAAAE,EAAAC,EAAAC,EAAAC,EACAJ,EAAA3tB,EAAA,IAAA0tB,EAAAJ,EAAAM,EAAAC,GACAF,EAAA3tB,EAAA,IAAA0tB,EAAAJ,EAAAO,EAAAC,GACAH,EAAA3tB,EAAA,IAAA0tB,EAAAJ,EAAAQ,EAAAC,GACAJ,EAAA3tB,EAAA,IAAA0tB,EAAAJ,EAAAS,EAAAH,GAEA,IAAA5tB,EAAA,EAAAwZ,EAAA,GAAAxnB,EAA6BgO,EAAA,KAAQA,IAAAwZ,EACrCmU,EAAA3tB,IAAA5B,EAAAob,GAGA,IAAAxZ,EAAA,EAAeA,EAAA,KAAQA,EACvB2tB,EAAA3tB,GAAAZ,EAAAuuB,EAAA3tB,IAoBA,IAlBAmoB,EAAAwF,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAxF,EACAA,EAAAwF,EAAA,GACAzF,EAAAyF,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAxF,EACAwF,EAAA,IAAAzF,EACAC,EAAAwF,EAAA,GACAzF,EAAAyF,EAAA,GACAD,EAAAC,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAxF,EACAwF,EAAA,IAAAzF,EACAyF,EAAA,IAAAD,EACA1tB,EAAA,EAAAwZ,EAAA,IAAwBxZ,EAAA,KAAQA,IAAAwZ,EAChCmU,EAAA3tB,IAAA5B,EAAAob,GAEA,OAAAmU,EAEA,SAAA/D,EAAAxrB,GACAzO,KAAAyO,IAvKA,SAAA6vB,GACA,IACAvd,EAAA,IAAA7gB,WADA,KAEA6gB,EAAAtf,IAAA68B,GACA,QAAAjuB,EAAA,GAAAhO,EAAA,EAA2BgO,EAH3B,MAGkChO,EAAA,CAClC,IAAA46B,EAAAlc,EAAA1Q,EAAA,GACA6sB,EAAAnc,EAAA1Q,EAAA,GACAkuB,EAAAxd,EAAA1Q,EAAA,GACAmuB,EAAAzd,EAAA1Q,EAAA,GACA4sB,EAAAxtB,EAAAwtB,GACAC,EAAAztB,EAAAytB,GACAqB,EAAA9uB,EAAA8uB,GACAC,EAAA/uB,EAAA+uB,GACAvB,GAAAQ,EAAAp7B,GACA,QAAApB,EAAA,EAAqBA,EAAA,IAAOA,EAC5B8f,EAAA1Q,GAAA4sB,GAAAlc,EAAA1Q,EAAA,IAEA0Q,IADA1Q,GACA6sB,GAAAnc,EAAA1Q,EAAA,IAEA0Q,IADA1Q,GACAkuB,GAAAxd,EAAA1Q,EAAA,IAEA0Q,IADA1Q,GACAmuB,GAAAzd,EAAA1Q,EAAA,IACAA,IAGA,OAAA0Q,EA8IA0d,CAAAhwB,GACAzO,KAAAgZ,OAAA,IAAA9Y,WAAA,IACAF,KAAA0+B,eAAA,EAEA,SAAAC,EAAA58B,EAAA68B,GACA,IAAAv8B,EACAgO,EACAnK,EACA24B,EAAA98B,EAAAlC,OACAmZ,EAAAhZ,KAAAgZ,OACA8lB,EAAA9+B,KAAA0+B,eACA3d,EAAA,GACAge,EAAA/+B,KAAA++B,GACA,IAAA18B,EAAA,EAAeA,EAAAw8B,IAAkBx8B,EAGjC,GAFA2W,EAAA8lB,GAAA/8B,EAAAM,OACAy8B,EACA,KAGA,IAAAE,EAAAnB,EAAA7kB,EAAAhZ,KAAAyO,KACA,IAAA4B,EAAA,EAAiBA,EAAA,KAAQA,EACzB2uB,EAAA3uB,IAAA0uB,EAAA1uB,GAEA0uB,EAAA/lB,EACA+H,EAAA7f,KAAA89B,GACAhmB,EAAA,IAAA9Y,WAAA,IACA4+B,EAAA,EAKA,GAHA9+B,KAAAgZ,SACAhZ,KAAA8+B,eACA9+B,KAAA++B,KACA,IAAAhe,EAAAlhB,OACA,WAAAK,WAAA,IAEA,IAAA++B,EAAA,GAAAle,EAAAlhB,OACA,GAAA++B,EAAA,CACA,IAAAM,EAAAne,IAAAlhB,OAAA,GACAs/B,EAAAD,EAAA,IACA,GAAAC,GAAA,IACA,IAAA98B,EAAA,GAAA6D,EAAA,GAAAi5B,EAAqC98B,GAAA6D,IAAS7D,EAC9C,GAAA68B,EAAA78B,KAAA88B,EAAA,CACAA,EAAA,EACA,MAGAF,GAAAE,EACApe,IAAAlhB,OAAA,GAAAq/B,EAAAn8B,SAAA,KAAAo8B,IAGA,IAAA5E,EAAA,IAAAr6B,WAAA++B,GACA,IAAA58B,EAAA,EAAAgO,EAAA,EAAAnK,EAAA6a,EAAAlhB,OAA0CwC,EAAA6D,IAAQ7D,EAAAgO,GAAA,GAClDkqB,EAAA94B,IAAAsf,EAAA1e,GAAAgO,GAEA,OAAAkqB,EA6DA,OA3DAN,EAAAp5B,UAAA,CACA25B,aAAA,SAAAz4B,EAAA68B,GACA,IAAAv8B,EACAw8B,EAAA98B,EAAAlC,OACAmZ,EAAAhZ,KAAAgZ,OACA8lB,EAAA9+B,KAAA0+B,eACA,IAAAr8B,EAAA,EAAiBy8B,EAAA,IAAAz8B,EAAAw8B,IAAuCx8B,IAAAy8B,EACxD9lB,EAAA8lB,GAAA/8B,EAAAM,GAEA,OAAAy8B,EAAA,IACA9+B,KAAA8+B,eACA,IAAA5+B,WAAA,MAEAF,KAAA++B,GAAA/lB,EACAhZ,KAAAgZ,OAAA,IAAA9Y,WAAA,IACAF,KAAA8+B,aAAA,EACA9+B,KAAAw6B,aAAAmE,EACA3+B,KAAAw6B,aAAAz4B,EAAAgB,SAAA,IAAA67B,KAEA1zB,QAAA,SAAAnJ,EAAAg9B,GACA,IAAA18B,EACAgO,EACAnK,EACA24B,EAAA98B,EAAAlC,OACAmZ,EAAAhZ,KAAAgZ,OACA8lB,EAAA9+B,KAAA0+B,eACA3d,EAAA,GAIA,IAHAge,IACAA,EAAA,IAAA7+B,WAAA,KAEAmC,EAAA,EAAiBA,EAAAw8B,IAAkBx8B,EAGnC,GAFA2W,EAAA8lB,GAAA/8B,EAAAM,OACAy8B,EACA,KAGA,IAAAzuB,EAAA,EAAmBA,EAAA,KAAQA,EAC3B2I,EAAA3I,IAAA0uB,EAAA1uB,GAEA,IAAA+uB,EAAAf,EAAArlB,EAAAhZ,KAAAyO,KACAswB,EAAAK,EACAre,EAAA7f,KAAAk+B,GACApmB,EAAA,IAAA9Y,WAAA,IACA4+B,EAAA,EAKA,GAHA9+B,KAAAgZ,SACAhZ,KAAA8+B,eACA9+B,KAAA++B,KACA,IAAAhe,EAAAlhB,OACA,WAAAK,WAAA,IAEA,IAAA++B,EAAA,GAAAle,EAAAlhB,OACA06B,EAAA,IAAAr6B,WAAA++B,GACA,IAAA58B,EAAA,EAAAgO,EAAA,EAAAnK,EAAA6a,EAAAlhB,OAA4CwC,EAAA6D,IAAQ7D,EAAAgO,GAAA,GACpDkqB,EAAA94B,IAAAsf,EAAA1e,GAAAgO,GAEA,OAAAkqB,IAGAN,EAtSA,GAwSAD,EAAA,WAIA,IAHA,IAAAvqB,EAAA,IAAAvP,WAAA,q5BACAw9B,EAAA,IAAAx9B,WAAA,q5BACAy9B,EAAA,IAAAz9B,WAAA,KACAmC,EAAA,EAAiBA,EAAA,IAASA,IAE1Bs7B,EAAAt7B,GADAA,EAAA,IACAA,GAAA,EAEAA,GAAA,KAGA,IAAAu7B,EAAA,IAAA5e,YAAA,2rFAwCA,SAAAqgB,EAAAvB,EAAArvB,GACA,IAEApM,EAAAgO,EAAAwZ,EACAkU,EAAAxF,EAAAC,EAHAwF,EAAA,IAAA99B,WAAA,IAIA,IAHA89B,EAAAv8B,IAAAq8B,GAGAztB,EAAA,EAAAwZ,EAAA,IAAwBxZ,EAAA,KAAQA,IAAAwZ,EAChCmU,EAAA3tB,IAAA5B,EAAAob,GAEA,IAAAxnB,EAAA,GAAgBA,GAAA,IAAQA,EAAA,CAmBxB,IAlBA07B,EAAAC,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAD,EACAA,EAAAC,EAAA,IACAzF,EAAAyF,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAD,EACAC,EAAA,GAAAzF,EACAwF,EAAAC,EAAA,IACAzF,EAAAyF,EAAA,IACAxF,EAAAwF,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAD,EACAC,EAAA,GAAAzF,EACAyF,EAAA,GAAAxF,EACAnoB,EAAA,EAAiBA,EAAA,KAAQA,EACzB2tB,EAAA3tB,GAAAqtB,EAAAM,EAAA3tB,IAEA,IAAAA,EAAA,EAAAwZ,EAAA,GAAAxnB,EAA6BgO,EAAA,KAAQA,IAAAwZ,EACrCmU,EAAA3tB,IAAA5B,EAAAob,GAEA,IAAAxZ,EAAA,EAAiBA,EAAA,GAAQA,GAAA,GACzB,IAAA4tB,EAAAL,EAAAI,EAAA3tB,IACA6tB,EAAAN,EAAAI,EAAA3tB,EAAA,IACA8tB,EAAAP,EAAAI,EAAA3tB,EAAA,IACA+tB,EAAAR,EAAAI,EAAA3tB,EAAA,IACA0tB,EAAAE,EAAAC,IAAA,EAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,EACAJ,EAAA3tB,GAAA0tB,IAAA,OACAC,EAAA3tB,EAAA,GAAA0tB,GAAA,OACAC,EAAA3tB,EAAA,GAAA0tB,GAAA,MACAC,EAAA3tB,EAAA,OAAA0tB,GAqBA,IAlBAA,EAAAC,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAD,EACAA,EAAAC,EAAA,IACAzF,EAAAyF,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAD,EACAC,EAAA,GAAAzF,EACAwF,EAAAC,EAAA,IACAzF,EAAAyF,EAAA,IACAxF,EAAAwF,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAD,EACAC,EAAA,GAAAzF,EACAyF,EAAA,GAAAxF,EACAnoB,EAAA,EAAeA,EAAA,KAAQA,EACvB2tB,EAAA3tB,GAAAqtB,EAAAM,EAAA3tB,IACA2tB,EAAA3tB,IAAA5B,EAAA4B,GAEA,OAAA2tB,EAEA,SAAAsB,EAAAxB,EAAArvB,GACA,IAAAsvB,EAAAxF,EAAAC,EAAAn2B,EAAAgO,EAAAwZ,EACAmU,EAAA,IAAA99B,WAAA,IAEA,IADA89B,EAAAv8B,IAAAq8B,GACAztB,EAAA,EAAeA,EAAA,KAAQA,EACvB2tB,EAAA3tB,IAAA5B,EAAA4B,GAEA,IAAAhO,EAAA,EAAeA,EAAA,GAAQA,IAAA,CACvB,IAAAgO,EAAA,EAAiBA,EAAA,KAAQA,EACzB2tB,EAAA3tB,GAAAZ,EAAAuuB,EAAA3tB,IAoBA,IAlBAmoB,EAAAwF,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAxF,EACAA,EAAAwF,EAAA,GACAzF,EAAAyF,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAxF,EACAwF,EAAA,IAAAzF,EACAC,EAAAwF,EAAA,GACAzF,EAAAyF,EAAA,GACAD,EAAAC,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAxF,EACAwF,EAAA,IAAAzF,EACAyF,EAAA,IAAAD,EACA1tB,EAAA,EAAiBA,EAAA,GAAQA,GAAA,GACzB,IAAA4tB,EAAAD,EAAA3tB,EAAA,GACA6tB,EAAAF,EAAA3tB,EAAA,GACA8tB,EAAAH,EAAA3tB,EAAA,GACA+tB,EAAAJ,EAAA3tB,EAAA,GACA0tB,EAAAE,EAAAC,EAAAC,EAAAC,EACAJ,EAAA3tB,EAAA,IAAA0tB,EAAAJ,EAAAM,EAAAC,GACAF,EAAA3tB,EAAA,IAAA0tB,EAAAJ,EAAAO,EAAAC,GACAH,EAAA3tB,EAAA,IAAA0tB,EAAAJ,EAAAQ,EAAAC,GACAJ,EAAA3tB,EAAA,IAAA0tB,EAAAJ,EAAAS,EAAAH,GAEA,IAAA5tB,EAAA,EAAAwZ,EAAA,GAAAxnB,EAA6BgO,EAAA,KAAQA,IAAAwZ,EACrCmU,EAAA3tB,IAAA5B,EAAAob,GAGA,IAAAxZ,EAAA,EAAeA,EAAA,KAAQA,EACvB2tB,EAAA3tB,GAAAZ,EAAAuuB,EAAA3tB,IAoBA,IAlBAmoB,EAAAwF,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAxF,EACAA,EAAAwF,EAAA,GACAzF,EAAAyF,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAxF,EACAwF,EAAA,IAAAzF,EACAC,EAAAwF,EAAA,GACAzF,EAAAyF,EAAA,GACAD,EAAAC,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAxF,EACAwF,EAAA,IAAAzF,EACAyF,EAAA,IAAAD,EACA1tB,EAAA,EAAAwZ,EAAA,IAAwBxZ,EAAA,KAAQA,IAAAwZ,EAChCmU,EAAA3tB,IAAA5B,EAAAob,GAEA,OAAAmU,EAEA,SAAAhE,EAAAvrB,GACAzO,KAAAyO,IAnLA,SAAA6vB,GACA,IACAvd,EAAA,IAAA7gB,WADA,KAEA2b,EAAA,EACAkF,EAAAtf,IAAA68B,GACA,QAAAjuB,EAAA,GAAAhO,EAAA,EAA2BgO,EAJ3B,MAIkChO,EAAA,CAClC,IAAA46B,EAAAC,EAAAqB,EAAAC,EACAnuB,EAAA,QACA4sB,EAAAxtB,EAAAwtB,GACAC,EAAAztB,EAAAytB,GACAqB,EAAA9uB,EAAA8uB,GACAC,EAAA/uB,EAAA+uB,IACOnuB,EAAA,QACP4sB,EAAAlc,EAAA1Q,EAAA,GACA6sB,EAAAnc,EAAA1Q,EAAA,GACAkuB,EAAAxd,EAAA1Q,EAAA,GACAmuB,EAAAzd,EAAA1Q,EAAA,GACA4sB,EAAAxtB,EAAAwtB,GACAC,EAAAztB,EAAAytB,GACAqB,EAAA9uB,EAAA8uB,GACAC,EAAA/uB,EAAA+uB,GACAvB,GAAAphB,GACAA,IAAA,UACAA,EAAA,QAAAA,KAGA,QAAA5a,EAAA,EAAqBA,EAAA,IAAOA,EAC5B8f,EAAA1Q,GAAA4sB,GAAAlc,EAAA1Q,EAAA,IAEA0Q,IADA1Q,GACA6sB,GAAAnc,EAAA1Q,EAAA,IAEA0Q,IADA1Q,GACAkuB,GAAAxd,EAAA1Q,EAAA,IAEA0Q,IADA1Q,GACAmuB,GAAAzd,EAAA1Q,EAAA,IACAA,IAGA,OAAA0Q,EA8IAwe,CAAA9wB,GACAzO,KAAAgZ,OAAA,IAAA9Y,WAAA,IACAF,KAAA0+B,eAAA,EAEA,SAAAC,EAAA58B,EAAA68B,GACA,IAAAv8B,EACAgO,EACAnK,EACA24B,EAAA98B,EAAAlC,OACAmZ,EAAAhZ,KAAAgZ,OACA8lB,EAAA9+B,KAAA0+B,eACA3d,EAAA,GACAge,EAAA/+B,KAAA++B,GACA,IAAA18B,EAAA,EAAeA,EAAAw8B,IAAkBx8B,EAGjC,GAFA2W,EAAA8lB,GAAA/8B,EAAAM,OACAy8B,EACA,KAGA,IAAAE,EAAAK,EAAArmB,EAAAhZ,KAAAyO,KACA,IAAA4B,EAAA,EAAiBA,EAAA,KAAQA,EACzB2uB,EAAA3uB,IAAA0uB,EAAA1uB,GAEA0uB,EAAA/lB,EACA+H,EAAA7f,KAAA89B,GACAhmB,EAAA,IAAA9Y,WAAA,IACA4+B,EAAA,EAKA,GAHA9+B,KAAAgZ,SACAhZ,KAAA8+B,eACA9+B,KAAA++B,KACA,IAAAhe,EAAAlhB,OACA,WAAAK,WAAA,IAEA,IAAA++B,EAAA,GAAAle,EAAAlhB,OACA,GAAA++B,EAAA,CACA,IAAAM,EAAAne,IAAAlhB,OAAA,GACAs/B,EAAAD,EAAA,IACA,GAAAC,GAAA,IACA,IAAA98B,EAAA,GAAA6D,EAAA,GAAAi5B,EAAqC98B,GAAA6D,IAAS7D,EAC9C,GAAA68B,EAAA78B,KAAA88B,EAAA,CACAA,EAAA,EACA,MAGAF,GAAAE,EACApe,IAAAlhB,OAAA,GAAAq/B,EAAAn8B,SAAA,KAAAo8B,IAGA,IAAA5E,EAAA,IAAAr6B,WAAA++B,GACA,IAAA58B,EAAA,EAAAgO,EAAA,EAAAnK,EAAA6a,EAAAlhB,OAA0CwC,EAAA6D,IAAQ7D,EAAAgO,GAAA,GAClDkqB,EAAA94B,IAAAsf,EAAA1e,GAAAgO,GAEA,OAAAkqB,EAkEA,OAhEAP,EAAAn5B,UAAA,CACA25B,aAAA,SAAAz4B,EAAA68B,EAAAG,GACA,IAAA18B,EACAw8B,EAAA98B,EAAAlC,OACAmZ,EAAAhZ,KAAAgZ,OACA8lB,EAAA9+B,KAAA0+B,eACA,GAAAK,EACA/+B,KAAA++B,SACO,CACP,IAAA18B,EAAA,EAAmBy8B,EAAA,IAAAz8B,EAAAw8B,IAAuCx8B,IAAAy8B,EAC1D9lB,EAAA8lB,GAAA/8B,EAAAM,GAEA,GAAAy8B,EAAA,GAEA,OADA9+B,KAAA8+B,eACA,IAAA5+B,WAAA,IAEAF,KAAA++B,GAAA/lB,EACAjX,IAAAgB,SAAA,IAKA,OAHA/C,KAAAgZ,OAAA,IAAA9Y,WAAA,IACAF,KAAA8+B,aAAA,EACA9+B,KAAAw6B,aAAAmE,EACA3+B,KAAAw6B,aAAAz4B,EAAA68B,IAEA1zB,QAAA,SAAAnJ,EAAAg9B,GACA,IAAA18B,EACAgO,EACAnK,EACA24B,EAAA98B,EAAAlC,OACAmZ,EAAAhZ,KAAAgZ,OACA8lB,EAAA9+B,KAAA0+B,eACA3d,EAAA,GAIA,IAHAge,IACAA,EAAA,IAAA7+B,WAAA,KAEAmC,EAAA,EAAiBA,EAAAw8B,IAAkBx8B,EAGnC,GAFA2W,EAAA8lB,GAAA/8B,EAAAM,OACAy8B,EACA,KAGA,IAAAzuB,EAAA,EAAmBA,EAAA,KAAQA,EAC3B2I,EAAA3I,IAAA0uB,EAAA1uB,GAEA,IAAA+uB,EAAAE,EAAAtmB,EAAAhZ,KAAAyO,KACAzO,KAAA++B,GAAAK,EACAre,EAAA7f,KAAAk+B,GACApmB,EAAA,IAAA9Y,WAAA,IACA4+B,EAAA,EAKA,GAHA9+B,KAAAgZ,SACAhZ,KAAA8+B,eACA9+B,KAAA++B,KACA,IAAAhe,EAAAlhB,OACA,WAAAK,WAAA,IAEA,IAAA++B,EAAA,GAAAle,EAAAlhB,OACA06B,EAAA,IAAAr6B,WAAA++B,GACA,IAAA58B,EAAA,EAAAgO,EAAA,EAAAnK,EAAA6a,EAAAlhB,OAA4CwC,EAAA6D,IAAQ7D,EAAAgO,GAAA,GACpDkqB,EAAA94B,IAAAsf,EAAA1e,GAAAgO,GAEA,OAAAkqB,IAGAP,EAtTA,GAwTAF,EAAA,WACA,SAAA0F,EAAAC,EAAAC,GACA,GAAAD,EAAA5/B,SAAA6/B,EAAA7/B,OACA,SAEA,QAAAwC,EAAA,EAAmBA,EAAAo9B,EAAA5/B,OAAmBwC,IACtC,GAAAo9B,EAAAp9B,KAAAq9B,EAAAr9B,GACA,SAGA,SAEA,SAAAy3B,KAmCA,OAlCAA,EAAAj5B,UAAA,CACA8+B,mBAAA,SAAA9pB,EAAA+pB,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAA7/B,WAAA2V,EAAAhW,OAAA,IAKA,OAJAkgC,EAAAt+B,IAAAoU,EAAA,GACAkqB,EAAAt+B,IAAAm+B,EAAA/pB,EAAAhW,QACAkgC,EAAAt+B,IAAAo+B,EAAAhqB,EAAAhW,OAAA+/B,EAAA//B,QAEA2/B,EADA7F,EAAAoG,EAAA,EAAAA,EAAAlgC,QACAigC,IAEAE,kBAAA,SAAAnqB,EAAAoqB,EAAAC,GACA,IAAAH,EAAA,IAAA7/B,WAAA2V,EAAAhW,OAAA,GAIA,OAHAkgC,EAAAt+B,IAAAoU,EAAA,GACAkqB,EAAAt+B,IAAAw+B,EAAApqB,EAAAhW,QAEA2/B,EADA7F,EAAAoG,EAAA,EAAAA,EAAAlgC,QACAqgC,IAEAC,YAAA,SAAAtqB,EAAAuqB,EAAAP,EAAAQ,GACA,IAAAN,EAAA,IAAA7/B,WAAA2V,EAAAhW,OAAA,IACAkgC,EAAAt+B,IAAAoU,EAAA,GACAkqB,EAAAt+B,IAAA2+B,EAAAvqB,EAAAhW,QACAkgC,EAAAt+B,IAAAo+B,EAAAhqB,EAAAhW,OAAAugC,EAAAvgC,QACA,IAAA4O,EAAAkrB,EAAAoG,EAAA,EAAAA,EAAAlgC,QAEA,OADA,IAAAm6B,EAAAvrB,GACA+rB,aAAA6F,GAAA,MAAAngC,WAAA,MAEAogC,WAAA,SAAAzqB,EAAA0qB,EAAAC,GACA,IAAAT,EAAA,IAAA7/B,WAAA2V,EAAAhW,OAAA,GACAkgC,EAAAt+B,IAAAoU,EAAA,GACAkqB,EAAAt+B,IAAA8+B,EAAA1qB,EAAAhW,QACA,IAAA4O,EAAAkrB,EAAAoG,EAAA,EAAAA,EAAAlgC,QAEA,OADA,IAAAm6B,EAAAvrB,GACA+rB,aAAAgG,GAAA,MAAAtgC,WAAA,OAGA45B,EA/CA,GAiDAD,EAAA,WACA,SAAA4G,EAAAhB,EAAAC,GACA,IAAA3B,EAAA,IAAA79B,WAAAu/B,EAAA5/B,OAAA6/B,EAAA7/B,QAGA,OAFAk+B,EAAAt8B,IAAAg+B,EAAA,GACA1B,EAAAt8B,IAAAi+B,EAAAD,EAAA5/B,QACAk+B,EAEA,SAAA2C,EAAA7qB,EAAAioB,EAAA+B,GAIA,IAHA,IAAAhW,EAAA8P,EAAAmE,EAAA,EAAAA,EAAAj+B,QAAAkD,SAAA,MACAgD,EAAA,IACA1D,EAAA,EACAA,EAAA,IAAA0D,IAAAlG,OAAA,GAAAwC,EAAA,KACA,IAAAs+B,EAAA9qB,EAAAhW,OAAAgqB,EAAAhqB,OAAAggC,EAAAhgC,OACA+gC,EAAA,IAAA1gC,WAAA,GAAAygC,GACAE,EAAAJ,EAAA5qB,EAAAgU,GACAgX,EAAAJ,EAAAI,EAAAhB,GACA,QAAAxvB,EAAA,EAAAjQ,EAAA,EAA8BiQ,EAAA,GAAQA,IAAAjQ,GAAAugC,EACtCC,EAAAn/B,IAAAo/B,EAAAzgC,GAGA2F,EADA,IAAAk0B,EAAApQ,EAAA9mB,SAAA,OACAmI,QAAA01B,EAAA/W,EAAA9mB,SAAA,QAEA,IADA,IAAA+9B,EAAA,EACAtE,EAAA,EAAqBA,EAAA,GAAQA,IAC7BsE,GAAA,EACAA,GAAA,EACAA,IAAA/6B,EAAAy2B,KAAA,KACAsE,GAAA,EAEA,IAAAA,EACAjX,EAAA8P,EAAA5zB,EAAA,EAAAA,EAAAlG,QACO,IAAAihC,EACPjX,EAAA6P,EAAA3zB,EAAA,EAAAA,EAAAlG,QACO,IAAAihC,IACPjX,EAAA4P,EAAA1zB,EAAA,EAAAA,EAAAlG,SAEAwC,IAEA,OAAAwnB,EAAA9mB,SAAA,MAEA,SAAA82B,KACA,SAAA2F,EAAAC,EAAAC,GACA,GAAAD,EAAA5/B,SAAA6/B,EAAA7/B,OACA,SAEA,QAAAwC,EAAA,EAAmBA,EAAAo9B,EAAA5/B,OAAmBwC,IACtC,GAAAo9B,EAAAp9B,KAAAq9B,EAAAr9B,GACA,SAGA,SAuCA,OArCAw3B,EAAAh5B,UAAA,CACAkgC,KAAA,SAAAlrB,EAAAmrB,EAAAnB,GACA,OAAAa,EAAA7qB,EAAAmrB,EAAAnB,IAEAF,mBAAA,SAAA9pB,EAAA+pB,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAA7/B,WAAA2V,EAAAhW,OAAA,IAKA,OAJAkgC,EAAAt+B,IAAAoU,EAAA,GACAkqB,EAAAt+B,IAAAm+B,EAAA/pB,EAAAhW,QACAkgC,EAAAt+B,IAAAo+B,EAAAhqB,EAAAhW,OAAA+/B,EAAA//B,QAEA2/B,EADAkB,EAAA7qB,EAAAkqB,EAAAF,GACAC,IAEAE,kBAAA,SAAAnqB,EAAAoqB,EAAAC,GACA,IAAAH,EAAA,IAAA7/B,WAAA2V,EAAAhW,OAAA,GAIA,OAHAkgC,EAAAt+B,IAAAoU,EAAA,GACAkqB,EAAAt+B,IAAAw+B,EAAApqB,EAAAhW,QAEA2/B,EADAkB,EAAA7qB,EAAAkqB,EAAA,IACAG,IAEAC,YAAA,SAAAtqB,EAAAuqB,EAAAP,EAAAQ,GACA,IAAAN,EAAA,IAAA7/B,WAAA2V,EAAAhW,OAAA,IACAkgC,EAAAt+B,IAAAoU,EAAA,GACAkqB,EAAAt+B,IAAA2+B,EAAAvqB,EAAAhW,QACAkgC,EAAAt+B,IAAAo+B,EAAAhqB,EAAAhW,OAAAugC,EAAAvgC,QACA,IAAA4O,EAAAiyB,EAAA7qB,EAAAkqB,EAAAF,GAEA,OADA,IAAA7F,EAAAvrB,GACA+rB,aAAA6F,GAAA,MAAAngC,WAAA,MAEAogC,WAAA,SAAAzqB,EAAA0qB,EAAAC,GACA,IAAAT,EAAA,IAAA7/B,WAAA2V,EAAAhW,OAAA,GACAkgC,EAAAt+B,IAAAoU,EAAA,GACAkqB,EAAAt+B,IAAA8+B,EAAA1qB,EAAAhW,QACA,IAAA4O,EAAAiyB,EAAA7qB,EAAAkqB,EAAA,IAEA,OADA,IAAA/F,EAAAvrB,GACA+rB,aAAAgG,GAAA,MAAAtgC,WAAA,OAGA25B,EAxFA,GA0FAoH,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACAnhC,KAAAohC,wBAAAF,EACAlhC,KAAAqhC,wBAAAF,EAgBA,OAdAF,EAAApgC,UAAA,CACAygC,aAAA,SAAAt9B,EAAAnE,GACA,IAAAu/B,EAAA,IAAAp/B,KAAAqhC,wBACA,WAAAnH,EAAAqH,cAAAv9B,EAAAnE,EAAA,SAAAkC,EAAA68B,GACA,OAAAQ,EAAA5E,aAAAz4B,EAAA68B,MAGA4C,cAAA,SAAA/xB,GACA,IAAA2vB,EAAA,IAAAp/B,KAAAohC,wBACAr/B,GAAA,EAAApC,EAAA8hC,eAAAhyB,GAEA,OADA1N,EAAAq9B,EAAA5E,aAAAz4B,GAAA,IACA,EAAApC,EAAA8L,eAAA1J,KAGAk/B,EAnBA,GAqBArrB,EAAA,WACA,IAAA8rB,EAAA,IAAAxhC,WAAA,8GAqBA,SAAAyhC,EAAAjsB,EAAAG,EAAAiqB,EAAAI,EAAA/yB,EAAAy0B,EAAAxH,EAAAnvB,GACA,IAGAoF,EACApP,EAJA4gC,EAAA,GAAA/B,EAAAjgC,OAAA6V,EAAA7V,OACAkgC,EAAA,IAAA7/B,WAAA2hC,GACAx/B,EAAA,EAGA,GAAAwT,EAEA,IADA5U,EAAAR,KAAAkG,IAAA,GAAAkP,EAAAhW,QACYwC,EAAApB,IAAOoB,EACnB09B,EAAA19B,GAAAwT,EAAAxT,GAIA,IADAgO,EAAA,EACAhO,EAAA,IACA09B,EAAA19B,KAAAq/B,EAAArxB,KAEA,IAAAA,EAAA,EAAApP,EAAA6+B,EAAAjgC,OAAyCwQ,EAAApP,IAAOoP,EAChD0vB,EAAA19B,KAAAy9B,EAAAzvB,GAMA,IAJA0vB,EAAA19B,KAAA,IAAA8K,EACA4yB,EAAA19B,KAAA8K,GAAA,MACA4yB,EAAA19B,KAAA8K,GAAA,OACA4yB,EAAA19B,KAAA8K,IAAA,OACAkD,EAAA,EAAApP,EAAAyU,EAAA7V,OAAkCwQ,EAAApP,IAAOoP,EACzC0vB,EAAA19B,KAAAqT,EAAArF,GAEAuxB,GAAA,IAAA32B,IACA80B,EAAA19B,KAAA,IACA09B,EAAA19B,KAAA,IACA09B,EAAA19B,KAAA,IACA09B,EAAA19B,KAAA,KAEA,IAAA0+B,EAAAnH,EAAAmG,EAAA,EAAA19B,GACAy/B,EAAA1H,GAAA,EACA,GAAAwH,GAAA,EACA,IAAAvxB,EAAA,EAAiBA,EAAA,KAAQA,EACzB0wB,EAAAnH,EAAAmH,EAAA,EAAAe,GAGA,IACAC,EADAC,EAAAjB,EAAAh+B,SAAA,EAAA++B,GAEA,GAAAF,GAAA,GACA,IAAAv/B,EAAA,EAAiBA,EAAA,KAAQA,EACzB09B,EAAA19B,GAAAq/B,EAAAr/B,GAEA,IAAAgO,EAAA,EAAApP,EAAAyU,EAAA7V,OAAoCwQ,EAAApP,IAAOoP,EAC3C0vB,EAAA19B,KAAAqT,EAAArF,GAGA0xB,EADA,IAAAhI,EAAAiI,GACA3H,aAAAT,EAAAmG,EAAA,EAAA19B,IACApB,EAAA+gC,EAAAniC,OACA,IACAgqB,EADAoY,EAAA,IAAA/hC,WAAAe,GAEA,IAAAoP,EAAA,EAAiBA,GAAA,KAASA,EAAA,CAC1B,IAAAwZ,EAAA,EAAmBA,EAAA5oB,IAAO4oB,EAC1BoY,EAAApY,GAAAmY,EAAAnY,GAAAxZ,EAGA0xB,EADA,IAAAhI,EAAAkI,GACA5H,aAAA0H,GAEA,IAAA1xB,EAAA,EAAApP,EAAA8gC,EAAAliC,OAAuCwQ,EAAApP,IAAOoP,EAC9C,GAAA6vB,EAAA7vB,KAAA0xB,EAAA1xB,GACA,iBAMA,IAAAA,EAAA,EAAApP,GADA8gC,EADA,IAAAhI,EAAAiI,GACA3H,aAAAqH,IACA7hC,OAAuCwQ,EAAApP,IAAOoP,EAC9C,GAAA6vB,EAAA7vB,KAAA0xB,EAAA1xB,GACA,YAIA,OAAA2xB,EAwCA,IAAAE,EAAAv4B,EAAAw4B,KAAA92B,IAAA,YACA,SAAAuK,EAAApS,EAAAkS,EAAAG,GACA,IAAAgjB,EAAAr1B,EAAA6H,IAAA,UACA,OAAA1B,EAAA4B,QAAAstB,EAAA,YACA,UAAAl5B,EAAA2K,YAAA,6BAEAtK,KAAAwD,OACA,IAAA4+B,EAAA5+B,EAAA6H,IAAA,KACA,IAAAtD,OAAAC,UAAAo6B,IAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAAziC,EAAA2K,YAAA,oCAEAtK,KAAAoiC,YACA,IAAAhI,EAAA52B,EAAA6H,IAAA,UACA,IAAA+uB,EACA,GAAAgI,GAAA,EACAhI,EAAA,OACO,CACP,IAAAiI,EAAA7+B,EAAA6H,IAAA,MACAi3B,EAAA9+B,EAAA6H,IAAA,QACA,MAAA1B,EAAAU,QAAAg4B,KAAA,EAAA14B,EAAA4B,QAAA+2B,GAAA,CACAD,EAAA1sB,oBAAA,EACA,IAAA4sB,EAAAF,EAAAh3B,IAAAi3B,EAAAzzB,OACAurB,EAAAmI,KAAAl3B,IAAA,gBACA,KACA+uB,IAAA,IAKA,IAAAryB,OAAAC,UAAAoyB,MAAA,IAAAA,EAAA,KACA,UAAAz6B,EAAA2K,YAAA,sBAEA,IAAAw1B,GAAA,EAAAngC,EAAA8hC,eAAAj+B,EAAA6H,IAAA,MAAAtI,SAAA,MACAm9B,GAAA,EAAAvgC,EAAA8hC,eAAAj+B,EAAA6H,IAAA,MAAAtI,SAAA,MACAoK,EAAA3J,EAAA6H,IAAA,KACAu2B,EAAAp+B,EAAA6H,IAAA,KACAJ,GAAA,IAAAm3B,GAAA,IAAAA,KAAA,IAAA5+B,EAAA6H,IAAA,mBACArL,KAAAiL,kBACA,IACAu3B,EAWAR,EAZAS,GAAA,EAAA9iC,EAAA8hC,eAAA/rB,GAEA,GAAAG,EAAA,CACA,OAAA+rB,EACA,IACA/rB,GAAA,EAAAlW,EAAA+iC,oBAAA7sB,GACS,MAAA9J,IACT,EAAApM,EAAAqM,MAAA,oEAGAw2B,GAAA,EAAA7iC,EAAA8hC,eAAA5rB,GAGA,OAAAusB,EACAJ,EAAAL,EAAAc,EAAAD,EAAA1C,EAAAI,EAAA/yB,EAAAy0B,EAAAxH,EAAAnvB,OACK,CACL,IAAA20B,GAAA,EAAAjgC,EAAA8hC,eAAAj+B,EAAA6H,IAAA,MAAAtI,SAAA,OACAq9B,GAAA,EAAAzgC,EAAA8hC,eAAAj+B,EAAA6H,IAAA,MAAAtI,SAAA,OACA4/B,GAAA,EAAAhjC,EAAA8hC,eAAAj+B,EAAA6H,IAAA,MAAAtI,SAAA,MACAk9B,GAAA,EAAAtgC,EAAA8hC,eAAAj+B,EAAA6H,IAAA,MAAAtI,SAAA,OACAw9B,GAAA,EAAA5gC,EAAA8hC,eAAAj+B,EAAA6H,IAAA,MAAAtI,SAAA,OACAs9B,GAAA,EAAA1gC,EAAA8hC,eAAAj+B,EAAA6H,IAAA,OACAm1B,GAAA,EAAA7gC,EAAA8hC,eAAAj+B,EAAA6H,IAAA,QACA,EAAA1L,EAAA8hC,eAAAj+B,EAAA6H,IAAA,UACA22B,EApMA,SAAAJ,EAAA/rB,EAAAiqB,EAAAF,EAAAQ,EAAAuC,EAAAzC,EAAAD,EAAAM,EAAAF,EAAAG,EAAAoC,GACA,GAAA/sB,EAAA,CACA,IAAAgtB,EAAApiC,KAAAkG,IAAA,IAAAkP,EAAAhW,QACAgW,IAAA9S,SAAA,EAAA8/B,QAEAhtB,EAAA,GAEA,IAAAitB,EAMA,OAJAA,EADA,IAAAlB,EACA,IAAA/H,EAEA,IAAAC,GAEAkG,kBAAAnqB,EAAAoqB,EAAAC,GACA4C,EAAAxC,WAAAzqB,EAAA0qB,EAAAC,GACK3qB,EAAAhW,QAAAijC,EAAAnD,mBAAA9pB,EAAA+pB,EAAA+C,EAAA7C,GACLgD,EAAA3C,YAAAtqB,EAAAuqB,EAAAuC,EAAAtC,GAEA,KAkLA0C,CAAAnB,EAAAY,EAAA1C,EAAAF,EAAAQ,EAAAuC,EAAAzC,EAAAD,EAAAM,EAAAF,EAAAG,GAEA,IAAAwB,IAAAnsB,EACA,UAAAlW,EAAAqjC,kBAAA,oBAAArjC,EAAAsjC,kBAAAC,eAKA,IAJKlB,GAAAnsB,IAELmsB,EAAAL,EAAAc,EA1GA,SAAA5sB,EAAAiqB,EAAA8B,EAAAxH,GACA,IAEA/pB,EACApP,EAHA8+B,EAAA,IAAA7/B,WAAA,IACAmC,EAAA,EAIA,IADApB,EAAAR,KAAAkG,IAAA,GAAAkP,EAAAhW,QACUwC,EAAApB,IAAOoB,EACjB09B,EAAA19B,GAAAwT,EAAAxT,GAGA,IADAgO,EAAA,EACAhO,EAAA,IACA09B,EAAA19B,KAAAq/B,EAAArxB,KAEA,IAOA6vB,EAPAa,EAAAnH,EAAAmG,EAAA,EAAA19B,GACAy/B,EAAA1H,GAAA,EACA,GAAAwH,GAAA,EACA,IAAAvxB,EAAA,EAAiBA,EAAA,KAAQA,EACzB0wB,EAAAnH,EAAAmH,EAAA,EAAAA,EAAAlhC,QAIA,GAAA+hC,GAAA,GACA1B,EAAAJ,EACA,IACAjW,EADAoY,EAAA,IAAA/hC,WAAA4hC,GAEA,IAAAzxB,EAAA,GAAkBA,GAAA,EAAQA,IAAA,CAC1B,IAAAwZ,EAAA,EAAmBA,EAAAiY,IAAsBjY,EACzCoY,EAAApY,GAAAkX,EAAAlX,GAAAxZ,EAGA6vB,EADA,IAAAnG,EAAAkI,GACA5H,aAAA6F,SAIAA,EADA,IAAAnG,EAAAgH,EAAAh+B,SAAA,EAAA++B,IACAzH,aAAAyF,GAEA,OAAAI,EAqEAiD,CAAAX,EAAA1C,EAAA8B,EAAAxH,GACA0F,EAAAI,EAAA/yB,EAAAy0B,EAAAxH,EAAAnvB,KAEA+2B,EACA,UAAAriC,EAAAqjC,kBAAA,qBAAArjC,EAAAsjC,kBAAAG,oBAGA,GADApjC,KAAAgiC,gBACAI,GAAA,GACA,IAAAiB,EAAA7/B,EAAA6H,IAAA,OACA,EAAA1B,EAAAU,QAAAg5B,KACAA,EAAA1tB,oBAAA,GAEA3V,KAAAqjC,KACArjC,KAAAsjC,KAAA9/B,EAAA6H,IAAA,SAAA62B,EACAliC,KAAAujC,KAAA//B,EAAA6H,IAAA,SAAA62B,EACAliC,KAAAwjC,IAAAhgC,EAAA6H,IAAA,QAAArL,KAAAsjC,MAGA,SAAAG,EAAArwB,EAAA4D,EAAAgrB,EAAA0B,GACA,IACArhC,EACApB,EAFAwN,EAAA,IAAAvO,WAAA8hC,EAAAniC,OAAA,GAGA,IAAAwC,EAAA,EAAApB,EAAA+gC,EAAAniC,OAAyCwC,EAAApB,IAAOoB,EAChDoM,EAAApM,GAAA2/B,EAAA3/B,GAcA,OAZAoM,EAAApM,KAAA,IAAA+Q,EACA3E,EAAApM,KAAA+Q,GAAA,MACA3E,EAAApM,KAAA+Q,GAAA,OACA3E,EAAApM,KAAA,IAAA2U,EACAvI,EAAApM,KAAA2U,GAAA,MACA0sB,IACAj1B,EAAApM,KAAA,IACAoM,EAAApM,KAAA,GACAoM,EAAApM,KAAA,IACAoM,EAAApM,KAAA,IAEAu3B,EAAAnrB,EAAA,EAAApM,GACAU,SAAA,EAAAtC,KAAAkG,IAAAq7B,EAAAniC,OAAA,OAEA,SAAA8jC,EAAAN,EAAAx0B,EAAAuE,EAAA4D,EAAAvI,GACA,OAAA9E,EAAA4B,QAAAsD,GACA,UAAAlP,EAAA2K,YAAA,8BAEA,IACAs5B,EADAC,EAAAR,EAAAh4B,IAAAwD,QAKA,GAHAg1B,UACAD,EAAAC,EAAAx4B,IAAA,SAEAu4B,GAAA,SAAAA,EAAA/0B,KACA,kBACA,WAAA2uB,GAGA,UAAAoG,EAAA/0B,KACA,kBACA,WAAAkrB,EAAA0J,EAAArwB,EAAA4D,EAAAvI,GAAA,KAGA,aAAAm1B,EAAA/0B,KACA,kBACA,WAAAorB,EAAAwJ,EAAArwB,EAAA4D,EAAAvI,GAAA,KAGA,aAAAm1B,EAAA/0B,KACA,kBACA,WAAAmrB,EAAAvrB,IAGA,UAAA9O,EAAA2K,YAAA,yBAcA,OAZAsL,EAAA/U,UAAA,CACAqa,sBAAA,SAAA9H,EAAA4D,GACA,OAAAhX,KAAAoiC,WAAA,IAAApiC,KAAAoiC,UACA,WAAAnB,EAAA0C,EAAA3jC,KAAAqjC,GAAArjC,KAAAsjC,KAAAlwB,EAAA4D,EAAAhX,KAAAgiC,eAAA2B,EAAA3jC,KAAAqjC,GAAArjC,KAAAujC,KAAAnwB,EAAA4D,EAAAhX,KAAAgiC,gBAEA,IAAAvzB,EAAAg1B,EAAArwB,EAAA4D,EAAAhX,KAAAgiC,eAAA,GACA8B,EAAA,WACA,WAAA/J,EAAAtrB,IAEA,WAAAwyB,EAAA6C,OAGAluB,EA7RA,GA+RAtW,EAAA26B,eACA36B,EAAA06B,eACA16B,EAAAy6B,gBACAz6B,EAAAsW,yBACAtW,EAAAw6B,QACAx6B,EAAAu6B,QACAv6B,EAAAs6B,eACAt6B,EAAAq6B,kBACAr6B,EAAAo6B,kBACAp6B,EAAAm6B,qDCjjDAr6B,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAykC,YAAAzkC,EAAA0kC,eAAA1kC,EAAA2kC,WAAA3kC,EAAA4kC,WAAA5kC,EAAA6kC,SAAA7kC,EAAA8kC,WAAA9kC,EAAA+kC,UAAA/kC,EAAAglC,IAAAhlC,EAAAilC,UAAAjlC,EAAAklC,wBAAA9kC,EAEA,IAAAC,EAAYC,EAAQ,KAEpB6kC,EAAgB7kC,EAAQ,MAExB8kC,EAAiB9kC,EAAQ,KAGzB4kC,EAAA,moIACAD,EAAA,WACA,IAAAI,EAAA,OACAC,GAAA,QACAj+B,IAAA,EACAk+B,eAAA,EACAC,MAAA,GACG,MACHF,GAAA,QACAj+B,IAAA,EACAk+B,eAAA,EACAC,MAAA,GACG,CACHF,GAAA,UACAj+B,IAAA,EACAk+B,eAAA,GACG,CACHD,GAAA,UACAj+B,IAAA,EACAo+B,YAAA,GACG,CACHH,GAAA,UACAj+B,IAAA,EACAo+B,YAAA,GACG,CACHH,GAAA,UACAj+B,IAAA,EACAo+B,YAAA,GACG,CACHH,GAAA,YACAj+B,IAAA,EACAo+B,YAAA,GACG,MACHH,GAAA,WACAj+B,IAAA,EACAq+B,YAAA,GACG,CACHJ,GAAA,SACAj+B,IAAA,EACAq+B,YAAA,GACG,WACHJ,GAAA,UACAj+B,IAAA,EACAk+B,eAAA,GACG,gBACHD,GAAA,UACAj+B,IAAA,EACAk+B,eAAA,EACAC,MAAA,GACG,CACHF,GAAA,WACAj+B,IAAA,EACAk+B,eAAA,GACG,CACHD,GAAA,WACAj+B,IAAA,EACAk+B,eAAA,GACG,CACHD,GAAA,UACAj+B,IAAA,EACAk+B,eAAA,GACG,CACHD,GAAA,UACAj+B,IAAA,EACAk+B,eAAA,GACG,CACHD,GAAA,UACAj+B,IAAA,EACAk+B,eAAA,EACAC,MAAA,GACG,CACHF,GAAA,aACAj+B,IAAA,EACAo+B,YAAA,GACG,CACHH,GAAA,aACAj+B,IAAA,EACAo+B,YAAA,GACG,CACHH,GAAA,YACAj+B,IAAA,EACAo+B,YAAA,GACG,CACHH,GAAA,YACAj+B,IAAA,EACAo+B,YAAA,GACG,MACHH,GAAA,YACAj+B,IAAA,EACAq+B,YAAA,GACG,CACHJ,GAAA,YACAj+B,IAAA,EACAo+B,YAAA,GACG,CACHH,GAAA,YACAj+B,IAAA,EACAo+B,YAAA,IAEAE,EAAA,iBACAL,GAAA,MACAj+B,IAAA,EACAu+B,YAAA,GACG,CACHN,GAAA,KACAj+B,IAAA,EACAu+B,YAAA,GACG,CACHN,GAAA,MACAj+B,IAAA,EACAu+B,WAAA,GACG,gBACHN,GAAA,MACAj+B,IAAA,EACAu+B,WAAA,GACG,CACHN,GAAA,MACAj+B,IAAA,EACAu+B,YAAA,EACAC,QAAA,SAAAC,EAAA7b,GACA6b,EAAA7b,EAAA,GAAA6b,EAAA7b,EAAA,GAAA6b,EAAA7b,EAAA,KAEG,CACHqb,GAAA,MACAj+B,IAAA,EACAu+B,YAAA,EACAC,QAAA,SAAAC,EAAA7b,GACA6b,EAAA7b,EAAA,GAAA6b,EAAA7b,EAAA,GAAA6b,EAAA7b,EAAA,KAEG,CACHqb,GAAA,MACAj+B,IAAA,EACAu+B,YAAA,EACAC,QAAA,SAAAC,EAAA7b,GACA6b,EAAA7b,EAAA,GAAA6b,EAAA7b,EAAA,GAAA6b,EAAA7b,EAAA,KAEG,MACHqb,GAAA,MACAj+B,IAAA,EACAu+B,WAAA,EACAC,QAAA,SAAAC,EAAA7b,GACA6b,EAAA7b,EAAA,IAAA6b,EAAA7b,EAAA,KAEG,CACHqb,GAAA,KACAj+B,IAAA,EACAu+B,YAAA,GACG,WACHN,GAAA,OACAj+B,IAAA,EACAu+B,YAAA,GACG,MACHN,GAAA,MACAj+B,IAAA,EACAu+B,YAAA,GACG,CACHN,GAAA,MACAj+B,IAAA,EACAu+B,WAAA,GACG,CACHN,GAAA,SACAj+B,IAAA,EACAu+B,YAAA,GACG,CACHN,GAAA,SACAj+B,IAAA,EACAu+B,WAAA,GACG,CACHN,GAAA,MACAj+B,IAAA,EACAu+B,YAAA,EACAC,QAAA,SAAAC,EAAA7b,GACA6b,EAAA7b,EAAA,GAAA6b,EAAA7b,EAAA,GAAA6b,EAAA7b,EAAA,KAEG,MACHqb,GAAA,OACAj+B,IAAA,EACAu+B,WAAA,GACG,CACHN,GAAA,MACAj+B,IAAA,EACAu+B,WAAA,GACG,CACHN,GAAA,OACAj+B,IAAA,EACAu+B,WAAA,GACG,CACHN,GAAA,QACAj+B,IAAA,EACAu+B,WAAA,GACG,CACHN,GAAA,OACAj+B,IAAA,EACAu+B,YAAA,GACG,gBACHN,GAAA,QACAj+B,IAAA,EACAo+B,YAAA,GACG,CACHH,GAAA,OACAj+B,IAAA,GACAo+B,YAAA,GACG,CACHH,GAAA,SACAj+B,IAAA,EACAo+B,YAAA,GACG,CACHH,GAAA,QACAj+B,IAAA,GACAo+B,YAAA,IAEA,SAAAR,EAAAc,EAAAC,EAAAC,GACAvlC,KAAAC,MAAAolC,EAAAxiC,WACA7C,KAAAslC,aACAtlC,KAAAulC,wBAklBA,OAhlBAhB,EAAA1jC,UAAA,CACAqU,MAAA,WACA,IAAAowB,EAAAtlC,KAAAslC,WACAE,EAAA,IAAAlB,EACAtkC,KAAAwlC,MACA,IAAAC,EAAAzlC,KAAA0lC,cACAC,EAAA3lC,KAAA4lC,WAAAH,EAAAlsB,QACAssB,EAAA7lC,KAAA4lC,WAAAD,EAAApsB,QACAusB,EAAA9lC,KAAA4lC,WAAAC,EAAAtsB,QACAwsB,EAAA/lC,KAAA4lC,WAAAE,EAAAvsB,QACAysB,EAAAhmC,KAAAimC,UAAAJ,EAAAj9B,IAAAyC,IAAA,IACA6O,EAAAla,KAAAkmC,WAAAjC,EAAA+B,EAAAR,EAAAW,SACAX,EAAAC,SAAA78B,IACA48B,EAAA92B,MAAA1O,KAAAomC,eAAAT,EAAA/8B,KACA48B,EAAAW,QAAAnmC,KAAAqmC,iBAAAP,EAAAl9B,KACA48B,EAAAtrB,UACAsrB,EAAAO,kBAAAn9B,IACA5I,KAAAsmC,iBAAAd,EAAAtrB,SACAsrB,EAAAe,UAAArsB,EAAAssB,QAAA,OACA,IAAAC,EAAAvsB,EAAAwsB,UAAA,eACAC,EAAA3mC,KAAA4lC,WAAAa,GAAA79B,IACAg+B,EAAA1sB,EAAAwsB,UAAA,cACAE,IACAtB,EAAAsB,cAEA,IAMAC,EAAAroB,EANAsoB,EAAA5sB,EAAAwsB,UAAA,YAOA,GANAI,IACAxB,EAAAyB,OAAAtmC,KAAAgZ,IAAAqtB,EAAA,GAAAA,EAAA,IACAxB,EAAA0B,QAAAvmC,KAAAkG,IAAAmgC,EAAA,GAAAA,EAAA,IACAxB,EAAA2B,cAAA,GAGAzB,EAAAe,UAAA,CAEA,IADA,IAAAW,EAAAlnC,KAAA4lC,WAAA1rB,EAAAwsB,UAAA,YAAA99B,IACAvG,EAAA,EAAA6D,EAAAghC,EAAAn5B,MAAgD1L,EAAA6D,IAAQ7D,EAAA,CACxD,IAAA8kC,EAAAD,EAAA77B,IAAAhJ,GACA+kC,EAAApnC,KAAAkmC,WAAAjC,EAAAjkC,KAAAimC,UAAAkB,GAAA3B,EAAAW,SACAnmC,KAAAsmC,iBAAAc,GACA5B,EAAA6B,QAAAnmC,KAAAkmC,GAEA5oB,EAAA,KACAqoB,EAAA7mC,KAAAsnC,cAAAptB,EAAAwsB,UAAA,WAAAC,EAAA54B,MAAAy3B,EAAAW,SAAA,GACAX,EAAA+B,SAAAvnC,KAAAwnC,cAAAttB,EAAAwsB,UAAA,YAAAC,EAAA54B,YAEA84B,EAAA7mC,KAAAsnC,cAAAptB,EAAAwsB,UAAA,WAAAC,EAAA54B,MAAAy3B,EAAAW,SAAA,GACA3nB,EAAAxe,KAAAynC,cAAAvtB,EAAAwsB,UAAA,YAAApB,EAAAE,EAAAW,QAAAU,WAEArB,EAAAqB,UACArB,EAAAhnB,WACA,IAAAkpB,EAAA1nC,KAAA2nC,iBAAA,CACAC,YAAAjB,EACAkB,eAAA3tB,EAAA4tB,YAAAC,WACAhC,kBAAAn9B,IACA2+B,SAAA/B,EAAA+B,SACAF,QAAA7B,EAAA6B,QACAS,YAAA5tB,EAAA4tB,cAKA,OAHAtC,EAAAoC,YAAAF,EAAAE,YACApC,EAAAwC,MAAAN,EAAAM,MACAxC,EAAAyC,OAAAP,EAAAO,OACAzC,GAEAE,YAAA,WAIA,IAHA,IAAAzlC,EAAAD,KAAAC,MACAioC,EAAAjoC,EAAAJ,OACAkX,EAAA,EACAA,EAAAmxB,GAAA,IAAAjoC,EAAA8W,MACAA,EAEA,GAAAA,GAAAmxB,EACA,UAAAvoC,EAAA2K,YAAA,sBAEA,IAAAyM,KACA,EAAApX,EAAA+L,MAAA,uBACAzL,IAAA8C,SAAAgU,GACA/W,KAAAC,SAEA,IAAAkoC,EAAAloC,EAAA,GACAmoC,EAAAnoC,EAAA,GACAooC,EAAApoC,EAAA,GACAqoC,EAAAroC,EAAA,GAEA,OACA2I,IAFA,IAAAy7B,EAAA8D,EAAAC,EAAAC,EAAAC,GAGA/uB,OAAA8uB,IAGApC,UAAA,SAAAziC,GACA,IAAApD,EAAA,EACA,SAAAmoC,IACA,IAAAhpC,EAAAiE,EAAApD,KACA,YAAAb,EAsBA,WACA,IAAAipC,EAAA,GAEAC,EAAA,gEACA5oC,EAAA2D,EAAA3D,OACA,KAAAO,EAAAP,GAAA,CACA,IAAAwH,EAAA7D,EAAApD,KACAuC,EAAA0E,GAAA,EACAqhC,EAAA,GAAArhC,EACA,GAPA,KAOA1E,EACA,MAGA,GADA6lC,GAAAC,EAAA9lC,GAVA,KAWA+lC,EACA,MAEAF,GAAAC,EAAAC,GAEA,OAAAC,WAAAH,GAvCAI,GACS,KAAArpC,EAETA,IADAA,EAAAiE,EAAApD,OACA,GAAAoD,EAAApD,MAAA,QAES,KAAAb,EAITA,GADAA,GADAA,GADAA,EAAAiE,EAAApD,OACA,EAAAoD,EAAApD,OACA,EAAAoD,EAAApD,OACA,EAAAoD,EAAApD,KAESb,GAAA,IAAAA,GAAA,IACTA,EAAA,IACSA,GAAA,KAAAA,GAAA,IACT,KAAAA,EAAA,KAAAiE,EAAApD,KAAA,IACSb,GAAA,KAAAA,GAAA,KACT,KAAAA,EAAA,KAAAiE,EAAApD,KAAA,MAEA,EAAAT,EAAAqM,MAAA,yBAAAzM,EAAA,4BACAspC,KAsBA,IAAAC,EAAA,GACAr0B,EAAA,GACArU,EAAA,EAEA,IADA,IAAAC,EAAAmD,EAAA3D,OACAO,EAAAC,GAAA,CACA,IAAAgH,EAAA7D,EAAApD,GACAiH,GAAA,IACA,KAAAA,IACAA,KAAA,EAAA7D,IAAApD,IAEAqU,EAAAvT,KAAA,CAAAmG,EAAAyhC,IACAA,EAAA,KACA1oC,GAEA0oC,EAAA5nC,KAAAqnC,KAGA,OAAA9zB,GAEAmxB,WAAA,SAAAxlC,GACA,IAKAiC,EAAA6D,EALA6iC,EAAA,IAAA5E,EACAlkC,EAAAD,KAAAC,MACA8N,EAAA9N,EAAAG,MAAA,EAAAH,EAAAG,KACA4oC,EAAA,GACA3oC,EAAAD,EAEA,OAAA2N,EAAA,CACA,IAAAk7B,EAAAhpC,EAAAG,KACAkZ,EAAAlZ,GAAA2N,EAAA,GAAAk7B,EAAA,EACA,IAAA5mC,EAAA,EAAA6D,EAAA6H,EAAA,EAAmC1L,EAAA6D,IAAQ7D,EAAA,CAE3C,IADA,IAAA0U,EAAA,EACA1G,EAAA,EAAyBA,EAAA44B,IAAgB54B,EACzC0G,IAAA,EACAA,GAAA9W,EAAAG,KAEA4oC,EAAA9nC,KAAAoY,EAAAvC,GAEA1W,EAAA2oC,EAAAj7B,GAEA,IAAA1L,EAAA,EAAA6D,EAAA8iC,EAAAnpC,OAAA,EAA0CwC,EAAA6D,IAAQ7D,EAAA,CAClD,IAAA6mC,EAAAF,EAAA3mC,GACA8mC,EAAAH,EAAA3mC,EAAA,GACA0mC,EAAA9M,IAAAh8B,EAAA8C,SAAAmmC,EAAAC,IAEA,OACAvgC,IAAAmgC,EACAxvB,OAAAlZ,IAGA+lC,eAAA,SAAA7c,GAEA,IADA,IAAA7a,EAAA,GACArM,EAAA,EAAA6D,EAAAqjB,EAAAxb,MAAuC1L,EAAA6D,IAAQ7D,EAAA,CAC/C,IAAAwM,EAAA0a,EAAAle,IAAAhJ,GACAqM,EAAAxN,MAAA,EAAAvB,EAAA8L,eAAAoD,IAEA,OAAAH,GAEA23B,iBAAA,SAAA9c,GAEA,IADA,IAAA4c,EAAA,IAAA/B,EACA/hC,EAAA,EAAA6D,EAAAqjB,EAAAxb,MAAuC1L,EAAA6D,IAAQ7D,EAAA,CAC/C,IAAAN,EAAAwnB,EAAAle,IAAAhJ,GACA8jC,EAAAlK,KAAA,EAAAt8B,EAAA8L,eAAA1J,IAEA,OAAAokC,GAEAD,WAAA,SAAAkD,EAAA5lC,EAAA2iC,GAEA,IADA,IAAAkD,EAAA,IAAAD,EAAAjD,GACA9jC,EAAA,EAAA6D,EAAA1C,EAAA3D,OAAuCwC,EAAA6D,IAAQ7D,EAAA,CAC/C,IAAAinC,EAAA9lC,EAAAnB,GACAoM,EAAA66B,EAAA,GACA/pC,EAAA+pC,EAAA,GACAD,EAAAE,SAAA96B,EAAAlP,GAEA,OAAA8pC,GAEAG,gBAAA,SAAAxL,EAAAj8B,EAAA8lC,EAAA9B,GACA,IAAAhkC,GAAAi8B,EAAAyL,UA1aA,GA2aA,SAKA,IAHA,IAAAC,EAAA1L,EAAA0L,UACAtE,EAAApH,EAAAoH,MACAvlC,EAAAkC,EAAAlC,OACAwQ,EAAA,EAAqBA,EAAAxQ,GAAY,CACjC,IAAAN,EAAAwC,EAAAsO,KACAs5B,EAAA,KACA,QAAApqC,EAAA,CACA,IAAAklB,EAAA1iB,EAAAsO,KACA,IAAAoU,GACA1iB,EAAAsO,EAAA,OACAtO,EAAAsO,EAAA,MACAq5B,EAAA,GAEAC,EAAA1E,EAAAxgB,QAES,QAAAllB,EACT6lC,EAAAsE,IAAA3nC,EAAAsO,IAAA,GAAAtO,EAAAsO,EAAA,YACAA,GAAA,EACAq5B,SACS,QAAAnqC,EAAA,CACT,GAAAmqC,GAAA,IACAA,GAAA,EACA1pC,KAAAulC,qBAEA,OADAvH,EAAA4L,KAAAxE,EAAAjR,MAAAuV,IAAA,IACA,EAGAC,EAAAhF,EAAAplC,QACS,GAAAA,GAAA,IAAAA,GAAA,IACT6lC,EAAAsE,GAAAnqC,EAAA,IACAmqC,SACS,GAAAnqC,GAAA,KAAAA,GAAA,IACT6lC,EAAAsE,GAAAnqC,EAAA,KAAAA,EAAA,QAAAwC,EAAAsO,GAAA,MAAA9Q,EAAA,QAAAwC,EAAAsO,GAAA,IACAA,IACAq5B,SACS,SAAAnqC,EACT6lC,EAAAsE,IAAA3nC,EAAAsO,IAAA,GAAAtO,EAAAsO,EAAA,OAAAtO,EAAAsO,EAAA,MAAAtO,EAAAsO,EAAA,UACAA,GAAA,EACAq5B,SACS,QAAAnqC,GAAA,KAAAA,EACTy+B,EAAA6L,OAAAH,GAAA,EACAr5B,GAAA2tB,EAAA6L,MAAA,KACAH,GAAA,EACAC,EAAAhF,EAAAplC,OACS,SAAAA,GAAA,KAAAA,EAAA,CACT,IAAAwoC,EAMA,KAJAA,EADA,KAAAxoC,EACAsoC,EAEA9B,GAKA,OAFA4D,EAAAhF,EAAAplC,IACA,EAAAI,EAAAqM,MAAA,0BAAA29B,EAAA/E,KACA,EAEA,IAAAkF,EAAA,MACA/B,EAAAh6B,MAAA,KACA+7B,EAAA,IACW/B,EAAAh6B,MAAA,QACX+7B,EAAA,MAEA,IAAAC,EAAA3E,IAAAsE,GAAAI,EACA,GAAAC,EAAA,GAAAA,GAAAhC,EAAAh6B,OAAAkN,MAAA8uB,GAGA,OAFAJ,EAAAhF,EAAAplC,IACA,EAAAI,EAAAqM,MAAA,+BAAA29B,EAAA/E,KACA,EAKA,GAHA5G,EAAA0L,YACA1L,EAAAyL,aACAzpC,KAAAwpC,gBAAAxL,EAAA+J,EAAA18B,IAAA0+B,GAAAlC,EAAA9B,GAEA,SAEA/H,EAAAyL,YACAC,EAAA1L,EAAA0L,UACA,SACS,QAAAnqC,EAET,OADAy+B,EAAA0L,aACA,EAEAC,EAAAhF,EAAAplC,GAEA,GAAAoqC,EAAA,CAIA,GAHAA,EAAA7E,OACA9G,EAAA6L,OAAAH,GAAA,GAEA,QAAAC,IACA3L,EAAAgH,YAAA0E,EAAAC,EAAAhjC,IAEA,OADA,EAAAhH,EAAAqM,MAAA,6BAAA29B,EAAA/E,GAAA,aAAsF8E,EAAA,eAAAC,EAAAhjC,MACtF,EAGAq3B,EAAAgM,oBAAAL,EAAA9E,gBACA7G,EAAAgM,oBAAA,GACAN,GAAAC,EAAAhjC,MACA,GAAAgjC,EAAA7E,KACA4E,GAAA,EACaA,EAAA,IACb,EAAA/pC,EAAAqM,MAAA,wDAEA09B,EAAA,GAAAtE,EAAAsE,EAAA,QACA1L,EAAAra,MAAAyhB,EAAAsE,EAAA,KAGA,eAAAC,GACA,YAAAA,GACAA,EAAAxE,QAAAC,EAAAsE,GAEAA,GAAAC,EAAAzE,YACWyE,EAAA9E,cACX6E,EAAA,EACWC,EAAA5E,YACX2E,EAAA,EACA1L,EAAAgH,YAAA,GACW2E,EAAA3E,aACX0E,EAAA,EACA1L,EAAAgH,YAAA,EACAhH,EAAAgM,oBAAA,IAKA,OADAhM,EAAA0L,aACA,GAEA/B,iBAAA,SAAA71B,GAWA,IAVA,IAAA81B,EAAA91B,EAAA81B,YACAC,EAAA/1B,EAAA+1B,eACA9B,EAAAj0B,EAAAi0B,gBACAwB,EAAAz1B,EAAAy1B,SACAF,EAAAv1B,EAAAu1B,QACAS,EAAAh2B,EAAAg2B,YAEAE,EAAA,GACAC,EAAA,GACAl6B,EAAA65B,EAAA75B,MACA1L,EAAA,EAAqBA,EAAA0L,EAAW1L,IAAA,CAChC,IAAA4nC,EAAArC,EAAAv8B,IAAAhJ,GACA27B,EAAA,CACAyL,UAAA,EACAC,UAAA,EACAtE,MAAA,GACAJ,YAAA,EACA6E,MAAA,EACAG,oBAAA,EACAJ,KAAA,KACAjmB,MAAA,MAEAumB,GAAA,EACAC,EAAA,KACAC,EAAAtC,EACA,GAAAP,GAAAF,EAAAxnC,OAAA,CACA,IAAAwqC,EAAA9C,EAAA+C,WAAAjoC,IACA,IAAAgoC,KACA,EAAA1qC,EAAAqM,MAAA,oCACAk+B,GAAA,GAEAG,GAAAhD,EAAAxnC,UACA,EAAAF,EAAAqM,MAAA,qCACAk+B,GAAA,GAEAA,IAEAC,GADAC,EAAA/C,EAAAgD,GAAAvC,aACAC,iBAESF,IACTsC,EAAAtC,GAKA,GAHAqC,IACAA,EAAAlqC,KAAAwpC,gBAAAxL,EAAAiM,EAAAE,EAAApE,IAEA,OAAA/H,EAAAra,MAAA,CACA,IAAA4mB,EAAAH,EAAA1D,UAAA,iBACAuB,EAAA5lC,GAAAkoC,EAAAvM,EAAAra,UACS,CACT,IAAA6mB,EAAAJ,EAAA1D,UAAA,iBACAuB,EAAA5lC,GAAAmoC,EAEA,OAAAxM,EAAA4L,OACA5B,EAAA3lC,GAAA27B,EAAA4L,MAEAM,GACAtC,EAAAnmC,IAAAY,EAAA,IAAAnC,WAAA,OAGA,OACA0nC,cACAI,QACAC,WAIAwC,uBAAA,SAAAC,GACA,IAAA5C,EAAA9nC,KAAAkmC,WAAAlC,EAAA,GAAA0G,EAAAvE,SACAuE,EAAAnB,SAAA,UACAmB,EAAA5C,eAEAxB,iBAAA,SAAAoE,GACA,GAAAA,EAAAlE,QAAA,YAIA,IAAAmE,EAAAD,EAAAhE,UAAA,WACA,GAAA19B,MAAAC,QAAA0hC,IAAA,IAAAA,EAAA9qC,OAAA,CAIA,IAAAs4B,EAAAwS,EAAA,GACA5zB,EAAA4zB,EAAA,GACA,OAAAxS,GAAAphB,GAAA/W,KAAAC,MAAAJ,OACAG,KAAAyqC,uBAAAC,OADA,CAIA,IAAAE,EAAA7zB,EAAAohB,EACA0S,EAAA7qC,KAAAC,MAAA8C,SAAAgU,EAAA6zB,GACApnC,EAAAxD,KAAAimC,UAAA4E,GACA/C,EAAA9nC,KAAAkmC,WAAAlC,EAAAxgC,EAAAknC,EAAAvE,SAEA,GADAuE,EAAA5C,cACAA,EAAApB,UAAA,UAGA,IAAAoE,EAAAhD,EAAApB,UAAA,SACAqE,EAAAh0B,EAAA+zB,EACA,OAAAA,GAAAC,GAAA/qC,KAAAC,MAAAJ,OACAG,KAAAyqC,uBAAAC,OADA,CAIA,IAAA3C,EAAA/nC,KAAA4lC,WAAAmF,GACAjD,EAAAC,aAAAn/B,YAxBA8hC,EAAAM,aAAA,gBALAhrC,KAAAyqC,uBAAAC,IA+BApD,cAAA,SAAAlnC,EAAAP,EAAAsmC,EAAA8E,GACA,OAAA7qC,EACA,WAAA8jC,GAAA,EAAAgH,EAAAC,UAAA1G,EAAA2G,iBACO,OAAAhrC,EACP,WAAA8jC,GAAA,EAAAgH,EAAAG,OAAA5G,EAAA6G,eACO,OAAAlrC,EACP,WAAA8jC,GAAA,EAAAgH,EAAAK,cAAA9G,EAAA+G,qBAEA,IAIA5G,EAAA72B,EAAA1L,EAJApC,EAAAD,KAAAC,MACAE,EAAAC,EACAqrC,EAAAxrC,EAAAG,KACAymC,EAAA,YAGA,OADAhnC,GAAA,EACA4rC,GACA,OACA,IAAAppC,EAAA,EAAqBA,EAAAxC,EAAYwC,IACjCuiC,EAAA3kC,EAAAG,MAAA,EAAAH,EAAAG,KACAymC,EAAA3lC,KAAA+pC,EAAArG,EAAAuB,EAAA96B,IAAAu5B,IAEA,MACA,OACA,KAAAiC,EAAAhnC,WAGA,IAFA+kC,EAAA3kC,EAAAG,MAAA,EAAAH,EAAAG,KACA2N,EAAA9N,EAAAG,KACAiC,EAAA,EAAuBA,GAAA0L,EAAY1L,IACnCwkC,EAAA3lC,KAAA+pC,EAAArG,IAAAuB,EAAA96B,IAAAu5B,MAGA,MACA,OACA,KAAAiC,EAAAhnC,WAGA,IAFA+kC,EAAA3kC,EAAAG,MAAA,EAAAH,EAAAG,KACA2N,EAAA9N,EAAAG,MAAA,EAAAH,EAAAG,KACAiC,EAAA,EAAuBA,GAAA0L,EAAY1L,IACnCwkC,EAAA3lC,KAAA+pC,EAAArG,IAAAuB,EAAA96B,IAAAu5B,MAGA,MACA,QACA,UAAAjlC,EAAA2K,YAAA,0BAEA,IAAAjK,EAAAD,EACAsrC,EAAAzrC,EAAA8C,SAAA5C,EAAAE,GACA,WAAA6jC,GAAA,EAAAuH,EAAA5E,EAAA6E,IAEAjE,cAAA,SAAArnC,EAAAklC,EAAAa,EAAAU,GACA,IAGA4E,EAAAppC,EAAA6D,EAHAsY,EAAApf,OAAAsE,OAAA,MACAzD,EAAAD,KAAAC,MACA0rC,GAAA,EAEAD,EAAA,KASA,OAAAtrC,GAAA,IAAAA,EAAA,CACAurC,GAAA,EACAF,EAAArrC,EACA,IAAAwrC,EAAAxrC,EAAAskC,EAAAmH,eAAAnH,EAAAoH,iBACA,IAAAzpC,EAAA,EAAA6D,EAAA2gC,EAAAhnC,OAAwCwC,EAAA6D,EAAQ7D,IAAA,CAChD,IAAAknB,EAAAqiB,EAAA1kC,QAAA2/B,EAAAxkC,KACA,IAAAknB,IACA/K,EAAA+K,GAAAlnB,QAGO,CACP,IAAA0pC,EAAA3rC,EAEA,YADAqrC,EAAAxrC,EAAAG,OAEA,OACA,IAAA4rC,EAAA/rC,EAAAG,KACA,IAAAiC,EAAA,EAAuBA,GAAA2pC,EAAkB3pC,IACzCmc,EAAAve,EAAAG,MAAAiC,EAEA,MACA,OACA,IAAA4pC,EAAAhsC,EAAAG,KACA8rC,EAAA,EACA,IAAA7pC,EAAA,EAAuBA,EAAA4pC,EAAiB5pC,IAGxC,IAFA,IAAAlC,EAAAF,EAAAG,KACAoxB,EAAAvxB,EAAAG,KACAiQ,EAAAlQ,EAAiCkQ,GAAAlQ,EAAAqxB,EAAmBnhB,IACpDmO,EAAAnO,GAAA67B,IAGA,MACA,QACA,UAAAvsC,EAAA2K,YAAA,4BAAAmhC,EAAA,WAEA,IAAAlqB,EAAAnhB,EACA,IAAAqrC,IACAxrC,EAAA8rC,IAAA,IA5CA,WACA,IAAAI,EAAAlsC,EAAAG,KACA,IAAAiC,EAAA,EAAmBA,EAAA8pC,EAAsB9pC,IAAA,CACzC,IAAAye,EAAA7gB,EAAAG,KACAgsC,GAAAnsC,EAAAG,MAAA,QAAAH,EAAAG,MACAoe,EAAAsC,GAAA+lB,EAAA3/B,QAAAi/B,EAAA96B,IAAA+gC,KAwCAC,IAEAX,EAAAzrC,EAAA8C,SAAAgpC,EAAAxqB,GAGA,WAAA+qB,EAAAX,EADAF,GAAA,IACAjtB,EAAAktB,IAEAlE,cAAA,SAAApnC,EAAAP,GACA,IAIA0sC,EACAlqC,EALAlC,EAAAC,EACAH,EAAAD,KAAAC,MACAwrC,EAAAxrC,EAAAG,KACAmnC,EAAA,GAGAiF,GAAA,EACA,OAAAf,GACA,OACA,IAAAppC,EAAA,EAAqBA,EAAAxC,IAAYwC,EAAA,CACjC,IAAAuiC,EAAA3kC,EAAAG,KACAmnC,EAAArmC,KAAA0jC,GAEA2H,EAAAtsC,EAAA8C,SAAA5C,EAAAC,GACA,MACA,OACA,IAAA6rC,EAAAhsC,EAAAG,MAAA,EAAAH,EAAAG,KACA,IAAAiC,EAAA,EAAqBA,EAAA4pC,IAAiB5pC,EAAA,CACtC,IAAAwU,EAAA5W,EAAAG,MAAA,EAAAH,EAAAG,KACA,IAAAiC,GAAA,IAAAwU,KACA,EAAAlX,EAAAqM,MAAA,mFACAwgC,GAAA,EACA31B,EAAA,GAIA,IAFA,IAAAwzB,EAAApqC,EAAAG,KACAoJ,EAAAvJ,EAAAG,IAAA,EAAAH,EAAAG,EAAA,GACAiQ,EAAAwG,EAA+BxG,EAAA7G,IAAU6G,EACzCk3B,EAAArmC,KAAAmpC,GAGAjqC,GAAA,EACAmsC,EAAAtsC,EAAA8C,SAAA5C,EAAAC,GACAosC,IACAD,EAAA,GAAAA,EAAA,MAEA,MACA,QACA,UAAA5sC,EAAA2K,YAAA,kCAAAmhC,EAAA,MAEA,GAAAlE,EAAA1nC,WACA,UAAAF,EAAA2K,YAAA,qCAEA,WAAAmiC,EAAAlF,EAAAgF,KAGAhI,EAvyBA,GAyyBAD,EAAA,WAcA,OAbA,WACAtkC,KAAAylC,OAAA,KACAzlC,KAAA0O,MAAA,GACA1O,KAAAka,QAAA,KACAla,KAAAmmC,QAAA,IAAA/B,EACApkC,KAAA+lC,gBAAA,KACA/lC,KAAAwe,SAAA,KACAxe,KAAA6mC,QAAA,KACA7mC,KAAA4nC,YAAA,KACA5nC,KAAAqnC,QAAA,GACArnC,KAAAunC,SAAA,KACAvnC,KAAAumC,WAAA,GAZA,GAgBAlC,EAAA,WAOA,OANA,SAAA8D,EAAAC,EAAAC,EAAAC,GACAtoC,KAAAmoC,QACAnoC,KAAAooC,QACApoC,KAAAqoC,UACAroC,KAAAsoC,WALA,GASAlE,EAAA,WACA,SAAAA,IACApkC,KAAAmmC,QAAA,GAmBA,OAjBA/B,EAAAvjC,UAAA,CACAwK,IAAA,SAAAke,GACA,OAAAA,GAAA,GAAAA,GAAA,IACAib,EAAAjb,GAEAA,EAAA,KAAAvpB,KAAAmmC,QAAAtmC,OACAG,KAAAmmC,QAAA5c,EAAA,KAEAib,EAAA,IAEAvI,IAAA,SAAA18B,GACAS,KAAAmmC,QAAAjlC,KAAA3B,IAEAwO,YACA,OAAA/N,KAAAmmC,QAAAtmC,SAGAukC,EArBA,GAuBAD,EAAA,WACA,SAAAA,IACAnkC,KAAA0sC,QAAA,GACA1sC,KAAAH,OAAA,EAkBA,OAhBAskC,EAAAtjC,UAAA,CACAo7B,IAAA,SAAAl6B,GACA/B,KAAAH,QAAAkC,EAAAlC,OACAG,KAAA0sC,QAAAxrC,KAAAa,IAEAN,IAAA,SAAA8nB,EAAAxnB,GACA/B,KAAAH,QAAAkC,EAAAlC,OAAAG,KAAA0sC,QAAAnjB,GAAA1pB,OACAG,KAAA0sC,QAAAnjB,GAAAxnB,GAEAsJ,IAAA,SAAAke,GACA,OAAAvpB,KAAA0sC,QAAAnjB,IAEAxb,YACA,OAAA/N,KAAA0sC,QAAA7sC,SAGAskC,EArBA,GAuBAwI,EAAA,WACA,SAAAA,EAAAC,EAAAzG,GACAnmC,KAAA6sC,aAAAD,EAAAC,aACA7sC,KAAA8sC,aAAAF,EAAAE,aACA9sC,KAAA+sC,SAAAH,EAAAG,SACA/sC,KAAAgtC,MAAAJ,EAAAI,MACAhtC,KAAAitC,QAAAL,EAAAK,QACAjtC,KAAAktC,MAAAN,EAAAM,MACAltC,KAAAmmC,UACAnmC,KAAAmtC,OAAA/tC,OAAAsE,OAAA,MAoEA,OAlEAipC,EAAA9rC,UAAA,CACA0oC,SAAA,SAAA96B,EAAAlP,GACA,KAAAkP,KAAAzO,KAAA6sC,cACA,SAEA,IAAAO,EAAA7tC,EAAAM,OACA,OAAAutC,EACA,SAEA,QAAA/qC,EAAA,EAAqBA,EAAA+qC,EAAiB/qC,IACtC,GAAA4Y,MAAA1b,EAAA8C,IAEA,OADA,EAAA1C,EAAAqM,MAAA,2BAAAzM,EAAA,cAAAkP,EAAA,OACA,EAGA,IAAArD,EAAApL,KAAAgtC,MAAAv+B,GAKA,MAJA,QAAArD,GAAA,QAAAA,GAAA,WAAAA,IACA7L,IAAA,IAEAS,KAAAmtC,OAAA1+B,GAAAlP,GACA,GAEA8tC,UAAA,SAAAx+B,EAAAtP,GACA,KAAAsP,KAAA7O,KAAA8sC,cACA,UAAAntC,EAAA2K,YAAA,4BAAAuE,EAAA,KAEA7O,KAAAmtC,OAAAntC,KAAA8sC,aAAAj+B,IAAAtP,GAEAinC,QAAA,SAAA33B,GACA,OAAA7O,KAAA8sC,aAAAj+B,KAAA7O,KAAAmtC,QAEAzG,UAAA,SAAA73B,GACA,KAAAA,KAAA7O,KAAA8sC,cACA,UAAAntC,EAAA2K,YAAA,2BAAAuE,EAAA,KAEA,IAAAJ,EAAAzO,KAAA8sC,aAAAj+B,GACA,OAAAJ,KAAAzO,KAAAmtC,OAGAntC,KAAAmtC,OAAA1+B,GAFAzO,KAAA+sC,SAAAt+B,IAIAu8B,aAAA,SAAAn8B,UACA7O,KAAAmtC,OAAAntC,KAAA8sC,aAAAj+B,MAGA89B,EAAAW,aAAA,SAAAC,GASA,IARA,IAAAX,EAAA,CACAC,aAAA,GACAC,aAAA,GACAC,SAAA,GACAC,MAAA,GACAC,QAAA,GACAC,MAAA,IAEA7qC,EAAA,EAAA6D,EAAAqnC,EAAA1tC,OAAuCwC,EAAA6D,IAAQ7D,EAAA,CAC/C,IAAAyU,EAAAy2B,EAAAlrC,GACAoM,EAAAzF,MAAAC,QAAA6N,EAAA,KAAAA,EAAA,UAAAA,EAAA,MAAAA,EAAA,GACA81B,EAAAC,aAAAp+B,GAAAqI,EAAA,GACA81B,EAAAE,aAAAh2B,EAAA,IAAArI,EACAm+B,EAAAI,MAAAv+B,GAAAqI,EAAA,GACA81B,EAAAG,SAAAt+B,GAAAqI,EAAA,GACA81B,EAAAK,QAAAx+B,GAAAzF,MAAAC,QAAA6N,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACA81B,EAAAM,MAAAhsC,KAAAuN,GAEA,OAAAm+B,GAEAD,EA7EA,GA+EA1I,EAAA,WACA,IAAAsJ,EAAA,qoCACAX,EAAA,KACA,SAAA3I,EAAAkC,GACA,OAAAyG,IACAA,EAAAD,EAAAW,aAAAC,IAEAZ,EAAA1T,KAAAj5B,KAAA4sC,EAAAzG,GACAnmC,KAAA8nC,YAAA,KAGA,OADA7D,EAAApjC,UAAAzB,OAAAsE,OAAAipC,EAAA9rC,WACAojC,EAXA,GAaAD,EAAA,WACA,IAAAuJ,EAAA,sjBACAX,EAAA,KACA,SAAA5I,EAAAmC,GACA,OAAAyG,IACAA,EAAAD,EAAAW,aAAAC,IAEAZ,EAAA1T,KAAAj5B,KAAA4sC,EAAAzG,GACAnmC,KAAA+nC,WAAA,KAGA,OADA/D,EAAAnjC,UAAAzB,OAAAsE,OAAAipC,EAAA9rC,WACAmjC,EAXA,GAaAkH,EAAA,CACAC,UAAA,EACAE,OAAA,EACAE,cAAA,GAEArH,EAAA,WAOA,OANA,SAAAyH,EAAAF,EAAA5E,EAAA6E,GACA1rC,KAAA2rC,aACA3rC,KAAAyrC,SACAzrC,KAAA6mC,UACA7mC,KAAA0rC,OALA,GASAY,EAAA,WAOA,OANA,SAAAX,EAAAF,EAAAjtB,EAAAktB,GACA1rC,KAAA2rC,aACA3rC,KAAAyrC,SACAzrC,KAAAwe,WACAxe,KAAA0rC,OALA,GASAe,EAAA,WACA,SAAAA,EAAAlF,EAAAmE,GACA1rC,KAAAunC,WACAvnC,KAAA0rC,MAUA,OARAe,EAAA5rC,UAAA,CACAypC,WAAA,SAAAkD,GACA,OAAAA,EAAA,GAAAA,GAAAxtC,KAAAunC,SAAA1nC,QACA,EAEAG,KAAAunC,SAAAiG,KAGAf,EAbA,GAeAgB,EAAA,WACA,SAAAA,IACAztC,KAAAgpC,QAAA5pC,OAAAsE,OAAA,MA0CA,OAxCA+pC,EAAA5sC,UAAA,CACA6sC,WAAA,SAAAj/B,GACA,OAAAA,KAAAzO,KAAAgpC,SAEA2E,MAAA,SAAAl/B,EAAAm/B,GACA,GAAAn/B,KAAAzO,KAAAgpC,QACA,UAAArpC,EAAA2K,YAAA,gCAAAmE,GAEAzO,KAAAgpC,QAAAv6B,GAAAm/B,GAEA72B,OAAA,SAAAxX,GACA,QAAAkP,KAAAzO,KAAAgpC,QACAhpC,KAAAgpC,QAAAv6B,IAAAlP,GAGAsuC,iBAAA,SAAAp/B,EAAA0+B,EAAA5S,GACA,KAAA9rB,KAAAzO,KAAAgpC,SACA,UAAArpC,EAAA2K,YAAA,4BAAAmE,GAKA,IAHA,IAAA1M,EAAAw4B,EAAAx4B,KACA+rC,EAAA9tC,KAAAgpC,QAAAv6B,GAEApM,EAAA,EAAA6D,EAAAinC,EAAAttC,OAAyCwC,EAAA6D,IAAQ7D,EAAA,CACjD,IAAA0rC,EAFA,EAEA1rC,EAAAyrC,EACAE,EAAAD,EAAA,EACAE,EAAAF,EAAA,EACAG,EAAAH,EAAA,EACAI,EAAAJ,EAAA,EACA,QAAAhsC,EAAAgsC,IAAA,IAAAhsC,EAAAisC,IAAA,IAAAjsC,EAAAksC,IAAA,IAAAlsC,EAAAmsC,IAAA,IAAAnsC,EAAAosC,GACA,UAAAxuC,EAAA2K,YAAA,0CAEA,IAAA/K,EAAA4tC,EAAA9qC,GACAN,EAAAgsC,GAAA,GACAhsC,EAAAisC,GAAAzuC,GAAA,OACAwC,EAAAksC,GAAA1uC,GAAA,OACAwC,EAAAmsC,GAAA3uC,GAAA,MACAwC,EAAAosC,GAAA,IAAA5uC,KAIAkuC,EA5CA,GA8CA1J,EAAA,WACA,SAAAA,EAAAyB,GACAxlC,KAAAwlC,MAoUA,OAlUAzB,EAAAljC,UAAA,CACAutC,QAAA,WACA,IAAA5I,EAAAxlC,KAAAwlC,IACAjL,EAAA,CACAx4B,KAAA,GACAlC,OAAA,EACAo8B,IAAA,SAAAl6B,GACA/B,KAAA+B,KAAA/B,KAAA+B,KAAAssC,OAAAtsC,GACA/B,KAAAH,OAAAG,KAAA+B,KAAAlC,SAGA4lC,EAAAzlC,KAAAsuC,cAAA9I,EAAAC,QACAlL,EAAA0B,IAAAwJ,GACA,IAAAE,EAAA3lC,KAAAuuC,iBAAA/I,EAAA92B,OAEA,GADA6rB,EAAA0B,IAAA0J,GACAH,EAAAe,WACAf,EAAAtrB,QAAAssB,QAAA,eACA,IAAAgI,EAAAhJ,EAAAtrB,QAAAwsB,UAAA,cACAlB,EAAAtrB,QAAA8wB,aAAA,cACA,QAAA3oC,EAAA,EAAA6D,EAAAs/B,EAAA6B,QAAAxnC,OAAkDwC,EAAA6D,EAAQ7D,IAAA,CAC1D,IAAAosC,EAAAjJ,EAAA6B,QAAAhlC,GACAqsC,EAAAF,EAAAra,MAAA,GACAsa,EAAAjI,QAAA,gBACAkI,EAAA/uC,EAAAkQ,KAAAihB,UAAA4d,EAAAD,EAAA/H,UAAA,gBAEA+H,EAAApB,UAAA,aAAAqB,IAIA,IAAAC,EAAA3uC,KAAA4uC,gBAAA,CAAApJ,EAAAtrB,SAAAqgB,EAAA16B,OAAA2lC,EAAAe,WACAhM,EAAA0B,IAAA0S,EAAApU,QACA,IAAAsU,EAAAF,EAAAG,SAAA,GACAhJ,EAAA9lC,KAAA+uC,mBAAAvJ,EAAAW,iBACA5L,EAAA0B,IAAA6J,GACA,IAAAC,EAAA/lC,KAAAgvC,aAAAxJ,EAAAO,iBAEA,GADAxL,EAAA0B,IAAA8J,GACAP,EAAAhnB,UAAAgnB,EAAAtrB,QAAAssB,QAAA,YACA,GAAAhB,EAAAhnB,SAAAmtB,WACAkD,EAAAhB,iBAAA,YAAArI,EAAAhnB,SAAAitB,QAAAlR,OACS,CACT,IAAA/b,EAAAxe,KAAAivC,gBAAAzJ,EAAAhnB,UACAqwB,EAAAhB,iBAAA,YAAAtT,EAAA16B,QAAA06B,GACAA,EAAA0B,IAAAzd,GAGA,GAAAgnB,EAAAqB,SAAArB,EAAAtrB,QAAAssB,QAAA,WACA,GAAAhB,EAAAqB,QAAA8E,WACAkD,EAAAhB,iBAAA,WAAArI,EAAAqB,QAAA4E,QAAAlR,OACS,CACT,IAAAsM,EAAA7mC,KAAAkvC,eAAA1J,EAAAqB,SACAgI,EAAAhB,iBAAA,WAAAtT,EAAA16B,QAAA06B,GACAA,EAAA0B,IAAA4K,GAGA,IAAAe,EAAA5nC,KAAAmvC,mBAAA3J,EAAAoC,aAGA,GAFAiH,EAAAhB,iBAAA,eAAAtT,EAAA16B,QAAA06B,GACAA,EAAA0B,IAAA2L,GACApC,EAAAe,UAAA,CACAsI,EAAAhB,iBAAA,YAAAtT,EAAA16B,QAAA06B,GACA,IAAAgN,EAAAvnC,KAAAovC,gBAAA5J,EAAA+B,SAAAmE,KACAnR,EAAA0B,IAAAsL,GACAoH,EAAA3uC,KAAA4uC,gBAAApJ,EAAA6B,QAAA9M,EAAA16B,QAAA,GACAgvC,EAAAhB,iBAAA,WAAAtT,EAAA16B,QAAA06B,GACAA,EAAA0B,IAAA0S,EAAApU,QACA,IAAA8U,EAAAV,EAAAG,SACA9uC,KAAAsvC,oBAAA9J,EAAA6B,QAAAgI,EAAA9U,GAIA,OAFAv6B,KAAAsvC,oBAAA,CAAA9J,EAAAtrB,SAAA,CAAA20B,GAAAtU,GACAA,EAAA0B,IAAA,KACA1B,EAAAx4B,MAEAwtC,aAAA,SAAAhwC,GACA,OAAAopC,WAAAppC,KAAAub,SAAAvb,EAAA,KAAA0b,MAAA1b,GAGAS,KAAAwvC,YAAAjwC,GAFAS,KAAAyvC,cAAAlwC,IAIAiwC,YAAA,SAAAp8B,GACA,IAAA7T,EAAA6T,EAAAoH,WACArB,EAAA,gDAAiD/E,KAAA7U,GACjD,GAAA4Z,EAAA,CACA,IAAAiY,EAAAuX,WAAA,OAAAxvB,EAAA,IAAAA,EAAA,MAAAA,EAAA,GAAAtZ,SACAN,GAAAkB,KAAAivC,MAAAt8B,EAAAge,MAAA5W,WAEA,IACAnY,EAAA6D,EADAypC,EAAA,GAEA,IAAAttC,EAAA,EAAA6D,EAAA3G,EAAAM,OAAoCwC,EAAA6D,IAAQ7D,EAAA,CAC5C,IAAA+E,EAAA7H,EAAA8C,GAEAstC,GADA,MAAAvoC,EACA,MAAA7H,IAAA8C,GAAA,QACS,MAAA+E,EACT,IACS,MAAAA,EACT,IAEAA,EAIA,IAAAotB,EAAA,KACA,IAAAnyB,EAAA,EAAA6D,GAFAypC,GAAA,EAAAA,EAAA9vC,OAAA,UAEAA,OAAsCwC,EAAA6D,EAAQ7D,GAAA,EAC9CmyB,EAAAtzB,KAAA4Z,SAAA60B,EAAAC,OAAAvtC,EAAA,QAEA,OAAAmyB,GAEAib,cAAA,SAAAlwC,GAeA,OAbAA,IAAA,KAAAA,GAAA,IACA,CAAAA,EAAA,KACOA,GAAA,KAAAA,GAAA,KAEP,OADAA,GAAA,MACA,OAAAA,GACOA,IAAA,MAAAA,IAAA,IAEP,OADAA,KAAA,MACA,OAAAA,GACOA,IAAA,OAAAA,GAAA,MACP,IAAAA,GAAA,UAAAA,GAEA,IAAAA,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IAIA+uC,cAAA,SAAA7I,GACA,OAAAA,EAAA0C,MAAA1C,EAAA2C,MAAA3C,EAAA4C,QAAA5C,EAAA6C,UAEAiG,iBAAA,SAAA7/B,GAEA,IADA,IAAAi3B,EAAA,IAAAxB,EACA9hC,EAAA,EAAA6D,EAAAwI,EAAA7O,OAAwCwC,EAAA6D,IAAQ7D,EAAA,CAIhD,IAHA,IAAAwM,EAAAH,EAAArM,GACAxC,EAAAY,KAAAkG,IAAAkI,EAAAhP,OAAA,KACAgwC,EAAA,IAAA7mC,MAAAnJ,GACAwQ,EAAA,EAAuBA,EAAAxQ,EAAYwQ,IAAA,CACnC,IAAAy/B,EAAAjhC,EAAAwB,IACAy/B,EAAA,KAAAA,EAAA,WAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAqH,MAAAA,GAAgB,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,KACrIA,EAAA,KAEAD,EAAAx/B,GAAAy/B,EAGA,MADAD,IAAAt/B,KAAA,OAEAs/B,EAAA,iBAEAlK,EAAA1J,KAAA,EAAAt8B,EAAA8hC,eAAAoO,IAEA,OAAA7vC,KAAAgvC,aAAArJ,IAEAiJ,gBAAA,SAAAmB,EAAAlwC,EAAAmwC,GAGA,IAFA,IAAAX,EAAA,GACAnI,EAAA,IAAA/C,EACA9hC,EAAA,EAAA6D,EAAA6pC,EAAAlwC,OAAwCwC,EAAA6D,IAAQ7D,EAAA,CAChD,IAAA+kC,EAAA2I,EAAA1tC,GACA2tC,IACA5I,EAAA4D,aAAA,kBACA5D,EAAA4D,aAAA,mBACA5D,EAAA4D,aAAA,eACA5D,EAAA4D,aAAA,YACA5D,EAAA4D,aAAA,YAEA,IAAAiF,EAAA,IAAAxC,EACAyC,EAAAlwC,KAAAmwC,YAAA/I,EAAA6I,GACAZ,EAAAnuC,KAAA+uC,GACA/I,EAAAjL,IAAAiU,GACAD,EAAAl5B,OAAAlX,GAGA,OACAivC,SAAAO,EACA9U,OAHA2M,EAAAlnC,KAAAgvC,aAAA9H,EAAAmI,KAMAC,oBAAA,SAAAS,EAAAjB,EAAAvU,GACA,QAAAl4B,EAAA,EAAA6D,EAAA6pC,EAAAlwC,OAAwCwC,EAAA6D,IAAQ7D,EAAA,CAChD,IAAA+kC,EAAA2I,EAAA1tC,GACAylC,EAAAV,EAAAU,YACA,IAAAA,IAAAV,EAAAZ,QAAA,WACA,UAAA7mC,EAAA2K,YAAA,uCAEA,IAAA8lC,EAAA,IAAA3C,EACA4C,EAAArwC,KAAAmwC,YAAArI,EAAAsI,GACAnR,EAAA1E,EAAA16B,OAOA,GANAuwC,EAAAr5B,OAAAkoB,GACAoR,EAAAxwC,SACAo/B,EAAA,GAEA6P,EAAAzsC,GAAAwrC,iBAAA,WAAAwC,EAAAxwC,OAAAo/B,GAAA1E,GACAA,EAAA0B,IAAAoU,GACAvI,EAAAC,YAAAD,EAAAtB,QAAA,UACA,IAAA8J,EAAAtwC,KAAAgvC,aAAAlH,EAAAC,YACAqI,EAAAvC,iBAAA,SAAAwC,EAAAxwC,QAAA06B,GACAA,EAAA0B,IAAAqU,MAIAH,YAAA,SAAA3sC,EAAA+sC,GAGA,IAFA,IAAA/b,EAAA,GACA0Y,EAAA1pC,EAAA0pC,MACA7qC,EAAA,EAAqBA,EAAA6qC,EAAArtC,SAAkBwC,EAAA,CACvC,IAAAoM,EAAAy+B,EAAA7qC,GACA,GAAAoM,KAAAjL,EAAA2pC,OAAA,CAGA,IAAAA,EAAA3pC,EAAA2pC,OAAA1+B,GACAu+B,EAAAxpC,EAAAwpC,MAAAv+B,GAOA,GANAzF,MAAAC,QAAA+jC,KACAA,EAAA,CAAAA,IAEAhkC,MAAAC,QAAAkkC,KACAA,EAAA,CAAAA,IAEA,IAAAA,EAAAttC,OAAA,CAGA,QAAAwQ,EAAA,EAAAC,EAAA08B,EAAAntC,OAA0CwQ,EAAAC,IAAQD,EAAA,CAClD,IAAAjF,EAAA4hC,EAAA38B,GACA9Q,EAAA4tC,EAAA98B,GACA,OAAAjF,GACA,UACA,UACAopB,IAAA6Z,OAAAruC,KAAAuvC,aAAAhwC,IACA,MACA,aACA,IAAAsP,EAAArL,EAAAqpC,aAAAp+B,GACA8hC,EAAA7C,WAAA7+B,IACA0hC,EAAA5C,MAAA9+B,EAAA2lB,EAAA30B,QAEA20B,IAAA6Z,OAAA,cACA,MACA,YACA,YACA7Z,IAAA6Z,OAAAruC,KAAAuvC,aAAAhwC,IACA,QAAAsqB,EAAA,EAAA2mB,EAAArD,EAAAttC,OAAiDgqB,EAAA2mB,IAAQ3mB,EACzD2K,IAAA6Z,OAAAruC,KAAAuvC,aAAApC,EAAAtjB,KAEA,MACA,QACA,UAAAlqB,EAAA2K,YAAA,wBAAAc,IAGAopB,IAAA6Z,OAAA7qC,EAAAypC,QAAAx+B,MAEA,OAAA+lB,GAEAua,mBAAA,SAAA5I,GAEA,IADA,IAAAL,EAAA,IAAA3B,EACA9hC,EAAA,EAAA6D,EAAAigC,EAAAtmC,OAA0CwC,EAAA6D,IAAQ7D,EAClDyjC,EAAA7J,KAAA,EAAAt8B,EAAA8hC,eAAA0E,EAAA9jC,KAEA,OAAArC,KAAAgvC,aAAAlJ,IAEA2K,uBAAA,WACA,IAAA1K,EAAA/lC,KAAAwlC,IAAAO,gBACA/lC,KAAAw0B,IAAAkc,eAAA1wC,KAAAgvC,aAAAjJ,KAEAoJ,mBAAA,SAAAvH,GACA,OAAA5nC,KAAAgvC,aAAApH,IAEAsH,eAAA,SAAArI,GACA,OAAA7mC,KAAA2wC,kBAAA9J,EAAA6E,MAEAuD,gBAAA,SAAAzwB,GACA,OAAAxe,KAAA2wC,kBAAAnyB,EAAAktB,MAEA0D,gBAAA,SAAA7H,GACA,OAAAvnC,KAAA2wC,kBAAApJ,IAEAoJ,kBAAA,SAAA5uC,GAEA,IADA,IAAAyyB,EAAA,GACAnyB,EAAA,EAAA6D,EAAAnE,EAAAlC,OAAuCwC,EAAA6D,IAAQ7D,EAC/CmyB,EAAAnyB,GAAAN,EAAAM,GAEA,OAAAmyB,GAEAwa,aAAA,SAAAzlB,EAAAulB,GACAA,KAAA,GACA,IAAApC,EAAAnjB,EAAAmjB,QACA3+B,EAAA2+B,EAAA7sC,OACA,OAAAkO,EACA,cAEA,IAEA1L,EAIA4mC,EANAlnC,EAAA,CAAAgM,GAAA,UAAAA,GACA6iC,EAAA,EAEA,IAAAvuC,EAAA,EAAiBA,EAAA0L,IAAW1L,EAC5BuuC,GAAAlE,EAAArqC,GAAAxC,OAIAopC,EADA2H,EAAA,IACA,EACOA,EAAA,MACP,EACOA,EAAA,SACP,EAEA,EAEA7uC,EAAAb,KAAA+nC,GACA,IAAA8B,EAAA,EACA,IAAA1oC,EAAA,EAAiBA,EAAA0L,EAAA,EAAe1L,IAChC,IAAA4mC,EACAlnC,EAAAb,KAAA,IAAA6pC,GACS,IAAA9B,EACTlnC,EAAAb,KAAA6pC,GAAA,UAAAA,GACS,IAAA9B,EACTlnC,EAAAb,KAAA6pC,GAAA,OAAAA,GAAA,UAAAA,GAEAhpC,EAAAb,KAAA6pC,IAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,GAEA2B,EAAArqC,KACA0oC,GAAA2B,EAAArqC,GAAAxC,QAGA,IAAAwC,EAAA,EAAiBA,EAAA0L,EAAW1L,IAAA,CAC5BysC,EAAAzsC,IACAysC,EAAAzsC,GAAA0U,OAAAhV,EAAAlC,QAEA,QAAAwQ,EAAA,EAAAC,EAAAo8B,EAAArqC,GAAAxC,OAA+CwQ,EAAAC,EAAQD,IACvDtO,EAAAb,KAAAwrC,EAAArqC,GAAAgO,IAGA,OAAAtO,IAGAgiC,EAtUA,GAwUAzkC,EAAAklC,qBACAllC,EAAAilC,YACAjlC,EAAAglC,MACAhlC,EAAA+kC,YACA/kC,EAAA8kC,aACA9kC,EAAA6kC,WACA7kC,EAAA4kC,aACA5kC,EAAA2kC,aACA3kC,EAAA0kC,iBACA1kC,EAAAykC,iDC34CA3kC,OAAAC,eAAAC,EAAA,cACAC,OAAA,IAEAD,EAAAuxC,kCAAAvxC,EAAAwxC,qCAAAxxC,EAAAyxC,4BAAAzxC,EAAA0xC,gBAAA1xC,EAAA2xC,cAAA3xC,EAAA4xC,iBAAA5xC,EAAA6xC,mBAAAzxC,EAEA,IAAAC,EAAYC,EAAQ,KAEpBuxC,GAAA,EAAAxxC,EAAAyxC,uBAAA,SAAArT,GACAA,EAAA,wBACAA,EAAA,qCACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,uBACAA,EAAA,oCACAA,EAAA,iDACAA,EAAA,yCACAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,kBACAA,EAAA,+BACAA,EAAA,4CACAA,EAAA,oCACAA,EAAA,8CACAA,EAAA,iCACAA,EAAA,sCACAA,EAAA,oBACAA,EAAA,+BACAA,EAAA,4CACAA,EAAA,oCACAA,EAAA,qBACAA,EAAA,kCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,mDACAA,EAAA,sCACAA,EAAA,2CACAA,EAAA,yBACAA,EAAA,sBACAA,EAAA,mCACAA,EAAA,gDACAA,EAAA,iDACAA,EAAA,wCACAA,EAAA,yCACAA,EAAA,0BACAA,EAAA,wBACAA,EAAA,8BACAA,EAAA,0BACAA,EAAA,4BACAA,EAAA,mCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,8BACAA,EAAA,qCACAA,EAAA,iDACAA,EAAA,mDACAA,EAAA,uCACAA,EAAA,yCACAA,EAAA,2CACAA,EAAA,gCACAA,EAAA,uCACAA,EAAA,mDACAA,EAAA,6CAEAmT,GAAA,EAAAvxC,EAAAyxC,uBAAA,SAAArT,GACAA,EAAA,oBACAA,EAAA,iCACAA,EAAA,8CACAA,EAAA,sCACAA,EAAA,0BACAA,EAAA,uCACAA,EAAA,oDACAA,EAAA,4CACAA,EAAA,4BACAA,EAAA,yCACAA,EAAA,qDACAA,EAAA,6CACAA,EAAA,wBACAA,EAAA,qCACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,oCACAA,EAAA,yBACAA,EAAA,mCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,yBACAA,EAAA,mCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,iDACAA,EAAA,yCACAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,iDACAA,EAAA,yCACAA,EAAA,6BACAA,EAAA,2BAEAkT,GAAA,EAAAtxC,EAAAyxC,uBAAA,SAAArT,GACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,SACAA,EAAA,cACAA,EAAA,YACAA,EAAA,0BACAA,EAAA,WACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,eACAA,EAAA,QACAA,EAAA,SACAA,EAAA,uBACAA,EAAA,YACAA,EAAA,yBACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,WACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,wBACAA,EAAA,yBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,UACAA,EAAA,WACAA,EAAA,sBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,UACAA,EAAA,WACAA,EAAA,cACAA,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,uBACAA,EAAA,qBACAA,EAAA,WACAA,EAAA,wBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,sBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,uBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,mBACAA,EAAA,4BACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,yBACAA,EAAA,YACAA,EAAA,mBACAA,EAAA,wBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,SACAA,EAAA,kBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,QACAA,EAAA,qBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,qBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,UACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UAEAiT,GAAA,EAAArxC,EAAAyxC,uBAAA,SAAArT,GACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBAEAgT,GAAA,EAAApxC,EAAAyxC,uBAAA,SAAAraAEA+S,GAAA,EAAAnxC,EAAAyxC,uBAAA,SAAArT,GACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WAEA8S,GAAA,EAAAlxC,EAAAyxC,uBAAA,SAAArT,GACAA,EAAA,MACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WAEAz+B,EAAA6xC,gBACA7xC,EAAA4xC,mBACA5xC,EAAA2xC,gBACA3xC,EAAA0xC,kBACA1xC,EAAAyxC,8BACAzxC,EAAAwxC,uCACAxxC,EAAAuxC,uEC9tBA,IAAAO,EAA4BxxC,EAAQ,KAAgBwxC,sBACpDC,EAAAD,EAAA,SAAArT,GACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,cAuCA,IAAAuT,EAAA,EACAhwC,MAAA,EACAjB,IAAA,KACC,CACDiB,MAAA,IACAjB,IAAA,KACC,CACDiB,MAAA,IACAjB,IAAA,KACC,CACDiB,MAAA,IACAjB,IAAA,KACC,CACDiB,MAAA,IACAjB,IAAA,KACC,CACDiB,MAAA,IACAjB,IAAA,KACC,CACDiB,MAAA,IACAjB,IAAA,KACC,CACDiB,MAAA,IACAjB,IAAA,MACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,OACAjB,IAAA,QACC,CACDiB,MAAA,OACAjB,IAAA,QACC,CACDiB,MAAA,QACAjB,IAAA,SACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,OACAjB,IAAA,QACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,OACAjB,IAAA,QACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,OACAjB,IAAA,QACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,KACAjB,IAAA,MACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,KACAjB,IAAA,OACC,CACDiB,MAAA,MACAjB,IAAA,OACC,CACDiB,MAAA,OACAjB,IAAA,SAsBA,IA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,KAAA,UAAAuvB,IAEAi+B,mBACA,IAAA74C,EAAA,IAAA04C,EACA,SAAA1tD,EAAAqL,QAAAhL,KAAA,eAAA2U,KA+BA,IAAAm5C,EAAA,msBACAC,EAAA,GACA70B,GAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,EAAA,GACG,CACHrD,GAAA,EACAqD,EAAA,GACG,CACHrD,GAAA,EACAqD,EAAA,GACG,CACHrD,GAAA,EACAqD,EAAA,IACG,EACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,EAAA,GACG,CACHrD,GAAA,EACAqD,EAAA,GACG,CACHrD,GAAA,EACAqD,EAAA,IACG,EACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,EAAA,GACG,CACHrD,GAAA,EACAqD,EAAA,IACG,EACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,GAAA,EACAqD,GAAA,GACG,CACHrD,EAAA,EACAqD,GAAA,GACG,CACHrD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A,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA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AAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,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","file":"29-bd4f6b90883a8c9f67e4.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      var t1, t2, t3, t4;\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        t1 = result[j - 3];\n        t2 = result[j - 2];\n        t3 = result[j - 1];\n        t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, i, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.305';\nvar pdfjsBuild = '9c6a8801';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.305';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: inline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: inline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (VALID_TABLES.indexOf(table.tag) < 0) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;"],"sourceRoot":""}