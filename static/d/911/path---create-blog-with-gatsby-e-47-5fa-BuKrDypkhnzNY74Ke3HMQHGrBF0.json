{"data":{"markdownRemark":{"id":"6d9e2584-c0ee-5fda-92aa-27b7b8538eb7","html":"<p><a href=\"https://www.gatsbyjs.org/\">Gatsby</a>는 React를 기반으로 한 정적 사이트 생성기(Jekyll(Ruby), Hexo(Node.js), Hugo(Go) 등이 있다.)이며, PWA, Hot reloading, SSR 등 다양한 기능을 제공한다. 더 자세한 내용은 이 <a href=\"https://www.gatsbyjs.org/features/\">링크</a>에서 참고할 수 있다.</p>\n<h2>Gatsby CLI와 Gatsby 스타터 다운받기</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"hljs-text\"><code class=\"hljs-text\">$ npm i -g gatsby-cli\n$ gatsby new &lt;&lt;BLOG_NAME&gt;&gt; https://github.com/wonism/gatsby-advanced-blog\n$ cd &lt;&lt;BLOG_NAME&gt;&gt;\n$ npm run dev</code></pre></div>\n<h2>기본 구조 살펴보기</h2>\n<p>프로젝트는 다음과 같은 구조로 이루어져있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"hljs-text\"><code class=\"hljs-text\">src/\n├── components\n│   ├── ... # Many of shared sections\n│   └── layout.jsx # general layout for page\n├── constants\n├── containers # to connect states to react component\n├── html.jsx # page template for page\n├── pages # pages of your web site\n│   ├── 404.jsx\n│   └── index.js\n├── postComponents # react application that will be added in page\n│   └── ...\n├── resources # asset files\n│   └── images\n├── store # to use redux\n│   ├── ...\n│   └── index.js\n├── templates # template for creating page with file system\n│   └── ...\n└── utils # utilities\n    └── ...</code></pre></div>\n<h2>Post 작성하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"hljs-text\"><code class=\"hljs-text\">$ mkdir src/pages/&lt;&lt;DIRECTORY_NAME&gt;&gt;\n$ touch src/pages/&lt;&lt;DIRECTORY_NAME&gt;&gt;/index.md</code></pre></div>\n<p>이 마크다운 파일들은 <code class=\"hljs-text\">gatsby-source-filesystem</code>에 의해 불려지게 되며, <code class=\"hljs-text\">gatsby-transformer-remark</code> 에 의해 HTML 파일로 변환된다.<br />\n이들은 빌드 타임에 호출되며, <code class=\"hljs-text\">gatsby-node.js</code>의 <code class=\"hljs-text\">createPages</code>를 참고하면 된다.</p>\n<h3>주의 사항</h3>\n<p><code class=\"hljs-text\">&lt;&lt;PROJECT_ROOT&gt;&gt;/src/pages</code> 경로에 <code class=\"hljs-text\">.sample.md</code> 파일이 있는데, 이 파일을 지우면 GraphQL 쿼리의 <code class=\"hljs-text\">frontmatter</code> 프로퍼티의 <code class=\"hljs-text\">category</code>, <code class=\"hljs-text\">images</code> 등을 가져올 수 없다는 에러가 발생한다.<br />\n<code class=\"hljs-text\">.sample.md</code> 파일은 더미 데이터의 역할을 하여 <code class=\"hljs-text\">frontmatter</code>의 필드를 생성한다고 보면 된다.</p>\n<h3>마크다운 파일의 기본 구성 요소</h3>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"hljs-md\"><code class=\"hljs-md\"><span class=\"token hr punctuation\">---</span>\npath: \"/hello-world/\"\ncategory: \"Sample\"\ntags: [\"tag\", \"should\", \"be\", \"array\"]\ntitle: \"Hello, World!\"\ndate: \"2018-08-15T00:00:00.000Z\"\n<span class=\"token title important\">summary: \"You can create your own blog with Gatsby!\"\n<span class=\"token punctuation\">---</span></span>\n\nContent of this page</code></pre></div>\n<ul>\n<li><code class=\"hljs-text\">path</code>는 페이지를 생성하기 위해 <strong>반드시</strong> 필요한 속성으로 값은 유일한 값을 가져야 한다.</li>\n<li><code class=\"hljs-text\">category</code>는 카테고리 페이지를 생성하게 해주며, <code class=\"hljs-text\">/categories/&lt;&lt;CATEGORY_NAME&gt;&gt;/&lt;&lt;PAGE_NUMBER&gt;&gt;</code>와 같은 페이지에 접근할 수 있게 된다.</li>\n<li><code class=\"hljs-text\">tags</code>는 태그 페이지를 생성하게 해주며, <code class=\"hljs-text\">/tags/&lt;&lt;TAG_NAME&gt;&gt;/&lt;&lt;PAGE_NUMBER&gt;&gt;</code>와 같은 페이지에 접근할 수 있게 된다.</li>\n<li><code class=\"hljs-text\">title</code>는 페이지의 제목, <code class=\"hljs-text\">summary</code>는 페이지의 요약된 내용이다. 아래 이미지에서 각각 빨간 줄과 파란 줄에 해당된다.</li>\n<li><code class=\"hljs-text\">date</code>는 글이 작성된 날짜로 포스트들은 이 값을 기반으로 정렬된다.</li>\n</ul>\n<p>(이는 <a href=\"https://github.com/jonschlinkert/gray-matter\">gray-matter</a>를 참고하면 더 자세한 작동 원리를 알 수 있다.)</p>\n<div class=\"render-image\" id=\"post-detail\"></div>\n<p>이 값들은 <code class=\"hljs-text\">src/templates/Post.jsx</code>의 <code class=\"hljs-text\">query</code>에 의해 불려지게 되며, <a href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a> 에서 쿼리를 직접 실행해볼 수 있다.</p>\n<h3>포스트에 이미지 추가하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"hljs-md\"><code class=\"hljs-md\">images: [\"(&lt;&lt;src/resources/>>)PATH_TO/IMAGE\"]</code></pre></div>\n<p><code class=\"hljs-text\">http://</code>혹은 <code class=\"hljs-text\">https://</code>를 포함한 절대경로를 사용하거나, <code class=\"hljs-text\">src/resources</code>를 기준으로 한 상대경로를 할당해준다.</p>\n<p>(<code class=\"hljs-text\">components/Post/index.jsx</code>의 145번째 줄을 보면, <code class=\"hljs-text\">IF CONDITION ? &lt;&lt;image&gt;&gt; : &#39;&lt;&lt;src/resources/${image}&gt;&gt;&#39;</code>와 같이 이미지를 불러온다.)</p>\n<h3>포스트에 리액트 애플리케이션 추가하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"hljs-md\"><code class=\"hljs-md\"><span class=\"token hr punctuation\">---</span>\npath: \"/inject-app/\"\ncategory: \"Sample\"\ntags: [\"tag\", \"must\", \"be\", \"array\"]\ntitle: \"Injecting React application\"\ndate: \"2018-08-15T00:00:00.000Z\"\nsummary: \"You can inject react application into post\"\ncomponents: [{\n  rootId: 'sample-component', # <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sample-component<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span> must be in contents\n  fileName: 'sample', # this will render src/postComponents/sample/index.jsx\n<span class=\"token title important\">}]\n<span class=\"token punctuation\">---</span></span>\n\n<span class=\"token list punctuation\">1.</span> ...\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sample-component<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token list punctuation\">2.</span> ...</code></pre></div>\n<p>추가할 리액트 애플리케이션의 파일의 경로와, 렌더될 태그의 ID 값을 포함한 객체를 배열 안에 넣어준다.<br />\n그리고 글 중간에 리액트 애플리케이션을 삽입하고 싶은 곳에 이 ID를 가진 태그를 추가해준다.</p>\n<h3>포스트에 트윗 추가하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"hljs-md\"><code class=\"hljs-md\"><span class=\"token hr punctuation\">---</span>\npath: \"/inject-tweet/\"\ncategory: \"Sample\"\ntags: [\"tag\", \"must\", \"be\", \"array\"]\ntitle: \"Injecting Tweet\"\ndate: \"2018-08-15T00:00:00.000Z\"\nsummary: \"You can inject tweet into post\"\ntweets: [{\n  rootId: 'sample-tweet', # <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sample-tweet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span> must be in contents\n  userId: 'twitter', # twitter user id\n  tweetId: '977557540199456775', # tweet id\n<span class=\"token title important\">}]\n<span class=\"token punctuation\">---</span></span>\n\n<span class=\"token list punctuation\">1.</span> ...\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sample-tweet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token list punctuation\">2.</span> ...</code></pre></div>\n<p>추가할 트윗을 작성한 사람과 해당 트윗의 ID, 그리고 렌더될 태그의 ID 값을 포함한 객체를 배열 안에 넣어준다.<br />\n그리고 리액트 애플리케이션을 삽입했던 것처럼 사용하면 된다.</p>\n<h3>포스트에 코드 추가하기</h3>\n<p>하이라이팅을 하고자 하는 코드의 앞 뒤로 `를 연달아 3개를 붙여넣어주면, <code class=\"hljs-text\">gatsby-remark-prismjs</code>에 의해 하이라이팅이 된다.</p>\n<h2>포트폴리오 추가하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"hljs-text\"><code class=\"hljs-text\">$ mkdir src/resources/&lt;&lt;DIRECTORY_NAME&gt;&gt;\n$ touch src/resources/&lt;&lt;DIRECTORY_NAME&gt;&gt;/index.md</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"hljs-md\"><code class=\"hljs-md\"><span class=\"token hr punctuation\">---</span>\ntype: \"portfolio\"\ntitle: \"Gatsby Advanced Blog\"\ndate: \"2018-08-15T00:00:00.000Z\"\npath: \"/portfolios/portfolio-1/\"\nimages: [\n  \"test-1/1.png\",\n  \"test-1/2.png\",\n<span class=\"token title important\">]\n<span class=\"token punctuation\">---</span></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Gatsby Advanced Blog</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> What I did</span>\n<span class=\"token list punctuation\">-</span> Develop Gatsby Advanced Blog\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Libraries / Tools</span>\n<span class=\"token list punctuation\">-</span> ReactJS\n<span class=\"token list punctuation\">-</span> Redux\n<span class=\"token list punctuation\">-</span> Redux saga\n<span class=\"token list punctuation\">-</span> ...\n\n<span class=\"token url\">[Go to Web Site →](https://github.com/wonism/gatsby-advanced-blog)</span></code></pre></div>\n<ul>\n<li><code class=\"hljs-text\">path</code>는 페이지를 생성하기 위해 <strong>반드시</strong> 필요한 속성으로 값은 유일한 값을 가져야 한다.</li>\n<li><code class=\"hljs-text\">type</code>은 페이지의 형식을 지정할 수 있는 값으로 여기에서는 <code class=\"hljs-text\">portfolio</code>라고 할당한다.</li>\n<li><code class=\"hljs-text\">title</code>는 포트폴리오의 제목이다.</li>\n<li><code class=\"hljs-text\">images</code>는 포트폴리오에 첨부하고자 하는 이미지들로, 포스트와 같은 형태의 값을 가진다. 이미지는 배열에 추가된 순서로 렌더링이 된다.</li>\n<li>포트폴리오들은 <code class=\"hljs-text\">data</code> 값을 기반으로 정렬된다. 우선적으로 보여줄 포트폴리오에 큰 값을 준다.</li>\n</ul>\n<p>포트폴리오는 포트폴레오 페이지에서 보여지게 되며, 포트폴리오가 4개 이상일 경우 홈페이지 메인에서도 보여지게 된다.<br />\n(<code class=\"hljs-text\">src/components/Home</code>에서 확인할 수 있으며, 어떻게 렌더링할 지는 수정하면 된다.)</p>\n<h2>Resume 추가하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"hljs-md\"><code class=\"hljs-md\"><span class=\"token hr punctuation\">---</span>\ntype: \"resume\"\ntitle: \"Resume\"\ndate: \"2000-01-01T00:00:00.000Z\"\n<span class=\"token title important\">path: \"/resume/\"\n<span class=\"token punctuation\">---</span></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Experience</span>\n<span class=\"token list punctuation\">-</span> Engineer at OOO ∙ 2000. 01 ~ Present\n  <span class=\"token list punctuation\">-</span> Develop something\n  <span class=\"token list punctuation\">-</span> Maintain something\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Education</span>\n<span class=\"token list punctuation\">-</span> B.S. in Computer Science Engineering at OOO\n  <span class=\"token list punctuation\">-</span> <span class=\"token list punctuation\">2000.</span> 01 ~ 2000. 01\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Projects</span>\n<span class=\"token list punctuation\">-</span> Gatsby Advanced Blog (https://github.com/wonism/gatsby-advanced-blog) ∙ 2000. 01 ~ Present\n  <span class=\"token list punctuation\">-</span> Integrate Redux\n<span class=\"token code keyword\">    - Use Redux, Redux Saga, Reselect...</span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">##</span> Skills</span>\n<span class=\"token list punctuation\">-</span> JavaScript\n  <span class=\"token list punctuation\">-</span> ES2015+\n  <span class=\"token list punctuation\">-</span> ReactJS\n  <span class=\"token list punctuation\">-</span> Lodash\n<span class=\"token list punctuation\">-</span> CSS\n  <span class=\"token list punctuation\">-</span> SASS\n  <span class=\"token list punctuation\">-</span> Less</code></pre></div>\n<ul>\n<li><code class=\"hljs-text\">path</code>는 페이지를 생성하기 위해 <strong>반드시</strong> 필요한 속성으로 값은 유일한 값을 가져야 한다.</li>\n<li><code class=\"hljs-text\">type</code>은 페이지의 형식을 지정할 수 있는 값으로 여기에서는 <code class=\"hljs-text\">resume</code>라고 할당한다.</li>\n</ul>\n<h2>기타 기능</h2>\n<ul>\n<li>GNB의 오른쪽에선 포스트의 제목, 요약된 내용, 태그, 카테고리 등으로 검색을 할 수 있다.</li>\n<li>코드를 추가하면, 코드를 복사할 수 있는 버튼이 자동으로 생성된다.</li>\n</ul>\n<h2>배포</h2>\n<p><code class=\"hljs-text\">npm run build</code>를 통해 애플리케이션을 빌드하고,\n<a href=\"https://pages.github.com/\">Github Page</a> 또는 <a href=\"https://aws.amazon.com/s3\">AWS S3</a>, <a href=\"https://www.netlify.com/\">Netlify</a> 등 자신이 원하는 곳에 배포하면 된다.</p>","frontmatter":{"title":"Gatsby로 블로그 만들기","path":"/create-blog-with-gatsby/","images":["images/reactjs.jpg"],"category":"JavaScript","tags":["javascript","react","gatsby","blog","static site generator","github page"],"date":"2018-08-15T03:39:28.000Z","components":[{"rootId":"post-detail","fileName":"render-images/gatsby-blog/post"}],"tweets":null,"summary":"Gatsby는 React를 기반으로 한 정적 사이트 생성기(Jekyll(Ruby), Hexo(Node.js), Hugo(Go) 등이 있다.)이며, PWA, Hot reloading, SSR 등 다양한 기능을 제공한다."}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}