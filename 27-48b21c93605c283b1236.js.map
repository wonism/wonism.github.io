{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/obj.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt.js","webpack:///./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx.js","webpack:///./node_modules/pdfjs-dist/lib/core/crypto.js","webpack:///./node_modules/pdfjs-dist/lib/core/cff_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/standard_fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/unicode.js","webpack:///./node_modules/pdfjs-dist/lib/core/function.js","webpack:///./node_modules/pdfjs-dist/lib/pdf.worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./node_modules/pdfjs-dist/lib/core/document.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpg.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/annotation.js","webpack:///./node_modules/pdfjs-dist/lib/core/evaluator.js","webpack:///./node_modules/pdfjs-dist/lib/core/cmap.js","webpack:///./node_modules/pdfjs-dist/lib/core/fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/charsets.js","webpack:///./node_modules/pdfjs-dist/lib/core/font_renderer.js","webpack:///./node_modules/pdfjs-dist/lib/core/type1_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/pattern.js","webpack:///./node_modules/pdfjs-dist/lib/core/bidi.js","webpack:///./node_modules/pdfjs-dist/lib/core/metrics.js","webpack:///./node_modules/pdfjs-dist/lib/core/ps_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./node_modules/pdfjs-dist/lib/core/image.js","webpack:///./node_modules/pdfjs-dist/lib/core/primitives.js","webpack:///./node_modules/pdfjs-dist/lib/core/stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/colorspace.js","webpack:///./node_modules/pdfjs-dist/lib/core/encodings.js","webpack:///./node_modules/pdfjs-dist/lib/core/parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/operator_list.js","webpack:///./node_modules/pdfjs-dist/lib/core/glyphlist.js"],"names":["Object","defineProperty","exports","value","ChunkedStreamManager","ChunkedStream","_util","__webpack_require__","length","chunkSize","manager","this","bytes","Uint8Array","start","pos","end","loadedChunks","numChunksLoaded","numChunks","Math","ceil","progressiveDataLength","lastSuccessfulEnsureByteChunk","prototype","getMissingChunks","chunks","chunk","n","push","getBaseStreams","allChunksLoaded","onReceiveData","begin","byteLength","Error","set","curChunk","beginChunk","floor","endChunk","onReceiveProgressiveData","data","position","ensureByte","MissingDataException","ensureRange","nextEmptyChunk","i","hasChunk","isEmpty","getByte","getUint16","b0","b1","getInt32","getBytes","strEnd","subarray","peekByte","peekedByte","peekBytes","getByteRange","skip","reset","moveStart","makeSubStream","dict","ChunkedStreamSubstream","create","missingChunks","subStream","pdfNetworkStream","args","rangeChunkSize","stream","url","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","createPromiseCapability","onLoadedStream","promise","sendRequest","_this","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","Promise","resolve","reject","read","then","readChunk","done","arrayByteLength","chunkData","arraysToBytes","e","requestAllChunks","_requestChunks","ii","requestId","chunksNeeded","isEmptyObj","capability","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","min","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","includes","sort","a","b","groupedChunks","prevChunk","bytesLoaded","send","total","isProgressive","loadedRequests","requestIds","lastChunk","Number","isInteger","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_typeof","Symbol","iterator","obj","constructor","_slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","return","TypeError","_primitives","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","xref","pageFactory","catDict","getCatalogObj","isDict","FormatError","fontCache","RefSetCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","getRaw","isRef","shadow","encryptMetadata","encrypt","fetch","type","get","subtype","isName","stringToUTF8String","bytesToString","info","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","ex","warn","root","items","queue","parent","processed","RefSet","put","blackColor","shift","outlineDict","fetchIfRef","has","dest","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","color","getArray","rgbColor","ColorSpace","singletons","rgb","getRgb","outlineItem","unsafeUrl","newWindow","stringToPDFString","count","bold","italic","numPages","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","forEach","key","names","NameTree","getAll","name","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","s","p","isString","st","Util","toRoman","baseCharCode","letterIndex","character","String","fromCharCode","charBuf","j","jj","join","pageMode","attachments","fs","serializable","javaScript","appendIfJavaScriptDict","jsDict","js","isStream","openactionDict","actionType","action","cleanup","clear","promises","all","translatedFonts","translated","getPage","pageIndex","_this2","getPageDict","_ref","_ref2","ref","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","objId","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","isRefsEqual","getAsync","kidPromises","found","kid","params","actionName","indexOf","urlDict","remoteDest","baseUrl","split","JSON","stringify","isBool","namedAction","jsAction","jsUrl","RegExp","exec","absoluteUrl","createValidAbsoluteUrl","href","entries","xrefstms","cache","stats","streamTypes","fontTypes","setStartXRef","startXRef","startXRefQueue","parse","recoveryMode","trailerDict","indexObjects","readXRef","assignXref","trailer","ids","fileId","suppressEncryption","CipherTransformFactory","password","processXRefTable","parser","tableState","entryNum","streamPos","lexer","parserBuf1","buf1","parserBuf2","buf2","readXRefTable","isCmd","getObj","firstEntryNum","entryCount","first","entry","offset","gen","free","uncompressed","processXRefStream","streamParameters","byteWidths","range","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","splice","LF","CR","LT","readToken","token","ch","skipUntil","what","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","buffer","trailers","xrefStms","m","test","contentLength","startPos","endPos","checkPos","max","tokenStr","objToken","content","xrefTagOffset","Parser","Lexer","InvalidPDFException","startXRefParsedCache","topDict","num","XRefParseException","getEntry","xrefEntry","cacheEntry","Dict","toString","fetchUncompressed","fetchCompressed","obj1","obj2","obj3","parseInt","cmd","substring","isNaN","createCipherTransform","tableOffset","Ref","allowStreams","fetchIfRefAsync","streamManager","tryFetch","NameOrNumberTree","unreachable","_type","l","r","kidsOrEntries","loopCount","limits","currentKey","inherit","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","getKeys","rawValue","_ii","keys","refSet","load","_walk","_this3","nodesToRevisit","pendingRequests","baseStreams","foundMissingData","_i2","_ii2","remove","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","source","options","arguments","eof","encoding","K","eoline","EndOfLine","byteAlign","EncodedByteAlign","columns","Columns","rows","Rows","eoblock","EndOfBlock","black","BlackIs1","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","code1","_lookBits","_eatBits","readNextChar","refPos","blackPixels","bits","code2","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","c","a1","_findTableCode","table","limit","limitValue","code","result","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","d","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","msg","message","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","width","height","calculateTileGrids","context","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","q","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","scale","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","index","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","k","nextPacket","packet","maxNumPrecinctsInLevel","Int32Array","maxNumPrecincts","precinctsIterationSizes","px","py","parseTilePackets","bufferSize","skipNextBit","readBits","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","included","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","charAt","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","totalLength","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","sign","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","transform","ReversibleTransform","IrreversibleTransform","subbandCoefficients","Float32Array","mu","epsilon","gainLog2","pow","calculate","left","top","initializeTile","qcdOrQcc","QCC","QCD","COC","readUint16","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","bitsPerComponent","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","slice","resultImages","transformedTiles","y2","tile0","out","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","g","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","Uint16Array","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","size","j1","j2","hl_lh_hh","u","v","llWidth","llHeight","llItems","rowBuffer","filter","numBuffers","colBuffers","currentBuffer","call","x","current","len","alpha","beta","gamma","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_stream","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_classCallCheck","instance","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h1","h2","h3","paddedLength","padded","w","f","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","y","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","h","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","input","t","state","_keySize","_cyclesOfRepetition","_j","_j2","_k","_j3","s0","s1","s2","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","finalize","sourceLength","bufferLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","getPrototypeOf","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","array","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","createStream","DecryptStream","decryptString","stringToBytes","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","Name","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","uBytes","perms","passwordLength","pdfAlgorithm","PasswordException","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","id","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","bytesLength","major","minor","hdrSize","offSize","parseOperand","str","lookup","b2","parseFloat","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","hints","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","ExpertEncoding","StandardEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","CFFEncoding","rawBytes","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","values","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","dataOffset","offset0","offset1","offset2","offset3","offset4","compile","concat","compileHeader","compileNameIndex","base","subDict","matrix","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","round","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","kk","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getLookupTableFactory","ArialNarrow","ArialBlack","Arial","ArialMT","CourierNew","CourierNewPSMT","Helvetica","SegoeUISymbol","TimesNewRoman","TimesNewRomanPS","TimesNewRomanPSMT","Calibri","CenturyGothic","ComicSansMS","LucidaConsole","NuptialScript","Wingdings","Albertus","Aldus","Alexandria","Algerian","Antiqua","Apex","Arno","Aster","Aurora","Baskerville","Bell","Bembo","Benguiat","Bodoni","Bookman","Calisto","Calvert","Capitals","Cambria","Cartier","Caslon","Catull","Centaur","Chaparral","Cheltenham","Clarendon","Clearface","Cochin","Colonna","Constantia","Corona","Ecotype","Egyptienne","Elephant","Excelsior","Fairfield","Folkard","Footlight","FreeSerif","Garamond","Gentium","Georgia","Gloucester","Granjon","Heather","Hercules","Hiroshige","Imprint","Janson","Joanna","Korinna","Lexicon","Literaturnaya","Lucida","Melior","Memphis","Miller","Minion","Modern","Palatino","Perpetua","Plantin","Playbill","Renault","Requiem","Rockwell","Roman","Sabon","Scala","Seagull","Sistina","Souvenir","STIX","Sylfaen","Times","Trajan","Utopia","Versailles","Wanted","Weiss","Windsor","XITS","Dingbats","ZapfDingbats","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","charCodeAt","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","1031","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_ps_parser","IsEvalSupportedCached","isEvalSupported","_ref$isEvalSupported","fn","PDFFunction","fnObj","parseArray","IR","fromIR","getIR","getSampleArray","outputSize","bps","codeSize","codeBuf","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","fnArray","src","srcOffset","destOffset","_ref6","toMultiArray","inputLength","domain","inputSize","encode","decode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","tmpBuf","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","Function","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","counter","abs","atan","cos","log","LN10","sin","sqrt","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","arg","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","item","instructions","lastRegister","apply","instruction","statementBuilder","expr","unshift","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","maybePort","_pdf_manager","_is_node2","__esModule","default","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","sendWithPromise","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","assert","reader","reason","cancel","headersReady","setup","handler","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","MessageHandler","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","intent","pageNum","Date","now","getOperatorList","renderInteractiveForms","operatorList","featureId","UNSUPPORTED_FEATURES","unknown","wrappedException","minimumStackMessage","error","sink","onPull","desiredSize","onCancel","extractTextContent","normalizeWhitespace","combineTextItems","close","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","catch","MissingPDFException","UnexpectedResponseException","UnknownErrorException","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","pdfFile","getPdfManager","forceDataSchema","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","initializeFromPort","window","postMessage","_document","BasePdfManager","_docId","_password","_docBaseUrl","NotImplementedException","prop","ensureXRef","Stream","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","pdfFunctionFactory","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","_getInheritableProperty","getInheritableProperty","stopWhenFound","merge","resources","empty","mediaBox","cropBox","isNum","intersection","intersect","getContentStream","streams","StreamsSequenceStream","NullStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","opList","OperatorList","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","flush","opListPromises","opLists","addOp","OPS","beginAnnotations","addOpList","endAnnotations","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","isArrayBuffer","find","needle","backwards","strBuf","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","version","pdfFormatVersion","acroForm","xfa","fields","linearization","Linearization","isSpace","mainXRefEntriesOffset","checkHeader","parseStartXRef","_this4","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","CCITTFaxStream","_ccitt","maybeLength","ccittFaxDecoder","DecodeStream","readBlock","ensureBuffer","Jbig2Stream","_jbig","requested","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","codeLength","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","bitmap","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","rowSize","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","onImmediateTextRegion","numberOfSymbols","codes","runCodesTable","repeatedLength","numberOfRepeats","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","JpegImage","JpegError","DNLMarkerError","scanLines","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","decodeTransform","colorTransform","buildHuffmanTable","codeLengths","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","successiveACNextValue","eobrun","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v1","v2","v3","v4","v5","v6","v7","p0","p1","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","sofScanLines","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Y","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","getData","forceRGBoutput","rgbData","grayColor","JpxStream","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","imgRowSize","tileRowSize","rowBytes","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getter","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rect","rectangle","flag","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","normalizeRect","gray","getRgbItem","cmyk","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","as","hasPopup","contents","renderForms","appearanceDict","bbox","getAxialAlignedBoundingBox","maxY","xRatio","yRatio","beginAnnotation","endAnnotation","_isViewable","_isPrintable","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","element","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","maxLen","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","_this6","TEXT","_preparePopup","_Annotation3","_this7","LINK","_Annotation4","_this8","POPUP","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","LINE","lineCoordinates","_Annotation6","_this10","SQUARE","_Annotation7","_this11","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FILEATTACHMENT","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_jpeg_stream","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoding","DECODE","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","fetchBuiltInCMap","cachedCMap","compressionType","CMapCompressionType","NONE","TimeSlotManager","canDecode","image","JpegStream","isDecodable","colorSpace","numComps","isSupported","res","cs","isDefaultDecode","check","checked","endTime","deferred","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","smask","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","paintFormXObjectEnd","endGroup","buildPaintImageXObject","_ref4$isInline","isInline","cacheKey","imageCache","_ref4$forceDisableNat","forceDisableNativeImageDecoder","imgData","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","cached","paintImageMaskXObject","softMask","createImageData","paintInlineImageXObject","addDependency","paintJpegXObject","nativeImageDecoder","buildImage","nativeDecoder","imageObj","paintImageXObject","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","pattern","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","argsArray","tilingPatternIR","addDependencies","dependencies","handleSetFont","fontArgs","fontRef","fontName","loadFont","font","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","setGState","gState","gStateObj","gStateKeys","_loop","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","aliasRef","putAlias","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","constructPath","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","restore","promiseBody","stop","paintXObject","resolveXObject","rejectXObject","save","setFont","fontSize","endInlineImage","showText","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","initialized","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","FONT_IDENTITY_MATRIX","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","buildTextContentItem","textChunk","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","bidiResult","bidi","dir","runBidiTransform","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","setTextMatrix","calcTextLineMatrixAdvance","setTextLineMatrix","beginText","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","AbortException","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","getEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","WinAnsiEncoding","MacRomanEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","getGlyphsUnicode","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","map","charCode","w1","w2","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","search","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","numArgs","variableArgs","J","setLineCap","setLineJoin","M","setMiterLimit","setDash","ri","setRenderingIntent","setFlatness","gs","Q","cm","re","S","stroke","closeStroke","fill","F","eoFill","B","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","W","clip","eoClip","BT","ET","endText","Tc","Tw","Tz","TL","Tf","Tr","Ts","Td","TD","Tm","Tj","TJ","d0","setCharWidth","d1","setCharWidthAndBounds","CS","SC","SCN","sc","scn","G","RG","rg","sh","BI","beginInlineImage","ID","beginImageData","EI","Do","MP","DP","BMC","BDC","EMC","BX","EX","BM","BD","true","fa","fal","fals","false","nu","nul","null","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","isEOF","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","_map","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","callback","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","process","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","BINARY","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","string32","searchParams","checksum","addTable","tag","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isOpenTypeFile","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","TYPE3","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","hasOwnProperty","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","getDingbatsGlyphsUnicode","VALID_TABLES","readTables","head","hhea","hmtx","maxp","post","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","pc","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","newLength","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","potentialHeader","potentialTables","nameEntry","cffFile","isTrueType","loca","fpgm","prep","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","cvt","cvtData","numOfMetrics","numMissing","locaLength","indexToLocFormat","numGlyphsPlusOne","isGlyphLocationsLong","glyphsInfo","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","metricsOverride","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","compiler","namePrototype","builder","tableTag","builtInEncoding","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","scanLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","1769","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","x2","xb","yb","subrCode","stackClean","numSubrs","achar","bchar","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","decrypt","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","nextChar","readNumberArray","getToken","readInt","readBoolean","currentChar","comment","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","shadingPattern","Dummy","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","step","colorStops","ratio","cssColor","makeCssRgb","background","SMALL_NUMBER","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildFigureFromPatch","mesh","figure","figures","coords","colors","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","tmp4","coordsPacked","xy","colorsPacked","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","Courier","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","A","C","D","E","H","I","L","N","O","P","R","T","U","V","X","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","o","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","Idieresis","eacute","abreve","uhungarumlaut","ecaron","Ydieresis","divide","Yacute","Acircumflex","aacute","Ucircumflex","yacute","scommaaccent","ecircumflex","Uring","Udieresis","aogonek","Uacute","uogonek","Edieresis","Dcroat","commaaccent","copyright","Emacron","ccaron","aring","Ncommaaccent","lacute","agrave","Tcommaaccent","Cacute","atilde","Edotaccent","scaron","scedilla","iacute","lozenge","Rcaron","Gcommaaccent","ucircumflex","acircumflex","Amacron","rcaron","ccedilla","Zdotaccent","Thorn","Omacron","Racute","Sacute","dcaron","Umacron","uring","threesuperior","Ograve","Agrave","Abreve","multiply","uacute","Tcaron","partialdiff","ydieresis","Nacute","icircumflex","Ecircumflex","adieresis","edieresis","cacute","nacute","umacron","Ncaron","Iacute","plusminus","brokenbar","registered","Gbreve","Idotaccent","summation","Egrave","racute","omacron","Zacute","Zcaron","greaterequal","Eth","Ccedilla","lcommaaccent","tcaron","eogonek","Uogonek","Aacute","Adieresis","egrave","zacute","iogonek","Oacute","oacute","amacron","sacute","idieresis","Ocircumflex","Ugrave","Delta","thorn","twosuperior","Odieresis","igrave","ohungarumlaut","Eogonek","dcroat","threequarters","Scedilla","lcaron","Kcommaaccent","Lacute","trademark","edotaccent","Igrave","Imacron","Lcaron","onehalf","lessequal","ocircumflex","ntilde","Uhungarumlaut","Eacute","emacron","gbreve","onequarter","Scaron","Scommaaccent","Ohungarumlaut","degree","ograve","Ccaron","ugrave","radical","Dcaron","rcommaaccent","Ntilde","otilde","Rcommaaccent","Lcommaaccent","Atilde","Aogonek","Aring","Otilde","zdotaccent","Ecaron","Iogonek","kcommaaccent","minus","Icircumflex","ncaron","tcommaaccent","logicalnot","odieresis","udieresis","notequal","gcommaaccent","eth","zcaron","ncommaaccent","onesuperior","imacron","Euro","universal","existential","suchthat","asteriskmath","congruent","Alpha","Beta","Chi","Epsilon","Phi","Gamma","Eta","Iota","theta1","Kappa","Lambda","Mu","Nu","Omicron","Pi","Theta","Rho","Sigma","Tau","Upsilon","sigma1","Omega","Xi","Psi","Zeta","therefore","perpendicular","radicalex","chi","phi","eta","iota","phi1","kappa","lambda","omicron","theta","rho","tau","upsilon","omega1","omega","psi","zeta","similar","Upsilon1","minute","infinity","club","diamond","heart","spade","arrowboth","arrowleft","arrowup","arrowright","arrowdown","second","proportional","equivalence","approxequal","arrowvertex","arrowhorizex","carriagereturn","aleph","Ifraktur","Rfraktur","weierstrass","circlemultiply","circleplus","emptyset","union","propersuperset","reflexsuperset","notsubset","propersubset","reflexsubset","notelement","gradient","registerserif","copyrightserif","trademarkserif","product","dotmath","logicaland","logicalor","arrowdblboth","arrowdblleft","arrowdblup","arrowdblright","arrowdbldown","angleleft","registersans","copyrightsans","trademarksans","parenlefttp","parenleftex","parenleftbt","bracketlefttp","bracketleftex","bracketleftbt","bracelefttp","braceleftmid","braceleftbt","braceex","angleright","integral","integraltp","integralex","integralbt","parenrighttp","parenrightex","parenrightbt","bracketrighttp","bracketrightex","bracketrightbt","bracerighttp","bracerightmid","bracerightbt","apple","a2","a202","a3","a4","a5","a119","a118","a117","a11","a12","a13","a14","a15","a16","a105","a17","a18","a19","a20","a21","a22","a23","a24","a25","a26","a27","a28","a6","a7","a8","a9","a10","a29","a30","a31","a32","a33","a34","a35","a36","a37","a38","a39","a40","a41","a42","a43","a44","a45","a46","a47","a48","a49","a50","a51","a52","a53","a54","a55","a56","a57","a58","a59","a60","a61","a62","a63","a64","a65","a66","a67","a68","a69","a70","a71","a72","a73","a74","a203","a75","a204","a76","a77","a78","a79","a81","a82","a83","a84","a97","a98","a99","a100","a89","a90","a93","a94","a91","a92","a205","a85","a206","a86","a87","a88","a95","a96","a101","a102","a103","a104","a106","a107","a108","a112","a111","a110","a109","a120","a121","a122","a123","a124","a125","a126","a127","a128","a129","a130","a131","a132","a133","a134","a135","a136","a137","a138","a139","a140","a141","a142","a143","a144","a145","a146","a147","a148","a149","a150","a151","a152","a153","a154","a155","a156","a157","a158","a159","a160","a161","a163","a164","a196","a165","a192","a166","a167","a168","a169","a170","a171","a172","a173","a162","a174","a175","a176","a177","a178","a179","a193","a180","a199","a181","a200","a182","a201","a183","a184","a197","a185","a194","a198","a186","a195","a187","a188","a189","a190","a191","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","EOF","getNumber","toLowerCase","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","bpc","oldIndex","newIndex","xScaled","w1Scanline","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","imageMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","drawWidth","drawHeight","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","actualHeight","alphaBuf","sw","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","originalWidth","originalHeight","kind","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","imageLength","maybeUndoPreblend","comps","RGBA_32BPP","fillRgb","forceRGB","nameCache","Cmd","cmdCache","nonSerializable","__nonSerializable__","newXref","key1","key2","key3","dictArray","mergedDict","keyName","thisArg","LZWStream","StringStream","RunLengthStream","PredictorStream","FlateStream","AsciiHexStream","Ascii85Stream","arrayBuffer","emptyBuffer","maybeMinBufferLength","minBufferLength","buffer2","bufEnd","appendToArray","codeLenCodeMap","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","cmf","flg","getBits","getCode","codeLen","codeVal","generateHuffmanTable","lengths","val","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","repeatLength","dist","blockLen","predictor","readBlockTiff","readBlockPng","pixBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","prevRow","up","upLeft","pa","pb","nextChunk","hasMoreData","firstDigit","maxDecodeLength","digit","repeatHeader","earlyChange","cachedData","bitsCached","lzwState","nextCode","dictionaryValues","dictionaryLengths","dictionaryPrevCodes","currentSequence","currentSequenceLength","lastCode","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","getRgbBuffer","getOutputLength","isPassthrough","rgbBuf","numComponentColors","needsResizing","allColors","destPos","rgbPos","colorMap","usesZeroToOneRange","parseToIR","whitePoint","blackPoint","CalGrayCS","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","LabCS","colorSpaces","resCS","mode","altIR","createIR","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","AG","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","adjustToRange","decodeL","AGR","BGG","CGB","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","XYZ_D65","LMS_D65","SRGB","sR","sG","sB","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","bs","MacExpertEncoding","encodingName","700","_ccitt_stream","_jbig2_stream","_jpx_stream","MAX_ADLER32_LENGTH","computeAdler32","refill","tryShift","cipherTransform","makeInlineImage","makeStream","findDefaultInlineStreamEnd","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filterZero","imageStream","imageBytes","initialStreamPos","dictBytes","skipToNextLine","ENDSTREAM_SIGNATURE","scanBytes","makeFilter","filterArray","paramsArray","xrefStreamStats","StreamType","FLATE","LZW","DCT","JPX","A85","AHX","CCF","RL","JBIG","knownCommands","specialChars","toHexDigit","peekChar","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","getHexString","secondDigit","isFirstHex","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","hintsLength","objectNumberFirst","endFirst","pageFirst","_jpg","jpegImage","decodeArr","decodeArrLength","transformNeeded","maxValue","createObjectURL","QueueOptimizer","addState","parentState","checkFn","iterateFn","processFn","InitialState","iCurr","match","lastProcessed","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxLineHeight","currentX","currentY","img","imgWidth","imgHeight","paintInlineImageXObjectGroup","iFirstPIMXO","paintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","firstPIXOArg0","paintImageXObjectRepeat","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","NullOptimizer","messageHandler","optimizer","_totalLength","weight","CHUNK_SIZE","dependency","extendObj","transfers","AEacute","AEmacron","AEsmall","Aacutesmall","Abreveacute","Abrevecyrillic","Abrevedotbelow","Abrevegrave","Abrevehookabove","Abrevetilde","Acaron","Acircle","Acircumflexacute","Acircumflexdotbelow","Acircumflexgrave","Acircumflexhookabove","Acircumflexsmall","Acircumflextilde","Acute","Acutesmall","Acyrillic","Adblgrave","Adieresiscyrillic","Adieresismacron","Adieresissmall","Adotbelow","Adotmacron","Agravesmall","Ahookabove","Aiecyrillic","Ainvertedbreve","Alphatonos","Amonospace","Aringacute","Aringbelow","Aringsmall","Asmall","Atildesmall","Aybarmenian","Bcircle","Bdotaccent","Bdotbelow","Becyrillic","Benarmenian","Bhook","Blinebelow","Bmonospace","Brevesmall","Bsmall","Btopbar","Caarmenian","Caron","Caronsmall","Ccedillaacute","Ccedillasmall","Ccircle","Ccircumflex","Cdot","Cdotaccent","Cedillasmall","Chaarmenian","Cheabkhasiancyrillic","Checyrillic","Chedescenderabkhasiancyrillic","Chedescendercyrillic","Chedieresiscyrillic","Cheharmenian","Chekhakassiancyrillic","Cheverticalstrokecyrillic","Chook","Circumflexsmall","Cmonospace","Coarmenian","Csmall","DZ","DZcaron","Daarmenian","Dafrican","Dcedilla","Dcircle","Dcircumflexbelow","Ddotaccent","Ddotbelow","Decyrillic","Deicoptic","Deltagreek","Dhook","Dieresis","DieresisAcute","DieresisGrave","Dieresissmall","Digammagreek","Djecyrillic","Dlinebelow","Dmonospace","Dotaccentsmall","Dslash","Dsmall","Dtopbar","Dz","Dzcaron","Dzeabkhasiancyrillic","Dzecyrillic","Dzhecyrillic","Eacutesmall","Ebreve","Ecedillabreve","Echarmenian","Ecircle","Ecircumflexacute","Ecircumflexbelow","Ecircumflexdotbelow","Ecircumflexgrave","Ecircumflexhookabove","Ecircumflexsmall","Ecircumflextilde","Ecyrillic","Edblgrave","Edieresissmall","Edot","Edotbelow","Efcyrillic","Egravesmall","Eharmenian","Ehookabove","Eightroman","Einvertedbreve","Eiotifiedcyrillic","Elcyrillic","Elevenroman","Emacronacute","Emacrongrave","Emcyrillic","Emonospace","Encyrillic","Endescendercyrillic","Eng","Enghecyrillic","Enhookcyrillic","Eopen","Epsilontonos","Ercyrillic","Ereversed","Ereversedcyrillic","Escyrillic","Esdescendercyrillic","Esh","Esmall","Etarmenian","Etatonos","Ethsmall","Etilde","Etildebelow","Ezh","Ezhcaron","Ezhreversed","Fcircle","Fdotaccent","Feharmenian","Feicoptic","Fhook","Fitacyrillic","Fiveroman","Fmonospace","Fourroman","Fsmall","GBsquare","Gacute","Gammaafrican","Gangiacoptic","Gcaron","Gcedilla","Gcircle","Gcircumflex","Gdot","Gdotaccent","Gecyrillic","Ghadarmenian","Ghemiddlehookcyrillic","Ghestrokecyrillic","Gheupturncyrillic","Ghook","Gimarmenian","Gjecyrillic","Gmacron","Gmonospace","Grave","Gravesmall","Gsmall","Gsmallhook","Gstroke","H18533","H18543","H18551","H22073","HPsquare","Haabkhasiancyrillic","Hadescendercyrillic","Hardsigncyrillic","Hbar","Hbrevebelow","Hcedilla","Hcircle","Hcircumflex","Hdieresis","Hdotaccent","Hdotbelow","Hmonospace","Hoarmenian","Horicoptic","Hsmall","Hungarumlaut","Hungarumlautsmall","Hzsquare","IAcyrillic","IJ","IUcyrillic","Iacutesmall","Ibreve","Icaron","Icircle","Icircumflexsmall","Icyrillic","Idblgrave","Idieresisacute","Idieresiscyrillic","Idieresissmall","Idot","Idotbelow","Iebrevecyrillic","Iecyrillic","Igravesmall","Ihookabove","Iicyrillic","Iinvertedbreve","Iishortcyrillic","Imacroncyrillic","Imonospace","Iniarmenian","Iocyrillic","Iotaafrican","Iotadieresis","Iotatonos","Ismall","Istroke","Itilde","Itildebelow","Izhitsacyrillic","Izhitsadblgravecyrillic","Jaarmenian","Jcircle","Jcircumflex","Jecyrillic","Jheharmenian","Jmonospace","Jsmall","KBsquare","KKsquare","Kabashkircyrillic","Kacute","Kacyrillic","Kadescendercyrillic","Kahookcyrillic","Kastrokecyrillic","Kaverticalstrokecyrillic","Kcaron","Kcedilla","Kcircle","Kdotbelow","Keharmenian","Kenarmenian","Khacyrillic","Kheicoptic","Khook","Kjecyrillic","Klinebelow","Kmonospace","Koppacyrillic","Koppagreek","Ksicyrillic","Ksmall","LJ","Lcedilla","Lcircle","Lcircumflexbelow","Ldot","Ldotaccent","Ldotbelow","Ldotbelowmacron","Liwnarmenian","Lj","Ljecyrillic","Llinebelow","Lmonospace","Lslashsmall","Lsmall","MBsquare","Macron","Macronsmall","Macute","Mcircle","Mdotaccent","Mdotbelow","Menarmenian","Mmonospace","Msmall","Mturned","NJ","Ncedilla","Ncircle","Ncircumflexbelow","Ndotaccent","Ndotbelow","Nhookleft","Nineroman","Nj","Njecyrillic","Nlinebelow","Nmonospace","Nowarmenian","Nsmall","Ntildesmall","OEsmall","Oacutesmall","Obarredcyrillic","Obarreddieresiscyrillic","Obreve","Ocaron","Ocenteredtilde","Ocircle","Ocircumflexacute","Ocircumflexdotbelow","Ocircumflexgrave","Ocircumflexhookabove","Ocircumflexsmall","Ocircumflextilde","Ocyrillic","Odblacute","Odblgrave","Odieresiscyrillic","Odieresissmall","Odotbelow","Ogoneksmall","Ogravesmall","Oharmenian","Ohm","Ohookabove","Ohorn","Ohornacute","Ohorndotbelow","Ohorngrave","Ohornhookabove","Ohorntilde","Oi","Oinvertedbreve","Omacronacute","Omacrongrave","Omegacyrillic","Omegagreek","Omegaroundcyrillic","Omegatitlocyrillic","Omegatonos","Omicrontonos","Omonospace","Oneroman","Oogonek","Oogonekmacron","Oopen","Oslashacute","Oslashsmall","Osmall","Ostrokeacute","Otcyrillic","Otildeacute","Otildedieresis","Otildesmall","Pacute","Pcircle","Pdotaccent","Pecyrillic","Peharmenian","Pemiddlehookcyrillic","Phook","Piwrarmenian","Pmonospace","Psicyrillic","Psmall","Qcircle","Qmonospace","Qsmall","Raarmenian","Rcedilla","Rcircle","Rdblgrave","Rdotaccent","Rdotbelow","Rdotbelowmacron","Reharmenian","Ringsmall","Rinvertedbreve","Rlinebelow","Rmonospace","Rsmall","Rsmallinverted","Rsmallinvertedsuperior","SF010000","SF020000","SF030000","SF040000","SF050000","SF060000","SF070000","SF080000","SF090000","SF100000","SF110000","SF190000","SF200000","SF210000","SF220000","SF230000","SF240000","SF250000","SF260000","SF270000","SF280000","SF360000","SF370000","SF380000","SF390000","SF400000","SF410000","SF420000","SF430000","SF440000","SF450000","SF460000","SF470000","SF480000","SF490000","SF500000","SF510000","SF520000","SF530000","SF540000","Sacutedotaccent","Sampigreek","Scarondotaccent","Scaronsmall","Schwa","Schwacyrillic","Schwadieresiscyrillic","Scircle","Scircumflex","Sdotaccent","Sdotbelow","Sdotbelowdotaccent","Seharmenian","Sevenroman","Shaarmenian","Shacyrillic","Shchacyrillic","Sheicoptic","Shhacyrillic","Shimacoptic","Sixroman","Smonospace","Softsigncyrillic","Ssmall","Stigmagreek","Tbar","Tcedilla","Tcircle","Tcircumflexbelow","Tdotaccent","Tdotbelow","Tecyrillic","Tedescendercyrillic","Tenroman","Tetsecyrillic","Thook","Thornsmall","Threeroman","Tildesmall","Tiwnarmenian","Tlinebelow","Tmonospace","Toarmenian","Tonefive","Tonesix","Tonetwo","Tretroflexhook","Tsecyrillic","Tshecyrillic","Tsmall","Twelveroman","Tworoman","Uacutesmall","Ubreve","Ucaron","Ucircle","Ucircumflexbelow","Ucircumflexsmall","Ucyrillic","Udblacute","Udblgrave","Udieresisacute","Udieresisbelow","Udieresiscaron","Udieresiscyrillic","Udieresisgrave","Udieresismacron","Udieresissmall","Udotbelow","Ugravesmall","Uhookabove","Uhorn","Uhornacute","Uhorndotbelow","Uhorngrave","Uhornhookabove","Uhorntilde","Uhungarumlautcyrillic","Uinvertedbreve","Ukcyrillic","Umacroncyrillic","Umacrondieresis","Umonospace","Upsilonacutehooksymbolgreek","Upsilonafrican","Upsilondieresis","Upsilondieresishooksymbolgreek","Upsilonhooksymbol","Upsilontonos","Ushortcyrillic","Usmall","Ustraightcyrillic","Ustraightstrokecyrillic","Utilde","Utildeacute","Utildebelow","Vcircle","Vdotbelow","Vecyrillic","Vewarmenian","Vhook","Vmonospace","Voarmenian","Vsmall","Vtilde","Wacute","Wcircle","Wcircumflex","Wdieresis","Wdotaccent","Wdotbelow","Wgrave","Wmonospace","Wsmall","Xcircle","Xdieresis","Xdotaccent","Xeharmenian","Xmonospace","Xsmall","Yacutesmall","Yatcyrillic","Ycircle","Ycircumflex","Ydieresissmall","Ydotaccent","Ydotbelow","Yericyrillic","Yerudieresiscyrillic","Ygrave","Yhook","Yhookabove","Yiarmenian","Yicyrillic","Yiwnarmenian","Ymonospace","Ysmall","Ytilde","Yusbigcyrillic","Yusbigiotifiedcyrillic","Yuslittlecyrillic","Yuslittleiotifiedcyrillic","Zaarmenian","Zcaronsmall","Zcircle","Zcircumflex","Zdot","Zdotbelow","Zecyrillic","Zedescendercyrillic","Zedieresiscyrillic","Zhearmenian","Zhebrevecyrillic","Zhecyrillic","Zhedescendercyrillic","Zhedieresiscyrillic","Zlinebelow","Zmonospace","Zsmall","Zstroke","aabengali","aadeva","aagujarati","aagurmukhi","aamatragurmukhi","aarusquare","aavowelsignbengali","aavowelsigndeva","aavowelsigngujarati","abbreviationmarkarmenian","abbreviationsigndeva","abengali","abopomofo","abreveacute","abrevecyrillic","abrevedotbelow","abrevegrave","abrevehookabove","abrevetilde","acaron","acircle","acircumflexacute","acircumflexdotbelow","acircumflexgrave","acircumflexhookabove","acircumflextilde","acutebelowcmb","acutecmb","acutecomb","acutedeva","acutelowmod","acutetonecmb","acyrillic","adblgrave","addakgurmukhi","adeva","adieresiscyrillic","adieresismacron","adotbelow","adotmacron","aeacute","aekorean","aemacron","afii00208","afii08941","afii10017","afii10018","afii10019","afii10020","afii10021","afii10022","afii10023","afii10024","afii10025","afii10026","afii10027","afii10028","afii10029","afii10030","afii10031","afii10032","afii10033","afii10034","afii10035","afii10036","afii10037","afii10038","afii10039","afii10040","afii10041","afii10042","afii10043","afii10044","afii10045","afii10046","afii10047","afii10048","afii10049","afii10050","afii10051","afii10052","afii10053","afii10054","afii10055","afii10056","afii10057","afii10058","afii10059","afii10060","afii10061","afii10062","afii10063","afii10064","afii10065","afii10066","afii10067","afii10068","afii10069","afii10070","afii10071","afii10072","afii10073","afii10074","afii10075","afii10076","afii10077","afii10078","afii10079","afii10080","afii10081","afii10082","afii10083","afii10084","afii10085","afii10086","afii10087","afii10088","afii10089","afii10090","afii10091","afii10092","afii10093","afii10094","afii10095","afii10096","afii10097","afii10098","afii10099","afii10100","afii10101","afii10102","afii10103","afii10104","afii10105","afii10106","afii10107","afii10108","afii10109","afii10110","afii10145","afii10146","afii10147","afii10148","afii10192","afii10193","afii10194","afii10195","afii10196","afii10831","afii10832","afii10846","afii299","afii300","afii301","afii57381","afii57388","afii57392","afii57393","afii57394","afii57395","afii57396","afii57397","afii57398","afii57399","afii57400","afii57401","afii57403","afii57407","afii57409","afii57410","afii57411","afii57412","afii57413","afii57414","afii57415","afii57416","afii57417","afii57418","afii57419","afii57420","afii57421","afii57422","afii57423","afii57424","afii57425","afii57426","afii57427","afii57428","afii57429","afii57430","afii57431","afii57432","afii57433","afii57434","afii57440","afii57441","afii57442","afii57443","afii57444","afii57445","afii57446","afii57448","afii57449","afii57450","afii57451","afii57452","afii57453","afii57454","afii57455","afii57456","afii57457","afii57458","afii57470","afii57505","afii57506","afii57507","afii57508","afii57509","afii57511","afii57512","afii57513","afii57514","afii57519","afii57534","afii57636","afii57645","afii57658","afii57664","afii57665","afii57666","afii57667","afii57668","afii57669","afii57670","afii57671","afii57672","afii57673","afii57674","afii57675","afii57676","afii57677","afii57678","afii57679","afii57680","afii57681","afii57682","afii57683","afii57684","afii57685","afii57686","afii57687","afii57688","afii57689","afii57690","afii57694","afii57695","afii57700","afii57705","afii57716","afii57717","afii57718","afii57723","afii57793","afii57794","afii57795","afii57796","afii57797","afii57798","afii57799","afii57800","afii57801","afii57802","afii57803","afii57804","afii57806","afii57807","afii57839","afii57841","afii57842","afii57929","afii61248","afii61289","afii61352","afii61573","afii61574","afii61575","afii61664","afii63167","afii64937","agujarati","agurmukhi","ahiragana","ahookabove","aibengali","aibopomofo","aideva","aiecyrillic","aigujarati","aigurmukhi","aimatragurmukhi","ainarabic","ainfinalarabic","aininitialarabic","ainmedialarabic","ainvertedbreve","aivowelsignbengali","aivowelsigndeva","aivowelsigngujarati","akatakana","akatakanahalfwidth","akorean","alef","alefarabic","alefdageshhebrew","aleffinalarabic","alefhamzaabovearabic","alefhamzaabovefinalarabic","alefhamzabelowarabic","alefhamzabelowfinalarabic","alefhebrew","aleflamedhebrew","alefmaddaabovearabic","alefmaddaabovefinalarabic","alefmaksuraarabic","alefmaksurafinalarabic","alefmaksurainitialarabic","alefmaksuramedialarabic","alefpatahhebrew","alefqamatshebrew","allequal","alphatonos","amonospace","ampersandmonospace","ampersandsmall","amsquare","anbopomofo","angbopomofo","angbracketleft","angbracketright","angkhankhuthai","anglebracketleft","anglebracketleftvertical","anglebracketright","anglebracketrightvertical","angstrom","anoteleia","anudattadeva","anusvarabengali","anusvaradeva","anusvaragujarati","apaatosquare","aparen","apostrophearmenian","apostrophemod","approaches","approxequalorimage","approximatelyequal","araeaekorean","araeakorean","arc","arighthalfring","aringacute","aringbelow","arrowdashdown","arrowdashleft","arrowdashright","arrowdashup","arrowdownleft","arrowdownright","arrowdownwhite","arrowheaddownmod","arrowheadleftmod","arrowheadrightmod","arrowheadupmod","arrowleftdbl","arrowleftdblstroke","arrowleftoverright","arrowleftwhite","arrowrightdblstroke","arrowrightheavy","arrowrightoverleft","arrowrightwhite","arrowtableft","arrowtabright","arrowupdn","arrowupdnbse","arrowupdownbase","arrowupleft","arrowupleftofdown","arrowupright","arrowupwhite","asciicircummonospace","asciitildemonospace","ascript","ascriptturned","asmallhiragana","asmallkatakana","asmallkatakanahalfwidth","asteriskaltonearabic","asteriskarabic","asteriskmonospace","asterisksmall","asterism","asuperior","asymptoticallyequal","atmonospace","atsmall","aturned","aubengali","aubopomofo","audeva","augujarati","augurmukhi","aulengthmarkbengali","aumatragurmukhi","auvowelsignbengali","auvowelsigndeva","auvowelsigngujarati","avagrahadeva","aybarmenian","ayin","ayinaltonehebrew","ayinhebrew","babengali","backslashmonospace","badeva","bagujarati","bagurmukhi","bahiragana","bahtthai","bakatakana","barmonospace","bbopomofo","bcircle","bdotaccent","bdotbelow","beamedsixteenthnotes","because","becyrillic","beharabic","behfinalarabic","behinitialarabic","behiragana","behmedialarabic","behmeeminitialarabic","behmeemisolatedarabic","behnoonfinalarabic","bekatakana","benarmenian","bet","betasymbolgreek","betdagesh","betdageshhebrew","bethebrew","betrafehebrew","bhabengali","bhadeva","bhagujarati","bhagurmukhi","bhook","bihiragana","bikatakana","bilabialclick","bindigurmukhi","birusquare","blackcircle","blackdiamond","blackdownpointingtriangle","blackleftpointingpointer","blackleftpointingtriangle","blacklenticularbracketleft","blacklenticularbracketleftvertical","blacklenticularbracketright","blacklenticularbracketrightvertical","blacklowerlefttriangle","blacklowerrighttriangle","blackrectangle","blackrightpointingpointer","blackrightpointingtriangle","blacksmallsquare","blacksmilingface","blacksquare","blackstar","blackupperlefttriangle","blackupperrighttriangle","blackuppointingsmalltriangle","blackuppointingtriangle","blank","blinebelow","bmonospace","bobaimaithai","bohiragana","bokatakana","bparen","bqsquare","braceleftmonospace","braceleftsmall","braceleftvertical","bracerightmonospace","bracerightsmall","bracerightvertical","bracketleftmonospace","bracketrightmonospace","brevebelowcmb","brevecmb","breveinvertedbelowcmb","breveinvertedcmb","breveinverteddoublecmb","bridgebelowcmb","bridgeinvertedbelowcmb","bstroke","bsuperior","btopbar","buhiragana","bukatakana","bulletinverse","bulletoperator","bullseye","caarmenian","cabengali","cadeva","cagujarati","cagurmukhi","calsquare","candrabindubengali","candrabinducmb","candrabindudeva","candrabindugujarati","capslock","careof","caronbelowcmb","caroncmb","cbopomofo","ccedillaacute","ccircle","ccircumflex","ccurl","cdot","cdotaccent","cdsquare","cedillacmb","centigrade","centinferior","centmonospace","centoldstyle","centsuperior","chaarmenian","chabengali","chadeva","chagujarati","chagurmukhi","chbopomofo","cheabkhasiancyrillic","checkmark","checyrillic","chedescenderabkhasiancyrillic","chedescendercyrillic","chedieresiscyrillic","cheharmenian","chekhakassiancyrillic","cheverticalstrokecyrillic","chieuchacirclekorean","chieuchaparenkorean","chieuchcirclekorean","chieuchkorean","chieuchparenkorean","chochangthai","chochanthai","chochingthai","chochoethai","chook","cieucacirclekorean","cieucaparenkorean","cieuccirclekorean","cieuckorean","cieucparenkorean","cieucuparenkorean","circle","circlecopyrt","circleot","circlepostalmark","circlewithlefthalfblack","circlewithrighthalfblack","circumflexbelowcmb","circumflexcmb","clickalveolar","clickdental","clicklateral","clickretroflex","clubsuitblack","clubsuitwhite","cmcubedsquare","cmonospace","cmsquaredsquare","coarmenian","colonmonetary","colonmonospace","colonsign","colonsmall","colontriangularhalfmod","colontriangularmod","commaabovecmb","commaaboverightcmb","commaarabic","commaarmenian","commainferior","commamonospace","commareversedabovecmb","commareversedmod","commasmall","commasuperior","commaturnedabovecmb","commaturnedmod","compass","contourintegral","control","controlACK","controlBEL","controlBS","controlCAN","controlCR","controlDC1","controlDC2","controlDC3","controlDC4","controlDEL","controlDLE","controlEM","controlENQ","controlEOT","controlESC","controlETB","controlETX","controlFF","controlFS","controlGS","controlHT","controlLF","controlNAK","controlNULL","controlRS","controlSI","controlSO","controlSOT","controlSTX","controlSUB","controlSYN","controlUS","controlVT","cornerbracketleft","cornerbracketlefthalfwidth","cornerbracketleftvertical","cornerbracketright","cornerbracketrighthalfwidth","cornerbracketrightvertical","corporationsquare","cosquare","coverkgsquare","cparen","cruzeiro","cstretched","curlyand","curlyor","cyrBreve","cyrFlex","cyrbreve","cyrflex","daarmenian","dabengali","dadarabic","dadeva","dadfinalarabic","dadinitialarabic","dadmedialarabic","dagesh","dageshhebrew","dagujarati","dagurmukhi","dahiragana","dakatakana","dalarabic","dalet","daletdagesh","daletdageshhebrew","dalethebrew","dalfinalarabic","dammaarabic","dammalowarabic","dammatanaltonearabic","dammatanarabic","danda","dargahebrew","dargalefthebrew","dasiapneumatacyrilliccmb","dblGrave","dblanglebracketleft","dblanglebracketleftvertical","dblanglebracketright","dblanglebracketrightvertical","dblarchinvertedbelowcmb","dblarrowleft","dblarrowright","dbldanda","dblgrave","dblgravecmb","dblintegral","dbllowline","dbllowlinecmb","dbloverlinecmb","dblprimemod","dblverticalbar","dblverticallineabovecmb","dbopomofo","dbsquare","dcedilla","dcircle","dcircumflexbelow","ddabengali","ddadeva","ddagujarati","ddagurmukhi","ddalarabic","ddalfinalarabic","dddhadeva","ddhabengali","ddhadeva","ddhagujarati","ddhagurmukhi","ddotaccent","ddotbelow","decimalseparatorarabic","decimalseparatorpersian","decyrillic","dehihebrew","dehiragana","deicoptic","dekatakana","deleteleft","deleteright","deltaturned","denominatorminusonenumeratorbengali","dezh","dhabengali","dhadeva","dhagujarati","dhagurmukhi","dhook","dialytikatonos","dialytikatonoscmb","diamondsuitwhite","dieresisacute","dieresisbelowcmb","dieresiscmb","dieresisgrave","dieresistonos","dihiragana","dikatakana","dittomark","divides","divisionslash","djecyrillic","dkshade","dlinebelow","dlsquare","dmacron","dmonospace","dnblock","dochadathai","dodekthai","dohiragana","dokatakana","dollarinferior","dollarmonospace","dollaroldstyle","dollarsmall","dollarsuperior","dong","dorusquare","dotaccentcmb","dotbelowcmb","dotbelowcomb","dotkatakana","dotlessj","dotlessjstrokehook","dottedcircle","doubleyodpatah","doubleyodpatahhebrew","downtackbelowcmb","downtackmod","dparen","dsuperior","dtail","dtopbar","duhiragana","dukatakana","dz","dzaltone","dzcaron","dzcurl","dzeabkhasiancyrillic","dzecyrillic","dzhecyrillic","earth","ebengali","ebopomofo","ebreve","ecandradeva","ecandragujarati","ecandravowelsigndeva","ecandravowelsigngujarati","ecedillabreve","echarmenian","echyiwnarmenian","ecircle","ecircumflexacute","ecircumflexbelow","ecircumflexdotbelow","ecircumflexgrave","ecircumflexhookabove","ecircumflextilde","ecyrillic","edblgrave","edeva","edot","edotbelow","eegurmukhi","eematragurmukhi","efcyrillic","egujarati","eharmenian","ehbopomofo","ehiragana","ehookabove","eibopomofo","eightarabic","eightbengali","eightcircle","eightcircleinversesansserif","eightdeva","eighteencircle","eighteenparen","eighteenperiod","eightgujarati","eightgurmukhi","eighthackarabic","eighthangzhou","eighthnotebeamed","eightideographicparen","eightinferior","eightmonospace","eightoldstyle","eightparen","eightperiod","eightpersian","eightroman","eightsuperior","eightthai","einvertedbreve","eiotifiedcyrillic","ekatakana","ekatakanahalfwidth","ekonkargurmukhi","ekorean","elcyrillic","elevencircle","elevenparen","elevenperiod","elevenroman","ellipsisvertical","emacronacute","emacrongrave","emcyrillic","emdashvertical","emonospace","emphasismarkarmenian","enbopomofo","encyrillic","endashvertical","endescendercyrillic","eng","engbopomofo","enghecyrillic","enhookcyrillic","enspace","eokorean","eopen","eopenclosed","eopenreversed","eopenreversedclosed","eopenreversedhook","eparen","epsilontonos","equalmonospace","equalsmall","equalsuperior","erbopomofo","ercyrillic","ereversed","ereversedcyrillic","escyrillic","esdescendercyrillic","esh","eshcurl","eshortdeva","eshortvowelsigndeva","eshreversedloop","eshsquatreversed","esmallhiragana","esmallkatakana","esmallkatakanahalfwidth","estimated","esuperior","etarmenian","etatonos","etilde","etildebelow","etnahtafoukhhebrew","etnahtafoukhlefthebrew","etnahtahebrew","etnahtalefthebrew","eturned","eukorean","euro","evowelsignbengali","evowelsigndeva","evowelsigngujarati","exclamarmenian","exclamdbl","exclamdownsmall","exclammonospace","exclamsmall","ezh","ezhcaron","ezhcurl","ezhreversed","ezhtail","fadeva","fagurmukhi","fahrenheit","fathaarabic","fathalowarabic","fathatanarabic","fbopomofo","fcircle","fdotaccent","feharabic","feharmenian","fehfinalarabic","fehinitialarabic","fehmedialarabic","feicoptic","female","ff","ffi","ffl","fifteencircle","fifteenparen","fifteenperiod","figuredash","filledbox","filledrect","finalkaf","finalkafdagesh","finalkafdageshhebrew","finalkafhebrew","finalmem","finalmemhebrew","finalnun","finalnunhebrew","finalpe","finalpehebrew","finaltsadi","finaltsadihebrew","firsttonechinese","fisheye","fitacyrillic","fivearabic","fivebengali","fivecircle","fivecircleinversesansserif","fivedeva","fiveeighths","fivegujarati","fivegurmukhi","fivehackarabic","fivehangzhou","fiveideographicparen","fiveinferior","fivemonospace","fiveoldstyle","fiveparen","fiveperiod","fivepersian","fiveroman","fivesuperior","fivethai","fmonospace","fmsquare","fofanthai","fofathai","fongmanthai","forall","fourarabic","fourbengali","fourcircle","fourcircleinversesansserif","fourdeva","fourgujarati","fourgurmukhi","fourhackarabic","fourhangzhou","fourideographicparen","fourinferior","fourmonospace","fournumeratorbengali","fouroldstyle","fourparen","fourperiod","fourpersian","fourroman","foursuperior","fourteencircle","fourteenparen","fourteenperiod","fourthai","fourthtonechinese","fparen","franc","gabengali","gacute","gadeva","gafarabic","gaffinalarabic","gafinitialarabic","gafmedialarabic","gagujarati","gagurmukhi","gahiragana","gakatakana","gammalatinsmall","gammasuperior","gangiacoptic","gbopomofo","gcaron","gcedilla","gcircle","gcircumflex","gdot","gdotaccent","gecyrillic","gehiragana","gekatakana","geometricallyequal","gereshaccenthebrew","gereshhebrew","gereshmuqdamhebrew","gershayimaccenthebrew","gershayimhebrew","getamark","ghabengali","ghadarmenian","ghadeva","ghagujarati","ghagurmukhi","ghainarabic","ghainfinalarabic","ghaininitialarabic","ghainmedialarabic","ghemiddlehookcyrillic","ghestrokecyrillic","gheupturncyrillic","ghhadeva","ghhagurmukhi","ghook","ghzsquare","gihiragana","gikatakana","gimarmenian","gimel","gimeldagesh","gimeldageshhebrew","gimelhebrew","gjecyrillic","glottalinvertedstroke","glottalstop","glottalstopinverted","glottalstopmod","glottalstopreversed","glottalstopreversedmod","glottalstopreversedsuperior","glottalstopstroke","glottalstopstrokereversed","gmacron","gmonospace","gohiragana","gokatakana","gparen","gpasquare","gravebelowcmb","gravecmb","gravecomb","gravedeva","gravelowmod","gravemonospace","gravetonecmb","greaterequalorless","greatermonospace","greaterorequivalent","greaterorless","greateroverequal","greatersmall","gscript","gstroke","guhiragana","gukatakana","guramusquare","gysquare","haabkhasiancyrillic","haaltonearabic","habengali","hadescendercyrillic","hadeva","hagujarati","hagurmukhi","haharabic","hahfinalarabic","hahinitialarabic","hahiragana","hahmedialarabic","haitusquare","hakatakana","hakatakanahalfwidth","halantgurmukhi","hamzaarabic","hamzalowarabic","hangulfiller","hardsigncyrillic","harpoonleftbarbup","harpoonrightbarbup","hasquare","hatafpatah","hatafpatah16","hatafpatah23","hatafpatah2f","hatafpatahhebrew","hatafpatahnarrowhebrew","hatafpatahquarterhebrew","hatafpatahwidehebrew","hatafqamats","hatafqamats1b","hatafqamats28","hatafqamats34","hatafqamatshebrew","hatafqamatsnarrowhebrew","hatafqamatsquarterhebrew","hatafqamatswidehebrew","hatafsegol","hatafsegol17","hatafsegol24","hatafsegol30","hatafsegolhebrew","hatafsegolnarrowhebrew","hatafsegolquarterhebrew","hatafsegolwidehebrew","hbar","hbopomofo","hbrevebelow","hcedilla","hcircle","hcircumflex","hdieresis","hdotaccent","hdotbelow","he","heartsuitblack","heartsuitwhite","hedagesh","hedageshhebrew","hehaltonearabic","heharabic","hehebrew","hehfinalaltonearabic","hehfinalalttwoarabic","hehfinalarabic","hehhamzaabovefinalarabic","hehhamzaaboveisolatedarabic","hehinitialaltonearabic","hehinitialarabic","hehiragana","hehmedialaltonearabic","hehmedialarabic","heiseierasquare","hekatakana","hekatakanahalfwidth","hekutaarusquare","henghook","herutusquare","het","hethebrew","hhook","hhooksuperior","hieuhacirclekorean","hieuhaparenkorean","hieuhcirclekorean","hieuhkorean","hieuhparenkorean","hihiragana","hikatakana","hikatakanahalfwidth","hiriq","hiriq14","hiriq21","hiriq2d","hiriqhebrew","hiriqnarrowhebrew","hiriqquarterhebrew","hiriqwidehebrew","hlinebelow","hmonospace","hoarmenian","hohipthai","hohiragana","hokatakana","hokatakanahalfwidth","holam","holam19","holam26","holam32","holamhebrew","holamnarrowhebrew","holamquarterhebrew","holamwidehebrew","honokhukthai","hookabovecomb","hookcmb","hookpalatalizedbelowcmb","hookretroflexbelowcmb","hoonsquare","horicoptic","horizontalbar","horncmb","hotsprings","house","hparen","hsuperior","hturned","huhiragana","huiitosquare","hukatakana","hukatakanahalfwidth","hungarumlautcmb","hv","hypheninferior","hyphenmonospace","hyphensmall","hyphensuperior","hyphentwo","iacyrillic","ibengali","ibopomofo","ibreve","icaron","icircle","icyrillic","idblgrave","ideographearthcircle","ideographfirecircle","ideographicallianceparen","ideographiccallparen","ideographiccentrecircle","ideographicclose","ideographiccomma","ideographiccommaleft","ideographiccongratulationparen","ideographiccorrectcircle","ideographicearthparen","ideographicenterpriseparen","ideographicexcellentcircle","ideographicfestivalparen","ideographicfinancialcircle","ideographicfinancialparen","ideographicfireparen","ideographichaveparen","ideographichighcircle","ideographiciterationmark","ideographiclaborcircle","ideographiclaborparen","ideographicleftcircle","ideographiclowcircle","ideographicmedicinecircle","ideographicmetalparen","ideographicmoonparen","ideographicnameparen","ideographicperiod","ideographicprintcircle","ideographicreachparen","ideographicrepresentparen","ideographicresourceparen","ideographicrightcircle","ideographicsecretcircle","ideographicselfparen","ideographicsocietyparen","ideographicspace","ideographicspecialparen","ideographicstockparen","ideographicstudyparen","ideographicsunparen","ideographicsuperviseparen","ideographicwaterparen","ideographicwoodparen","ideographiczero","ideographmetalcircle","ideographmooncircle","ideographnamecircle","ideographsuncircle","ideographwatercircle","ideographwoodcircle","ideva","idieresisacute","idieresiscyrillic","idotbelow","iebrevecyrillic","iecyrillic","ieungacirclekorean","ieungaparenkorean","ieungcirclekorean","ieungkorean","ieungparenkorean","igujarati","igurmukhi","ihiragana","ihookabove","iibengali","iicyrillic","iideva","iigujarati","iigurmukhi","iimatragurmukhi","iinvertedbreve","iishortcyrillic","iivowelsignbengali","iivowelsigndeva","iivowelsigngujarati","ij","ikatakana","ikatakanahalfwidth","ikorean","ilde","iluyhebrew","imacroncyrillic","imageorapproximatelyequal","imatragurmukhi","imonospace","increment","iniarmenian","integralbottom","integraltop","intisquare","invbullet","invcircle","invsmileface","iocyrillic","iotadieresis","iotadieresistonos","iotalatin","iotatonos","iparen","irigurmukhi","ismallhiragana","ismallkatakana","ismallkatakanahalfwidth","issharbengali","istroke","isuperior","iterationhiragana","iterationkatakana","itilde","itildebelow","iubopomofo","iucyrillic","ivowelsignbengali","ivowelsigndeva","ivowelsigngujarati","izhitsacyrillic","izhitsadblgravecyrillic","jaarmenian","jabengali","jadeva","jagujarati","jagurmukhi","jbopomofo","jcaron","jcircle","jcircumflex","jcrossedtail","jdotlessstroke","jecyrillic","jeemarabic","jeemfinalarabic","jeeminitialarabic","jeemmedialarabic","jeharabic","jehfinalarabic","jhabengali","jhadeva","jhagujarati","jhagurmukhi","jheharmenian","jis","jmonospace","jparen","jsuperior","kabashkircyrillic","kabengali","kacute","kacyrillic","kadescendercyrillic","kadeva","kaf","kafarabic","kafdagesh","kafdageshhebrew","kaffinalarabic","kafhebrew","kafinitialarabic","kafmedialarabic","kafrafehebrew","kagujarati","kagurmukhi","kahiragana","kahookcyrillic","kakatakana","kakatakanahalfwidth","kappasymbolgreek","kapyeounmieumkorean","kapyeounphieuphkorean","kapyeounpieupkorean","kapyeounssangpieupkorean","karoriisquare","kashidaautoarabic","kashidaautonosidebearingarabic","kasmallkatakana","kasquare","kasraarabic","kasratanarabic","kastrokecyrillic","katahiraprolongmarkhalfwidth","kaverticalstrokecyrillic","kbopomofo","kcalsquare","kcaron","kcedilla","kcircle","kdotbelow","keharmenian","kehiragana","kekatakana","kekatakanahalfwidth","kenarmenian","kesmallkatakana","kgreenlandic","khabengali","khacyrillic","khadeva","khagujarati","khagurmukhi","khaharabic","khahfinalarabic","khahinitialarabic","khahmedialarabic","kheicoptic","khhadeva","khhagurmukhi","khieukhacirclekorean","khieukhaparenkorean","khieukhcirclekorean","khieukhkorean","khieukhparenkorean","khokhaithai","khokhonthai","khokhuatthai","khokhwaithai","khomutthai","khook","khorakhangthai","khzsquare","kihiragana","kikatakana","kikatakanahalfwidth","kiroguramusquare","kiromeetorusquare","kirosquare","kiyeokacirclekorean","kiyeokaparenkorean","kiyeokcirclekorean","kiyeokkorean","kiyeokparenkorean","kiyeoksioskorean","kjecyrillic","klinebelow","klsquare","kmcubedsquare","kmonospace","kmsquaredsquare","kohiragana","kohmsquare","kokaithai","kokatakana","kokatakanahalfwidth","kooposquare","koppacyrillic","koreanstandardsymbol","koroniscmb","kparen","kpasquare","ksicyrillic","ktsquare","kturned","kuhiragana","kukatakana","kukatakanahalfwidth","kvsquare","kwsquare","labengali","ladeva","lagujarati","lagurmukhi","lakkhangyaothai","lamaleffinalarabic","lamalefhamzaabovefinalarabic","lamalefhamzaaboveisolatedarabic","lamalefhamzabelowfinalarabic","lamalefhamzabelowisolatedarabic","lamalefisolatedarabic","lamalefmaddaabovefinalarabic","lamalefmaddaaboveisolatedarabic","lamarabic","lambdastroke","lamed","lameddagesh","lameddageshhebrew","lamedhebrew","lamfinalarabic","lamhahinitialarabic","laminitialarabic","lamjeeminitialarabic","lamkhahinitialarabic","lamlamhehisolatedarabic","lammedialarabic","lammeemhahinitialarabic","lammeeminitialarabic","largecircle","lbar","lbelt","lbopomofo","lcedilla","lcircle","lcircumflexbelow","ldot","ldotaccent","ldotbelow","ldotbelowmacron","leftangleabovecmb","lefttackbelowcmb","lessequalorgreater","lessmonospace","lessorequivalent","lessorgreater","lessoverequal","lesssmall","lezh","lfblock","lhookretroflex","lira","liwnarmenian","lj","ljecyrillic","lladeva","llagujarati","llinebelow","llladeva","llvocalicbengali","llvocalicdeva","llvocalicvowelsignbengali","llvocalicvowelsigndeva","lmiddletilde","lmonospace","lmsquare","lochulathai","logicalnotreversed","lolingthai","longs","lowlinecenterline","lowlinecmb","lowlinedashed","lparen","lsquare","lsuperior","ltshade","luthai","lvocalicbengali","lvocalicdeva","lvocalicvowelsignbengali","lvocalicvowelsigndeva","lxsquare","mabengali","macronbelowcmb","macroncmb","macronlowmod","macronmonospace","macute","madeva","magujarati","magurmukhi","mahapakhhebrew","mahapakhlefthebrew","mahiragana","maichattawalowleftthai","maichattawalowrightthai","maichattawathai","maichattawaupperleftthai","maieklowleftthai","maieklowrightthai","maiekthai","maiekupperleftthai","maihanakatleftthai","maihanakatthai","maitaikhuleftthai","maitaikhuthai","maitholowleftthai","maitholowrightthai","maithothai","maithoupperleftthai","maitrilowleftthai","maitrilowrightthai","maitrithai","maitriupperleftthai","maiyamokthai","makatakana","makatakanahalfwidth","male","mansyonsquare","maqafhebrew","mars","masoracirclehebrew","masquare","mbopomofo","mbsquare","mcircle","mcubedsquare","mdotaccent","mdotbelow","meemarabic","meemfinalarabic","meeminitialarabic","meemmedialarabic","meemmeeminitialarabic","meemmeemisolatedarabic","meetorusquare","mehiragana","meizierasquare","mekatakana","mekatakanahalfwidth","mem","memdagesh","memdageshhebrew","memhebrew","menarmenian","merkhahebrew","merkhakefulahebrew","merkhakefulalefthebrew","merkhalefthebrew","mhook","mhzsquare","middledotkatakanahalfwidth","middot","mieumacirclekorean","mieumaparenkorean","mieumcirclekorean","mieumkorean","mieumpansioskorean","mieumparenkorean","mieumpieupkorean","mieumsioskorean","mihiragana","mikatakana","mikatakanahalfwidth","minusbelowcmb","minuscircle","minusmod","minusplus","miribaarusquare","mirisquare","mlonglegturned","mlsquare","mmcubedsquare","mmonospace","mmsquaredsquare","mohiragana","mohmsquare","mokatakana","mokatakanahalfwidth","molsquare","momathai","moverssquare","moverssquaredsquare","mparen","mpasquare","mssquare","msuperior","mturned","mu1","muasquare","muchgreater","muchless","mufsquare","mugreek","mugsquare","muhiragana","mukatakana","mukatakanahalfwidth","mulsquare","mumsquare","munahhebrew","munahlefthebrew","musicalnote","musicalnotedbl","musicflatsign","musicsharpsign","mussquare","muvsquare","muwsquare","mvmegasquare","mvsquare","mwmegasquare","mwsquare","nabengali","nabla","nadeva","nagujarati","nagurmukhi","nahiragana","nakatakana","nakatakanahalfwidth","napostrophe","nasquare","nbopomofo","nbspace","ncedilla","ncircle","ncircumflexbelow","ndotaccent","ndotbelow","nehiragana","nekatakana","nekatakanahalfwidth","newsheqelsign","nfsquare","ngabengali","ngadeva","ngagujarati","ngagurmukhi","ngonguthai","nhiragana","nhookleft","nhookretroflex","nieunacirclekorean","nieunaparenkorean","nieuncieuckorean","nieuncirclekorean","nieunhieuhkorean","nieunkorean","nieunpansioskorean","nieunparenkorean","nieunsioskorean","nieuntikeutkorean","nihiragana","nikatakana","nikatakanahalfwidth","nikhahitleftthai","nikhahitthai","ninearabic","ninebengali","ninecircle","ninecircleinversesansserif","ninedeva","ninegujarati","ninegurmukhi","ninehackarabic","ninehangzhou","nineideographicparen","nineinferior","ninemonospace","nineoldstyle","nineparen","nineperiod","ninepersian","nineroman","ninesuperior","nineteencircle","nineteenparen","nineteenperiod","ninethai","nj","njecyrillic","nkatakana","nkatakanahalfwidth","nlegrightlong","nlinebelow","nmonospace","nmsquare","nnabengali","nnadeva","nnagujarati","nnagurmukhi","nnnadeva","nohiragana","nokatakana","nokatakanahalfwidth","nonbreakingspace","nonenthai","nonuthai","noonarabic","noonfinalarabic","noonghunnaarabic","noonghunnafinalarabic","nooninitialarabic","noonjeeminitialarabic","noonjeemisolatedarabic","noonmedialarabic","noonmeeminitialarabic","noonmeemisolatedarabic","noonnoonfinalarabic","notcontains","notelementof","notgreater","notgreaternorequal","notgreaternorless","notidentical","notless","notlessnorequal","notparallel","notprecedes","notsucceeds","notsuperset","nowarmenian","nparen","nssquare","nsuperior","nuhiragana","nukatakana","nukatakanahalfwidth","nuktabengali","nuktadeva","nuktagujarati","nuktagurmukhi","numbersignmonospace","numbersignsmall","numeralsigngreek","numeralsignlowergreek","numero","nun","nundagesh","nundageshhebrew","nunhebrew","nvsquare","nwsquare","nyabengali","nyadeva","nyagujarati","nyagurmukhi","oangthai","obarred","obarredcyrillic","obarreddieresiscyrillic","obengali","obopomofo","obreve","ocandradeva","ocandragujarati","ocandravowelsigndeva","ocandravowelsigngujarati","ocaron","ocircle","ocircumflexacute","ocircumflexdotbelow","ocircumflexgrave","ocircumflexhookabove","ocircumflextilde","ocyrillic","odblacute","odblgrave","odeva","odieresiscyrillic","odotbelow","oekorean","ogonekcmb","ogujarati","oharmenian","ohiragana","ohookabove","ohorn","ohornacute","ohorndotbelow","ohorngrave","ohornhookabove","ohorntilde","oi","oinvertedbreve","okatakana","okatakanahalfwidth","okorean","olehebrew","omacronacute","omacrongrave","omdeva","omegacyrillic","omegalatinclosed","omegaroundcyrillic","omegatitlocyrillic","omegatonos","omgujarati","omicrontonos","omonospace","onearabic","onebengali","onecircle","onecircleinversesansserif","onedeva","onedotenleader","oneeighth","onefitted","onegujarati","onegurmukhi","onehackarabic","onehangzhou","oneideographicparen","oneinferior","onemonospace","onenumeratorbengali","oneoldstyle","oneparen","oneperiod","onepersian","oneroman","onethai","onethird","oogonek","oogonekmacron","oogurmukhi","oomatragurmukhi","oopen","oparen","openbullet","orthogonal","oshortdeva","oshortvowelsigndeva","oslashacute","osmallhiragana","osmallkatakana","osmallkatakanahalfwidth","ostrokeacute","osuperior","otcyrillic","otildeacute","otildedieresis","oubopomofo","overline","overlinecenterline","overlinecmb","overlinedashed","overlinedblwavy","overlinewavy","overscore","ovowelsignbengali","ovowelsigndeva","ovowelsigngujarati","paampssquare","paasentosquare","pabengali","pacute","padeva","pagedown","pageup","pagujarati","pagurmukhi","pahiragana","paiyannoithai","pakatakana","palatalizationcyrilliccmb","palochkacyrillic","pansioskorean","parallel","parenleftaltonearabic","parenleftinferior","parenleftmonospace","parenleftsmall","parenleftsuperior","parenleftvertical","parenrightaltonearabic","parenrightinferior","parenrightmonospace","parenrightsmall","parenrightsuperior","parenrightvertical","paseqhebrew","pashtahebrew","pasquare","patah","patah11","patah1d","patah2a","patahhebrew","patahnarrowhebrew","patahquarterhebrew","patahwidehebrew","pazerhebrew","pbopomofo","pcircle","pdotaccent","pe","pecyrillic","pedagesh","pedageshhebrew","peezisquare","pefinaldageshhebrew","peharabic","peharmenian","pehebrew","pehfinalarabic","pehinitialarabic","pehiragana","pehmedialarabic","pekatakana","pemiddlehookcyrillic","perafehebrew","percentarabic","percentmonospace","percentsmall","periodarmenian","periodhalfwidth","periodinferior","periodmonospace","periodsmall","periodsuperior","perispomenigreekcmb","peseta","pfsquare","phabengali","phadeva","phagujarati","phagurmukhi","phieuphacirclekorean","phieuphaparenkorean","phieuphcirclekorean","phieuphkorean","phieuphparenkorean","philatin","phinthuthai","phisymbolgreek","phook","phophanthai","phophungthai","phosamphaothai","pieupacirclekorean","pieupaparenkorean","pieupcieuckorean","pieupcirclekorean","pieupkiyeokkorean","pieupkorean","pieupparenkorean","pieupsioskiyeokkorean","pieupsioskorean","pieupsiostikeutkorean","pieupthieuthkorean","pieuptikeutkorean","pihiragana","pikatakana","pisymbolgreek","piwrarmenian","plusbelowcmb","pluscircle","plusmod","plusmonospace","plussmall","plussuperior","pmonospace","pmsquare","pohiragana","pointingindexdownwhite","pointingindexleftwhite","pointingindexrightwhite","pointingindexupwhite","pokatakana","poplathai","postalmark","postalmarkface","pparen","precedes","prescription","primemod","primereversed","projective","prolongedkana","propellor","proportion","psicyrillic","psilipneumatacyrilliccmb","pssquare","puhiragana","pukatakana","pvsquare","pwsquare","qadeva","qadmahebrew","qafarabic","qaffinalarabic","qafinitialarabic","qafmedialarabic","qamats","qamats10","qamats1a","qamats1c","qamats27","qamats29","qamats33","qamatsde","qamatshebrew","qamatsnarrowhebrew","qamatsqatanhebrew","qamatsqatannarrowhebrew","qamatsqatanquarterhebrew","qamatsqatanwidehebrew","qamatsquarterhebrew","qamatswidehebrew","qarneyparahebrew","qbopomofo","qcircle","qhook","qmonospace","qof","qofdagesh","qofdageshhebrew","qofhebrew","qparen","quarternote","qubuts","qubuts18","qubuts25","qubuts31","qubutshebrew","qubutsnarrowhebrew","qubutsquarterhebrew","qubutswidehebrew","questionarabic","questionarmenian","questiondownsmall","questiongreek","questionmonospace","questionsmall","quotedblmonospace","quotedblprime","quotedblprimereversed","quoteleftreversed","quotereversed","quoterightn","quotesinglemonospace","raarmenian","rabengali","radeva","radoverssquare","radoverssquaredsquare","radsquare","rafe","rafehebrew","ragujarati","ragurmukhi","rahiragana","rakatakana","rakatakanahalfwidth","ralowerdiagonalbengali","ramiddlediagonalbengali","ramshorn","rbopomofo","rcedilla","rcircle","rdblgrave","rdotaccent","rdotbelow","rdotbelowmacron","referencemark","reharabic","reharmenian","rehfinalarabic","rehiragana","rekatakana","rekatakanahalfwidth","resh","reshdageshhebrew","reshhebrew","reversedtilde","reviahebrew","reviamugrashhebrew","revlogicalnot","rfishhook","rfishhookreversed","rhabengali","rhadeva","rhook","rhookturned","rhookturnedsuperior","rhosymbolgreek","rhotichookmod","rieulacirclekorean","rieulaparenkorean","rieulcirclekorean","rieulhieuhkorean","rieulkiyeokkorean","rieulkiyeoksioskorean","rieulkorean","rieulmieumkorean","rieulpansioskorean","rieulparenkorean","rieulphieuphkorean","rieulpieupkorean","rieulpieupsioskorean","rieulsioskorean","rieulthieuthkorean","rieultikeutkorean","rieulyeorinhieuhkorean","rightangle","righttackbelowcmb","righttriangle","rihiragana","rikatakana","rikatakanahalfwidth","ringbelowcmb","ringcmb","ringhalfleft","ringhalfleftarmenian","ringhalfleftbelowcmb","ringhalfleftcentered","ringhalfright","ringhalfrightbelowcmb","ringhalfrightcentered","rinvertedbreve","rittorusquare","rlinebelow","rlongleg","rlonglegturned","rmonospace","rohiragana","rokatakana","rokatakanahalfwidth","roruathai","rparen","rrabengali","rradeva","rragurmukhi","rreharabic","rrehfinalarabic","rrvocalicbengali","rrvocalicdeva","rrvocalicgujarati","rrvocalicvowelsignbengali","rrvocalicvowelsigndeva","rrvocalicvowelsigngujarati","rsuperior","rtblock","rturned","rturnedsuperior","ruhiragana","rukatakana","rukatakanahalfwidth","rupeemarkbengali","rupeesignbengali","rupiah","ruthai","rvocalicbengali","rvocalicdeva","rvocalicgujarati","rvocalicvowelsignbengali","rvocalicvowelsigndeva","rvocalicvowelsigngujarati","sabengali","sacutedotaccent","sadarabic","sadeva","sadfinalarabic","sadinitialarabic","sadmedialarabic","sagujarati","sagurmukhi","sahiragana","sakatakana","sakatakanahalfwidth","sallallahoualayhewasallamarabic","samekh","samekhdagesh","samekhdageshhebrew","samekhhebrew","saraaathai","saraaethai","saraaimaimalaithai","saraaimaimuanthai","saraamthai","saraathai","saraethai","saraiileftthai","saraiithai","saraileftthai","saraithai","saraothai","saraueeleftthai","saraueethai","saraueleftthai","sarauethai","sarauthai","sarauuthai","sbopomofo","scarondotaccent","schwa","schwacyrillic","schwadieresiscyrillic","schwahook","scircle","scircumflex","sdotaccent","sdotbelow","sdotbelowdotaccent","seagullbelowcmb","secondtonechinese","seenarabic","seenfinalarabic","seeninitialarabic","seenmedialarabic","segol","segol13","segol1f","segol2c","segolhebrew","segolnarrowhebrew","segolquarterhebrew","segoltahebrew","segolwidehebrew","seharmenian","sehiragana","sekatakana","sekatakanahalfwidth","semicolonarabic","semicolonmonospace","semicolonsmall","semivoicedmarkkana","semivoicedmarkkanahalfwidth","sentisquare","sentosquare","sevenarabic","sevenbengali","sevencircle","sevencircleinversesansserif","sevendeva","seveneighths","sevengujarati","sevengurmukhi","sevenhackarabic","sevenhangzhou","sevenideographicparen","seveninferior","sevenmonospace","sevenoldstyle","sevenparen","sevenperiod","sevenpersian","sevenroman","sevensuperior","seventeencircle","seventeenparen","seventeenperiod","seventhai","sfthyphen","shaarmenian","shabengali","shacyrillic","shaddaarabic","shaddadammaarabic","shaddadammatanarabic","shaddafathaarabic","shaddakasraarabic","shaddakasratanarabic","shade","shadedark","shadelight","shademedium","shadeva","shagujarati","shagurmukhi","shalshelethebrew","shbopomofo","shchacyrillic","sheenarabic","sheenfinalarabic","sheeninitialarabic","sheenmedialarabic","sheicoptic","sheqel","sheqelhebrew","sheva","sheva115","sheva15","sheva22","sheva2e","shevahebrew","shevanarrowhebrew","shevaquarterhebrew","shevawidehebrew","shhacyrillic","shimacoptic","shin","shindagesh","shindageshhebrew","shindageshshindot","shindageshshindothebrew","shindageshsindot","shindageshsindothebrew","shindothebrew","shinhebrew","shinshindot","shinshindothebrew","shinsindot","shinsindothebrew","shook","sigmafinal","sigmalunatesymbolgreek","sihiragana","sikatakana","sikatakanahalfwidth","siluqhebrew","siluqlefthebrew","sindothebrew","siosacirclekorean","siosaparenkorean","sioscieuckorean","sioscirclekorean","sioskiyeokkorean","sioskorean","siosnieunkorean","siosparenkorean","siospieupkorean","siostikeutkorean","sixarabic","sixbengali","sixcircle","sixcircleinversesansserif","sixdeva","sixgujarati","sixgurmukhi","sixhackarabic","sixhangzhou","sixideographicparen","sixinferior","sixmonospace","sixoldstyle","sixparen","sixperiod","sixpersian","sixroman","sixsuperior","sixteencircle","sixteencurrencydenominatorbengali","sixteenparen","sixteenperiod","sixthai","slashmonospace","slong","slongdotaccent","smileface","smonospace","sofpasuqhebrew","softhyphen","softsigncyrillic","sohiragana","sokatakana","sokatakanahalfwidth","soliduslongoverlaycmb","solidusshortoverlaycmb","sorusithai","sosalathai","sosothai","sosuathai","spacehackarabic","spadesuitblack","spadesuitwhite","sparen","squarebelowcmb","squarecc","squarecm","squarediagonalcrosshatchfill","squarehorizontalfill","squarekg","squarekm","squarekmcapital","squareln","squarelog","squaremg","squaremil","squaremm","squaremsquared","squareorthogonalcrosshatchfill","squareupperlefttolowerrightfill","squareupperrighttolowerleftfill","squareverticalfill","squarewhitewithsmallblack","srsquare","ssabengali","ssadeva","ssagujarati","ssangcieuckorean","ssanghieuhkorean","ssangieungkorean","ssangkiyeokkorean","ssangnieunkorean","ssangpieupkorean","ssangsioskorean","ssangtikeutkorean","ssuperior","sterlingmonospace","strokelongoverlaycmb","strokeshortoverlaycmb","subset","subsetnotequal","subsetorequal","succeeds","suhiragana","sukatakana","sukatakanahalfwidth","sukunarabic","sun","superset","supersetnotequal","supersetorequal","svsquare","syouwaerasquare","tabengali","tackdown","tackleft","tadeva","tagujarati","tagurmukhi","taharabic","tahfinalarabic","tahinitialarabic","tahiragana","tahmedialarabic","taisyouerasquare","takatakana","takatakanahalfwidth","tatweelarabic","tav","tavdages","tavdagesh","tavdageshhebrew","tavhebrew","tbar","tbopomofo","tccurl","tcedilla","tcheharabic","tchehfinalarabic","tchehinitialarabic","tchehmedialarabic","tcircle","tcircumflexbelow","tdieresis","tdotaccent","tdotbelow","tecyrillic","tedescendercyrillic","teharabic","tehfinalarabic","tehhahinitialarabic","tehhahisolatedarabic","tehinitialarabic","tehiragana","tehjeeminitialarabic","tehjeemisolatedarabic","tehmarbutaarabic","tehmarbutafinalarabic","tehmedialarabic","tehmeeminitialarabic","tehmeemisolatedarabic","tehnoonfinalarabic","tekatakana","tekatakanahalfwidth","telephone","telephoneblack","telishagedolahebrew","telishaqetanahebrew","tencircle","tenideographicparen","tenparen","tenperiod","tenroman","tesh","tet","tetdagesh","tetdageshhebrew","tethebrew","tetsecyrillic","tevirhebrew","tevirlefthebrew","thabengali","thadeva","thagujarati","thagurmukhi","thalarabic","thalfinalarabic","thanthakhatlowleftthai","thanthakhatlowrightthai","thanthakhatthai","thanthakhatupperleftthai","theharabic","thehfinalarabic","thehinitialarabic","thehmedialarabic","thereexists","thetasymbolgreek","thieuthacirclekorean","thieuthaparenkorean","thieuthcirclekorean","thieuthkorean","thieuthparenkorean","thirteencircle","thirteenparen","thirteenperiod","thonangmonthothai","thook","thophuthaothai","thothahanthai","thothanthai","thothongthai","thothungthai","thousandcyrillic","thousandsseparatorarabic","thousandsseparatorpersian","threearabic","threebengali","threecircle","threecircleinversesansserif","threedeva","threeeighths","threegujarati","threegurmukhi","threehackarabic","threehangzhou","threeideographicparen","threeinferior","threemonospace","threenumeratorbengali","threeoldstyle","threeparen","threeperiod","threepersian","threequartersemdash","threeroman","threethai","thzsquare","tihiragana","tikatakana","tikatakanahalfwidth","tikeutacirclekorean","tikeutaparenkorean","tikeutcirclekorean","tikeutkorean","tikeutparenkorean","tildebelowcmb","tildecmb","tildecomb","tildedoublecmb","tildeoperator","tildeoverlaycmb","tildeverticalcmb","timescircle","tipehahebrew","tipehalefthebrew","tippigurmukhi","titlocyrilliccmb","tiwnarmenian","tlinebelow","tmonospace","toarmenian","tohiragana","tokatakana","tokatakanahalfwidth","tonebarextrahighmod","tonebarextralowmod","tonebarhighmod","tonebarlowmod","tonebarmidmod","tonefive","tonesix","tonetwo","tonos","tonsquare","topatakthai","tortoiseshellbracketleft","tortoiseshellbracketleftsmall","tortoiseshellbracketleftvertical","tortoiseshellbracketright","tortoiseshellbracketrightsmall","tortoiseshellbracketrightvertical","totaothai","tpalatalhook","tparen","tretroflexhook","triagdn","triaglf","triagrt","triagup","ts","tsadi","tsadidagesh","tsadidageshhebrew","tsadihebrew","tsecyrillic","tsere","tsere12","tsere1e","tsere2b","tserehebrew","tserenarrowhebrew","tserequarterhebrew","tserewidehebrew","tshecyrillic","tsuperior","ttabengali","ttadeva","ttagujarati","ttagurmukhi","tteharabic","ttehfinalarabic","ttehinitialarabic","ttehmedialarabic","tthabengali","tthadeva","tthagujarati","tthagurmukhi","tturned","tuhiragana","tukatakana","tukatakanahalfwidth","tusmallhiragana","tusmallkatakana","tusmallkatakanahalfwidth","twelvecircle","twelveparen","twelveperiod","twelveroman","twentycircle","twentyhangzhou","twentyparen","twentyperiod","twoarabic","twobengali","twocircle","twocircleinversesansserif","twodeva","twodotenleader","twodotleader","twodotleadervertical","twogujarati","twogurmukhi","twohackarabic","twohangzhou","twoideographicparen","twoinferior","twomonospace","twonumeratorbengali","twooldstyle","twoparen","twoperiod","twopersian","tworoman","twostroke","twothai","twothirds","ubar","ubengali","ubopomofo","ubreve","ucaron","ucircle","ucircumflexbelow","ucyrillic","udattadeva","udblacute","udblgrave","udeva","udieresisacute","udieresisbelow","udieresiscaron","udieresiscyrillic","udieresisgrave","udieresismacron","udotbelow","ugujarati","ugurmukhi","uhiragana","uhookabove","uhorn","uhornacute","uhorndotbelow","uhorngrave","uhornhookabove","uhorntilde","uhungarumlautcyrillic","uinvertedbreve","ukatakana","ukatakanahalfwidth","ukcyrillic","ukorean","umacroncyrillic","umacrondieresis","umatragurmukhi","umonospace","underscoredbl","underscoremonospace","underscorevertical","underscorewavy","uparen","upblock","upperdothebrew","upsilondieresis","upsilondieresistonos","upsilonlatin","upsilontonos","uptackbelowcmb","uptackmod","uragurmukhi","ushortcyrillic","usmallhiragana","usmallkatakana","usmallkatakanahalfwidth","ustraightcyrillic","ustraightstrokecyrillic","utilde","utildeacute","utildebelow","uubengali","uudeva","uugujarati","uugurmukhi","uumatragurmukhi","uuvowelsignbengali","uuvowelsigndeva","uuvowelsigngujarati","uvowelsignbengali","uvowelsigndeva","uvowelsigngujarati","vadeva","vagujarati","vagurmukhi","vakatakana","vav","vavdagesh","vavdagesh65","vavdageshhebrew","vavhebrew","vavholam","vavholamhebrew","vavvavhebrew","vavyodhebrew","vcircle","vdotbelow","vecyrillic","veharabic","vehfinalarabic","vehinitialarabic","vehmedialarabic","vekatakana","venus","verticalbar","verticallineabovecmb","verticallinebelowcmb","verticallinelowmod","verticallinemod","vewarmenian","vhook","vikatakana","viramabengali","viramadeva","viramagujarati","visargabengali","visargadeva","visargagujarati","vmonospace","voarmenian","voicediterationhiragana","voicediterationkatakana","voicedmarkkana","voicedmarkkanahalfwidth","vokatakana","vparen","vtilde","vturned","vuhiragana","vukatakana","wacute","waekorean","wahiragana","wakatakana","wakatakanahalfwidth","wakorean","wasmallhiragana","wasmallkatakana","wattosquare","wavedash","wavyunderscorevertical","wawarabic","wawfinalarabic","wawhamzaabovearabic","wawhamzaabovefinalarabic","wbsquare","wcircle","wcircumflex","wdieresis","wdotaccent","wdotbelow","wehiragana","wekatakana","wekorean","weokorean","wgrave","whitebullet","whitecircle","whitecircleinverse","whitecornerbracketleft","whitecornerbracketleftvertical","whitecornerbracketright","whitecornerbracketrightvertical","whitediamond","whitediamondcontainingblacksmalldiamond","whitedownpointingsmalltriangle","whitedownpointingtriangle","whiteleftpointingsmalltriangle","whiteleftpointingtriangle","whitelenticularbracketleft","whitelenticularbracketright","whiterightpointingsmalltriangle","whiterightpointingtriangle","whitesmallsquare","whitesmilingface","whitesquare","whitestar","whitetelephone","whitetortoiseshellbracketleft","whitetortoiseshellbracketright","whiteuppointingsmalltriangle","whiteuppointingtriangle","wihiragana","wikatakana","wikorean","wmonospace","wohiragana","wokatakana","wokatakanahalfwidth","won","wonmonospace","wowaenthai","wparen","wring","wsuperior","wturned","wynn","xabovecmb","xbopomofo","xcircle","xdieresis","xdotaccent","xeharmenian","xmonospace","xparen","xsuperior","yaadosquare","yabengali","yadeva","yaekorean","yagujarati","yagurmukhi","yahiragana","yakatakana","yakatakanahalfwidth","yakorean","yamakkanthai","yasmallhiragana","yasmallkatakana","yasmallkatakanahalfwidth","yatcyrillic","ycircle","ycircumflex","ydotaccent","ydotbelow","yeharabic","yehbarreearabic","yehbarreefinalarabic","yehfinalarabic","yehhamzaabovearabic","yehhamzaabovefinalarabic","yehhamzaaboveinitialarabic","yehhamzaabovemedialarabic","yehinitialarabic","yehmedialarabic","yehmeeminitialarabic","yehmeemisolatedarabic","yehnoonfinalarabic","yehthreedotsbelowarabic","yekorean","yenmonospace","yeokorean","yeorinhieuhkorean","yerahbenyomohebrew","yerahbenyomolefthebrew","yericyrillic","yerudieresiscyrillic","yesieungkorean","yesieungpansioskorean","yesieungsioskorean","yetivhebrew","ygrave","yhook","yhookabove","yiarmenian","yicyrillic","yikorean","yinyang","yiwnarmenian","ymonospace","yod","yoddagesh","yoddageshhebrew","yodhebrew","yodyodhebrew","yodyodpatahhebrew","yohiragana","yoikorean","yokatakana","yokatakanahalfwidth","yokorean","yosmallhiragana","yosmallkatakana","yosmallkatakanahalfwidth","yotgreek","yoyaekorean","yoyakorean","yoyakthai","yoyingthai","yparen","ypogegrammeni","ypogegrammenigreekcmb","yr","yring","ysuperior","ytilde","yturned","yuhiragana","yuikorean","yukatakana","yukatakanahalfwidth","yukorean","yusbigcyrillic","yusbigiotifiedcyrillic","yuslittlecyrillic","yuslittleiotifiedcyrillic","yusmallhiragana","yusmallkatakana","yusmallkatakanahalfwidth","yuyekorean","yuyeokorean","yyabengali","yyadeva","zaarmenian","zadeva","zagurmukhi","zaharabic","zahfinalarabic","zahinitialarabic","zahiragana","zahmedialarabic","zainarabic","zainfinalarabic","zakatakana","zaqefgadolhebrew","zaqefqatanhebrew","zarqahebrew","zayin","zayindagesh","zayindageshhebrew","zayinhebrew","zbopomofo","zcircle","zcircumflex","zcurl","zdot","zdotbelow","zecyrillic","zedescendercyrillic","zedieresiscyrillic","zehiragana","zekatakana","zeroarabic","zerobengali","zerodeva","zerogujarati","zerogurmukhi","zerohackarabic","zeroinferior","zeromonospace","zerooldstyle","zeropersian","zerosuperior","zerothai","zerowidthjoiner","zerowidthnonjoiner","zerowidthspace","zhbopomofo","zhearmenian","zhebrevecyrillic","zhecyrillic","zhedescendercyrillic","zhedieresiscyrillic","zihiragana","zikatakana","zinorhebrew","zlinebelow","zmonospace","zohiragana","zokatakana","zparen","zretroflexhook","zstroke","zuhiragana","zukatakana","angbracketleftbig","angbracketleftBig","angbracketleftbigg","angbracketleftBigg","angbracketrightBig","angbracketrightbig","angbracketrightBigg","angbracketrightbigg","arrowhookleft","arrowhookright","arrowlefttophalf","arrowleftbothalf","arrownortheast","arrownorthwest","arrowrighttophalf","arrowrightbothalf","arrowsoutheast","arrowsouthwest","backslashbig","backslashBig","backslashBigg","backslashbigg","bardbl","bracehtipdownleft","bracehtipdownright","bracehtipupleft","bracehtipupright","braceleftBig","braceleftbig","braceleftbigg","braceleftBigg","bracerightBig","bracerightbig","bracerightbigg","bracerightBigg","bracketleftbig","bracketleftBig","bracketleftbigg","bracketleftBigg","bracketrightBig","bracketrightbig","bracketrightbigg","bracketrightBigg","ceilingleftbig","ceilingleftBig","ceilingleftBigg","ceilingleftbigg","ceilingrightbig","ceilingrightBig","ceilingrightbigg","ceilingrightBigg","circledotdisplay","circledottext","circlemultiplydisplay","circlemultiplytext","circleplusdisplay","circleplustext","contintegraldisplay","contintegraltext","coproductdisplay","coproducttext","floorleftBig","floorleftbig","floorleftbigg","floorleftBigg","floorrightbig","floorrightBig","floorrightBigg","floorrightbigg","hatwide","hatwider","hatwidest","intercal","integraldisplay","integraltext","intersectiondisplay","intersectiontext","logicalanddisplay","logicalandtext","logicalordisplay","logicalortext","parenleftBig","parenleftbig","parenleftBigg","parenleftbigg","parenrightBig","parenrightbig","parenrightBigg","parenrightbigg","prime","productdisplay","producttext","radicalbig","radicalBig","radicalBigg","radicalbigg","radicalbt","radicaltp","radicalvertex","slashbig","slashBig","slashBigg","slashbigg","summationdisplay","summationtext","tildewide","tildewider","tildewidest","uniondisplay","unionmultidisplay","unionmultitext","unionsqdisplay","unionsqtext","uniontext","vextenddouble","vextendsingle"],"mappings":"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AAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WA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MAEAiB,MAAA,IACAjB,IAAA,MAEAiB,MAAA,IACAjB,IAAA,MAEAiB,MAAA,IACAjB,IAAA,MAEAiB,MAAA,IACAjB,IAAA,MAEAiB,MAAA,IACAjB,IAAA,OAEAiB,MAAA,MACAjB,IAAA,QAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,MACAjB,IAAA,QAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,OAEAiB,MAAA,KACAjB,IAAA,QAEAiB,MAAA,MACAjB,IAAA,QAEAiB,MAAA,MACAjB,IAAA,QAEAiB,MAAA,MACAjB,IAAA,QAEAiB,MAAA,MACAjB,IAAA,QAEAiB,MAAA,MACAjB,IAAA,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","file":"27-48b21c93605c283b1236.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.489';\nvar pdfjsBuild = '7d7bc80e';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.489';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)('Attempting to re-parse JPEG image using \"scanLines\" ' + 'parameter found in DNL marker (0xFFDC) segment.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;"],"sourceRoot":""}