{"version":3,"sources":["webpack:///./src/store/ideas/selectors.js","webpack:///./src/pages/ideas/index.jsx","webpack:///./src/store/ideas/actions.js","webpack:///./src/utils/formattedDate.js","webpack:///./src/components/Common/PostWrapper/index.js"],"names":["getIdeasSubState","get_default","getMenu","Object","lib","createSelector","getData","selectors_isFailed","X","t","Y","Z","$","ee","e","c","IdeasWrapper","PostWrapper","a","extend","_templateObject","ideas_Ideas","componentDidMount","this","props","fetchIdeas","render","_this$props","setIdeasMenu","menu","data","isFailed","react","createElement","Helmet_default","name","content","isEmpty_default","className","react_spinners","RingLoader","color","Common_constants","loading","options","Ideas","formatOption","constants","TODOS","TIL","BOOKMARKS","react_dropdown_dist_default","onChange","flow_default","value","isObject_default","toLower_default","map_default","element","keys_default","includes_default","key","isNil_default","doneAt","findIndex_default","add_default","_default","formattedDate","createdAt","link","href","target","rel","dist_default","markdown","n","PureComponent","propTypes","prop_types","func","isRequired","shape","todos","array","til","bookmarks","bool","oneOf","defaultProps","option","label","capitalize_default","ConnectedIdeas","es","b","state","dispatch","type","actionTypes","d","__webpack_exports__","default","Layout","550","r","l","i","o","u","m","str","_split2","lodash_fp_split__WEBPACK_IMPORTED_MODULE_2___default","date","time","lodash_fp_flow__WEBPACK_IMPORTED_MODULE_3___default","lodash_fp_slice__WEBPACK_IMPORTED_MODULE_1___default","lodash_fp_join__WEBPACK_IMPORTED_MODULE_0___default","section"],"mappings":"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","file":"component---src-pages-ideas-index-jsx-842717a56429ae54c48a.js","sourcesContent":["import { createSelector } from 'reselect';\nimport { get } from 'lodash/fp';\n\nconst getIdeasSubState = get('ideas');\n\nexport const getMenu = createSelector(\n  getIdeasSubState,\n  get('menu')\n);\n\nexport const getData = createSelector(\n  getIdeasSubState,\n  get('data')\n);\n\nexport const isFailed = createSelector(\n  getIdeasSubState,\n  get('failed')\n);\n","/** @jsx createElement */\nimport { createElement, PureComponent } from 'react';\nimport { bool, oneOf, shape, func, array } from 'prop-types';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport MarkdownRenderer from 'react-markdown-renderer';\nimport Dropdown from '@wonism/react-dropdown';\nimport { RingLoader } from 'react-spinners';\nimport fp from 'lodash/fp';\nimport { TODOS, TIL, BOOKMARKS } from '~/constants';\nimport * as ideasActions from '~/store/ideas/actions';\nimport * as ideasSelectors from '~/store/ideas/selectors';\nimport Layout from '~/components/Layout';\nimport PostWrapper from '~/components/Common/PostWrapper';\nimport { PRIMARY_COLOR } from '~/components/Common/constants';\nimport formattedDate from '~/utils/formattedDate';\nimport './index.scss';\n\nconst IdeasWrapper = PostWrapper.extend`\n  margin: auto;\n  padding: 120px 0 20px;\n  max-width: 720px;\n  min-height: 100vh;\n  text-align: center;\n  @media (max-width: 1024px) {\n    padding: 70px 16px 20px 24px;\n  }\n\n  .loading-wrapper {\n    & > div {\n      margin: auto;\n    }\n  }\n\n  ul {\n    text-align: left;\n  }\n\n  li {\n    margin: 16px 0 0;\n    font-size: 14px;\n    font-weight: 400;\n\n    &.strike {\n      text-decoration: line-through;\n    }\n\n    & > span {\n      float: left;\n      margin: 0 4px 0 0;\n    }\n  }\n\n  pre {\n    margin: 16px 0 0;\n    padding: 0 0 8px 0;\n    overflow-x: auto;\n    overflow-y: hidden;\n  }\n\n  code {\n    color: #555;\n    font-weight: 300;\n  }\n\n  small {\n    display: block;\n    margin: 8px 0;\n    font-size: 10px;\n  }\n`;\n\nclass Ideas extends PureComponent {\n  static propTypes = {\n    fetchIdeas: func.isRequired,\n    setIdeasMenu: func.isRequired,\n    data: shape({\n      todos: array,\n      til: array,\n      bookmarks: array,\n    }),\n    isFailed: bool.isRequired,\n    menu: oneOf([TODOS, TIL, BOOKMARKS]).isRequired,\n  };\n\n  static defaultProps = {\n    data: null,\n  };\n\n  static formatOption = option => ({\n    value: option,\n    label: fp.capitalize(option),\n  });\n\n  componentDidMount() {\n    this.props.fetchIdeas();\n  }\n\n  render() {\n    const { setIdeasMenu, menu, data, isFailed } = this.props;\n\n    if (isFailed) {\n      return (\n        <IdeasWrapper>\n          <Helmet>\n            <title>WONISM | IDEAS</title>\n            <meta name=\"og:title\" content=\"WONISM | IDEAS\" />\n          </Helmet>\n          Failed to fetch datas\n        </IdeasWrapper>\n      );\n    }\n\n    if (fp.isEmpty(data)) {\n      return (\n        <IdeasWrapper>\n          <Helmet>\n            <title>WONISM | IDEAS</title>\n            <meta name=\"og:title\" content=\"WONISM | IDEAS\" />\n          </Helmet>\n          <div className=\"loading-wrapper\">\n            <RingLoader\n              color={PRIMARY_COLOR}\n              loading\n            />\n          </div>\n        </IdeasWrapper>\n      );\n    }\n\n    const options = [\n      Ideas.formatOption(TODOS),\n      Ideas.formatOption(TIL),\n      Ideas.formatOption(BOOKMARKS),\n    ];\n\n    return (\n      <IdeasWrapper>\n        <Helmet>\n          <title>WONISM | IDEAS</title>\n          <meta name=\"og:title\" content=\"WONISM | IDEAS\" />\n        </Helmet>\n        <Dropdown\n          options={options}\n          onChange={fp.flow(fp.get('value'), setIdeasMenu)}\n          value={Ideas.formatOption(menu)}\n        />\n        <ul>\n          {fp.isObject(data) ? (\n            fp.flow(\n              fp.get(fp.toLower(menu)),\n              fp.map((element) => {\n                // todos\n                if (fp.flow(fp.keys, fp.includes('doneAt'))(element)) {\n                  return (\n                    <li key={element.content} className={fp.isNil(element.doneAt) ? '' : 'strike'}>\n                      <span>\n                        {fp.flow(\n                          fp.get(fp.toLower(menu)),\n                          fp.findIndex({ content: element.content }),\n                          fp.add(1),\n                          fp.add(fp.__, '. ')\n                        )(data)}\n                      </span>\n                      {element.content}\n                      <br />\n                      <small>- {formattedDate(element.createdAt)}</small>\n                    </li>\n                  );\n                }\n\n                // bookmarks\n                if (fp.flow(fp.keys, fp.includes('link'))(element)) {\n                  return (\n                    <li key={element.link}>\n                      <span>\n                        {fp.flow(\n                          fp.get(fp.toLower(menu)),\n                          fp.findIndex({ link: element.link }),\n                          fp.add(1),\n                          fp.add(fp.__, '. ')\n                        )(data)}\n                      </span>\n                      <a href={element.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {element.name}\n                      </a>\n                    </li>\n                  );\n                }\n\n                // til\n                if (fp.flow(fp.keys, fp.includes('createdAt'))(element)) {\n                  return (\n                    <li key={element.content}>\n                      <span>\n                        {fp.flow(\n                          fp.get(fp.toLower(menu)),\n                          fp.findIndex({ content: element.content }),\n                          fp.add(1),\n                          fp.add(fp.__, '. ')\n                        )(data)}\n                      </span>\n                      <MarkdownRenderer markdown={element.content} />\n                      <small>- {formattedDate(element.createdAt)}</small>\n                    </li>\n                  );\n                }\n\n                return null;\n              })\n            )(data)\n          ) : null}\n        </ul>\n      </IdeasWrapper>\n    );\n  }\n}\n\nconst ConnectedIdeas = connect(\n  state => ({\n    menu: ideasSelectors.getMenu(state),\n    data: ideasSelectors.getData(state),\n    isFailed: ideasSelectors.isFailed(state),\n  }),\n  {\n    fetchIdeas: ideasActions.fetchIdeas,\n    setIdeasMenu: ideasActions.setIdeasMenu,\n  }\n)(Ideas);\n\nconst IdeasLayout = props => (\n  <Layout {...props}>\n    <ConnectedIdeas />\n  </Layout>\n);\n\nexport default IdeasLayout;\n","import {\n  FETCH_IDEAS,\n  SET_IDEAS_MENU,\n} from './actionTypes';\n\nexport const fetchIdeas = () =>\n  dispatch =>\n    dispatch({\n      type: FETCH_IDEAS,\n    });\n\nexport const setIdeasMenu = menu =>\n  dispatch =>\n    dispatch({\n      type: SET_IDEAS_MENU,\n      menu,\n    });\n","import { flow, split, slice, join } from 'lodash/fp';\n\nexport default (str) => {\n  const [date, time] = split('T')(str);\n\n  return `${date} ${flow(slice(0, 5), join(''))(time)}`;\n};\n","import styled from 'styled-components';\n\nconst PostWrapper = styled.section`\n  margin: auto;\n  padding: 120px 0 0;\n  max-width: 720px;\n  min-height: 100vh;\n  font-size: 14px;\n  @media (max-width: 1024px) {\n    padding: 70px 16px 0;\n  }\n\n  &:before,\n  &:after {\n    display: block;\n    content: '';\n    clear: both;\n  }\n\n  h1 {\n    margin: .67em 0;\n    font-size: 36px;\n  }\n\n  time {\n    margin: 1em 0;\n    font-size: 14px;\n  }\n`;\n\nexport default PostWrapper;\n"],"sourceRoot":""}